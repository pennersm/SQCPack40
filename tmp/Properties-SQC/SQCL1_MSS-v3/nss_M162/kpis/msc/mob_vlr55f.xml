<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<conf_file>
  <temp_table_ref src="nss/counters/VLR1MSC.xml"/>
  <temp_table_ref src="nss/counters/VLRNMSC.xml"/>
  <kpi name="mob_vlr55f">
    <formula>nvl(decode((VLRNMSC.TOTALAVERAGE),0,null, 
														((VLR1MSC.INTERVLRHSGSMATTEMPT + 
														VLR1MSC.INTERVLRHSUMTSATTEMPT + 
														VLR1MSC.INTERVLRRSGSMATTEMPT + 
														VLR1MSC.INTERVLRRSUMTSATTEMPT)
																	/ 
														VLRNMSC.TOTALAVERAGE)),
				 nvl(decode((VLRNMSC.SIM_AVG_REG_TOTAL + VLRNMSC.USIM_AVG_REG_TOTAL + VLRNMSC.UNKNOWN_AVG_REG_TOTAL),0,null, 
														((VLR1MSC.INTERVLRHSGSMATTEMPT + 
														VLR1MSC.INTERVLRHSUMTSATTEMPT + 
														VLR1MSC.INTERVLRRSGSMATTEMPT + 
														VLR1MSC.INTERVLRRSUMTSATTEMPT)
	 																/ 
													   (VLRNMSC.SIM_AVG_REG_TOTAL
														+ VLRNMSC.USIM_AVG_REG_TOTAL
														+ VLRNMSC.UNKNOWN_AVG_REG_TOTAL)) ),
					decode((VLRNMSC.REG_AVG_TOTAL),0,null,
														((VLR1MSC.INTERVLRHSGSMATTEMPT + 
														VLR1MSC.INTERVLRHSUMTSATTEMPT + 
														VLR1MSC.INTERVLRRSGSMATTEMPT + 
														VLR1MSC.INTERVLRRSUMTSATTEMPT)
																	/ 
														(VLRNMSC.REG_AVG_TOTAL)))
				 )
			 )	 
			</formula>
    <kpi_info>
      <title><![CDATA[Inter-VLR LU attempts per subscriber (GSM and UMTS).]]></title>
      <use><![CDATA[ Indicates amount of Inter-VLR location updates per subscriber in location area (GSM and UMTS).]]></use>
      
		<use_experience><![CDATA[ 
		<br>This KPI includes optional features.
		<br>Normal subscribers are counted.
		<br>Starting from M14.6, the UMTS LU attempts also count the I-HSPA related events (LU attempts via I-HSPA).
		<br>
		<br>This KPI is applicable for the overall parameter set: if both (SIM_USIM_MEAS_PER_LAI) and (ENH_VLR_MEAS_PER_LAC) FIFILE parameters are inactive, if (SIM_USIM_MEAS_PER_LAI) FIFILE parameter is active, if (SIM_USIM_MEAS_PER_LAI) is inactive and (ENH_VLR_MEAS_PER_LAC) is active. 
		<br>This KPI handles, in a single KPI, the processing that was previously performed in three independent KPIs: ((mob_vlr55c)) + ((mob_vlr55d)) + ((mob_vlr55e)). 
		<br>
		<br>The implemented formula covers three different KPI specifications,
		<br>This 3 to 1 KPI approach is achieved by taking advantage of the NVL function: NVL( mob_vlr55c , NVL( mob_vlr55d, mob_vlr55e ) )  
		<br>
		<br>=> If both SIM_USIM_MEAS_PER_LAI and ENH_VLR_MEAS_PER_LAC FIFILE parameters are inactive, the KPI formula is specified by "mob_vlr55c" 
		<br>=> If parameter SIM_USIM_MEAS_PER_LAI FIFILE is active, the KPI formula is specified by "mob_vlr55d"
		<br>=> If SIM_USIM_MEAS_PER_LAI is inactive and ENH_VLR_MEAS_PER_LAC is active, the KPI formula is specified by "mob_vlr55e".
		<br>
		<br>RECOMMENDED SUMMARY LEVELS: MSC
		<br>KPI CLASS: Mobility
		<br>MEASUREMENT(S): VLR measurement , part one (M82) + VLR measurement, part n (M80)
		<br>
		<br>]]></use_experience>

      <known_problems/>
      <open_questions/>
      <pm_class/>
      
      	<formula>
		&lt;br&gt;
		&lt;br&gt;            SUM( a.InterVLRHSGSMAttempt + a.InterVLRHSUMTSAttempt + a.InterVLRRSGSMAttempt + a.InterVLRRSUMTSAttempt)
		&lt;br&gt;mob_vlr55c = ---------------------------------------------------------------------------------------------------------
		&lt;br&gt;            AVG (b.TotalAverage) 
		&lt;br&gt;
		&lt;br&gt;            SUM( a.InterVLRHSGSMAttempt + a.InterVLRHSUMTSAttempt + a.InterVLRRSGSMAttempt + a.InterVLRRSUMTSAttempt)
		&lt;br&gt;mob_vlr55d = ---------------------------------------------------------------------------------------------------------
		&lt;br&gt;            AVG (b.SIM_AVG_REG_TOTAL + b.USIM_AVG_REG_TOTAL + b.UNKNOWN_AVG_REG_TOTAL)  
		&lt;br&gt; 
		&lt;br&gt;            SUM( a.InterVLRHSGSMAttempt + a.InterVLRHSUMTSAttempt + a.InterVLRRSGSMAttempt + a.InterVLRRSUMTSAttempt)
		&lt;br&gt;mob_vlr55e = ---------------------------------------------------------------------------------------------------------
		&lt;br&gt;            AVG (b.REG_AVG_TOTAL) 
		&lt;br&gt;
		&lt;br&gt; 
		&lt;br&gt;Counters from table(s)/view(s):
		&lt;br&gt;a = RNS_PS_VLR1MSC_MSC_&lt;Time&gt;, or RNS_PS_VR1MCBH_MSC_&lt;Time&gt;
		&lt;br&gt;b = RNS_PS_VLRNMSC_MSC_&lt;Time&gt;, or RNS_PS_VRNMCBH_MSC_&lt;Time&gt;
		&lt;br&gt;
		&lt;br&gt;
		&lt;br&gt; nvl(decode((VLRNMSC.TOTALAVERAGE),0,null,  
		&lt;br&gt;           ((VLR1MSC.INTERVLRHSGSMATTEMPT +  
		&lt;br&gt;             VLR1MSC.INTERVLRHSUMTSATTEMPT +  
		&lt;br&gt;             VLR1MSC.INTERVLRRSGSMATTEMPT +  
		&lt;br&gt;             VLR1MSC.INTERVLRRSUMTSATTEMPT) 
		&lt;br&gt;                  /  
		&lt;br&gt;             VLRNMSC.TOTALAVERAGE)), 
		&lt;br&gt; nvl(decode((VLRNMSC.SIM_AVG_REG_TOTAL + VLRNMSC.USIM_AVG_REG_TOTAL +
		&lt;br&gt; VLRNMSC.UNKNOWN_AVG_REG_TOTAL),0,null,  
		&lt;br&gt; 
		&lt;br&gt;           ((VLR1MSC.INTERVLRHSGSMATTEMPT +  
		&lt;br&gt;             VLR1MSC.INTERVLRHSUMTSATTEMPT +  
		&lt;br&gt;             VLR1MSC.INTERVLRRSGSMATTEMPT +  
		&lt;br&gt;             VLR1MSC.INTERVLRRSUMTSATTEMPT) 
		&lt;br&gt;                   /  
		&lt;br&gt;            (VLRNMSC.SIM_AVG_REG_TOTAL 
		&lt;br&gt;           + VLRNMSC.USIM_AVG_REG_TOTAL 
		&lt;br&gt;           + VLRNMSC.UNKNOWN_AVG_REG_TOTAL)) ), 
		&lt;br&gt; decode((VLRNMSC.REG_AVG_TOTAL),0,null, 
		&lt;br&gt;           ((VLR1MSC.INTERVLRHSGSMATTEMPT +  
		&lt;br&gt;             VLR1MSC.INTERVLRHSUMTSATTEMPT +  
		&lt;br&gt;             VLR1MSC.INTERVLRRSGSMATTEMPT +  
		&lt;br&gt;             VLR1MSC.INTERVLRRSUMTSATTEMPT) 
		&lt;br&gt;                  /  
		&lt;br&gt;             (VLRNMSC.REG_AVG_TOTAL))) 
		&lt;br&gt; ) )
		&lt;br&gt;
		</formula>
		
      <unit>[#]</unit>
      <tables>RNS_PS_VLR1MSC_{OBJ_AGG}_{TIME_AGG}, RNS_PS_VLRNMSC_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_format>float:3</kpi_format>
    <kpi_mark/>
    <kpi_alias><![CDATA[IrVLRLUAttPerSubsGSMUMTS All]]></kpi_alias>
    <area_level>all</area_level>
  </kpi>
</conf_file>
