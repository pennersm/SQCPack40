<?xml version="1.0" encoding="utf-8" ?>
<conf_file>
	<info>
		<min_obj_agg/>
		<header/>
		<addon_sorting/>
	</info>
	<temp_table_ref src="rsran/counters/CELLRES.xml">
		<counters>
			<counter alias="log_rnc_101b"> nvl(decode(sum(prxtot_denom_0+prxtot_denom_1+prxtot_denom_2+prxtot_denom_3+prxtot_denom_4),0, null,   					round( -112 + 10*log(10,  (  sum( (power( 10,( (ave_prxtot_class_0/100 )  ) ) )  *   					(prxtot_denom_0)+(power( 10,( (ave_prxtot_class_1/100 ) ) ) )  *			(prxtot_denom_1)+(power( 10,( (ave_prxtot_class_2/100 )  ) ) )  *   					(prxtot_denom_2)+(power( 10,( (ave_prxtot_class_3/100 )  ) ) )  *   					(prxtot_denom_3)+(power( 10,( (ave_prxtot_class_4/100 ) ) ) )  *   					(prxtot_denom_4) ) /sum( prxtot_denom_0+prxtot_denom_1+prxtot_denom_2+prxtot_denom_3+prxtot_denom_4 )   )     )    ,2)       ),0)</counter>
			<counter alias="log_rnc_137">nvl (round (decode ( sum(prxtot_denom_0) ,0 , 0,  (-112 + 10*  log (10,(sum (power (10,(ave_prxtot_class_0/100)) * prxtot_denom_0)/sum(prxtot_denom_0)))) ),2 ),0)</counter>
			<counter alias="log_rnc_138">nvl (round (decode ( sum(prxtot_denom_1) ,0 , 0,  (-112 + 10*  log (10,(sum (power (10,(ave_prxtot_class_1/100)) * prxtot_denom_1)/sum(prxtot_denom_1)))) ),2 ),0)</counter>
			<counter alias="log_rnc_139">nvl (round (decode ( sum(prxtot_denom_2) ,0 , 0,  (-112 + 10*  log (10,(sum (power (10,(ave_prxtot_class_2/100)) * prxtot_denom_2)/sum(prxtot_denom_2)))) ),2 ),0)</counter>
			<counter alias="log_rnc_140">nvl (round (decode ( sum(prxtot_denom_3) ,0 , 0,  (-112 + 10*  log (10,(sum (power (10,(ave_prxtot_class_3/100)) * prxtot_denom_3)/sum(prxtot_denom_3)))) ),2 ),0)</counter>
			<counter alias="log_rnc_141">nvl (round (decode ( sum(prxtot_denom_4) ,0 , 0,  (-112 + 10*  log (10,(sum (power (10,(ave_prxtot_class_4/100)) * prxtot_denom_4)/sum(prxtot_denom_4)))) ),2 ),0)</counter>
			<counter alias="log_rnc_177">nvl(decode(sum(prx_noise_denom_1),0, null, round( 10*log(10,  (  sum( (0.001*power( 10,( ((ave_prx_noise/-100 ) )/10 ) ) )  *(prx_noise_denom_1) ) /sum( prx_noise_denom_1 )   )    /0.001 )    ,2)       ),0)</counter>
			<counter alias="log_rnc_102b">nvl(decode(sum(ptxtot_denom_0+ptxtot_denom_1+ptxtot_denom_2+ptxtot_denom_3+ptxtot_denom_4),0, null,			round(10* log(10,  (  sum( (0.001*power( 10,( ( ave_ptxtot_class_0/100       )/10 ) ) )  *			(ptxtot_denom_0) +(0.001*power( 10,( ( ave_ptxtot_class_1/100       )/10 ) ) )  *			(ptxtot_denom_1)+(0.001*power( 10,( ( ave_ptxtot_class_2/100       )/10 ) ) )  *			(ptxtot_denom_2)+(0.001*power( 10,( ( ave_ptxtot_class_3/100       )/10 ) ) )  *			(ptxtot_denom_3)+(0.001*power( 10,( ( ave_ptxtot_class_4/100       )/10 ) ) )  *			(ptxtot_denom_4)) /			sum( ptxtot_denom_0 +ptxtot_denom_1+ptxtot_denom_2+ptxtot_denom_3+ptxtot_denom_4)   )    /0.001 )    ,2)       ),0)</counter>
			<counter alias="log_0">nvl(decode(sum(ptxtot_denom_0),0, null,                                                round(10* log(10,(sum((0.001*power(10,((ave_ptxtot_class_0/100)/10))) *                                                (ptxtot_denom_0)) / sum(ptxtot_denom_0))/0.001 ),2)),0)</counter>
			<counter alias="log_1">nvl(decode(sum(ptxtot_denom_1),0, null,                                                round(10* log(10,(sum((0.001*power(10,((ave_ptxtot_class_1/100)/10))) *                                                (ptxtot_denom_1)) / sum(ptxtot_denom_1))/0.001 ),2)),0)</counter>
			<counter alias="log_2">nvl(decode(sum(ptxtot_denom_2),0, null,                                                round(10* log(10,(sum((0.001*power(10,((ave_ptxtot_class_2/100)/10))) *                                                (ptxtot_denom_2)) / sum(ptxtot_denom_2))/0.001 ),2)),0)</counter>
			<counter alias="log_3">nvl(decode(sum(ptxtot_denom_3),0, null,                                                round(10* log(10,(sum((0.001*power(10,((ave_ptxtot_class_3/100)/10))) *                                                (ptxtot_denom_3)) / sum(ptxtot_denom_3))/0.001 ),2)),0)</counter>
			<counter alias="log_4">nvl(decode(sum(ptxtot_denom_4),0, null,                                                round(10* log(10,(sum((0.001*power(10,((ave_ptxtot_class_4/100)/10))) *                                                (ptxtot_denom_4)) / sum(ptxtot_denom_4))/0.001 ),2)),0)</counter>
			<counter alias="ave_trx_modify_rnc_521">nvl(decode(sum(nbr_of_rls),0, null, round( 10*log(10,  (  sum( (0.001*power( 10,( (-10+(ave_trx_for_rl_in_cell/2 ) )/10 ) ) )* (nbr_of_rls) ) /sum( nbr_of_rls )   )    /0.001 )    ,2)       ),0)</counter>
			<counter alias="ave_resid_ul_power_1">nvl(ROUND(DECODE(NVL(SUM(RESID_UL_POWER_SAMPLES),0),0,0,10*LOG(10,(SUM(RESID_UL_POWER_SAMPLES*(POWER(10,(AVE_RESID_UL_POWER/10))/1000))/SUM(RESID_UL_POWER_SAMPLES))*1000)),3),0)</counter>
			<counter alias="dura_hsdpa_users_81_to_96_1">nvl(SUM(DURA_HSDPA_USERS_81_TO_96),0)</counter>
			<counter alias="dura_hsdpa_users_73_to_80_1">nvl(SUM(DURA_HSDPA_USERS_73_TO_80),0)</counter>
			<counter alias="dura_hsupa_users_73_to_80_1">nvl(SUM(DURA_HSUPA_USERS_73_TO_80),0)</counter>
			<counter alias="max_avail_r99_dl_code_1">nvl(MAX(MAX_AVAIL_R99_DL_CODE),0)</counter>
			<counter alias="dura_hsupa_users_81_to_96_1">nvl(SUM(DURA_HSUPA_USERS_81_TO_96),0)</counter>
			<counter alias="max_hsupa_users_in_serv_cell_1">nvl(MAX(MAX_HSUPA_USERS_IN_SERV_CELL),0)</counter>
			<counter alias="dura_hsdpa_users_113_or_more_1">nvl(SUM(DURA_HSDPA_USERS_113_OR_MORE),0)</counter>
			<counter alias="cell_resource_spare_6_1">nvl(SUM(CELL_RESOURCE_SPARE_6),0)</counter>
			<counter alias="sum_hsupa_users_in_serv_cell_1">nvl(SUM(SUM_HSUPA_USERS_IN_SERV_CELL),0)</counter>
			<counter alias="dura_hsdpa_users_97_to_112_1">nvl(SUM(DURA_HSDPA_USERS_97_TO_112),0)</counter>
			<counter alias="dura_hsupa_users_97_to_112_1">nvl(SUM(DURA_HSUPA_USERS_97_TO_112),0)</counter>
			<counter alias="dura_hsupa_users_113_or_more_1">nvl(SUM(DURA_HSUPA_USERS_113_OR_MORE),0)</counter>
            <counter alias="cell_resource_spare_5_1">nvl(SUM(CELL_RESOURCE_SPARE_5),0)</counter>
            <counter alias="chan_code_sf16_hs_request_1">nvl(SUM(CHAN_CODE_SF16_HS_REQUEST),0)</counter>
            <counter alias="rtwp_too_low _1">nvl(SUM(RTWP_TOO_LOW ),0)</counter>
            <counter alias="bmc_data_request_1">nvl(SUM(BMC_DATA_REQUEST),0)</counter>
            <counter alias="bmc_data_indication_1">nvl(SUM(BMC_DATA_INDICATION),0)</counter>
            <counter alias="bmc_data_confirmation_1">nvl(SUM(BMC_DATA_CONFIRMATION),0)</counter>
            <counter alias="ctch_blk_scheduled_1">nvl(SUM(CTCH_BLK_SCHEDULED),0)</counter>
            <counter alias="ctch_blk_fach_discard_1">nvl(SUM(CTCH_BLK_FACH_DISCARD),0)</counter>
            <counter alias="access_restr_active_samples_1">nvl(SUM(ACCESS_RESTR_ACTIVE_SAMPLES),0)</counter>
            <counter alias="access_classes_blocked_1">nvl(SUM(ACCESS_CLASSES_BLOCKED),0)</counter>
            <counter alias="meh_active_duration_1">nvl(SUM(MEH_ACTIVE_DURATION),0)</counter>
            <counter alias="meh_activations_1">nvl(SUM(MEH_ACTIVATIONS),0)</counter>
		</counters>
	</temp_table_ref>
</conf_file>
