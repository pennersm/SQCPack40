<?xml version="1.0" encoding="UTF-8"?>
<conf_file>
  <info>
    <release number="jflx"/>
    <dst/>
    <implementation/>
    <min_obj_agg/>
    <maxrows>100</maxrows>
    <header>CELLRES (Cell Resource)</header>
    <csv_title>CELLRES (Cell Resource)</csv_title>
    <report-description>Cell Resource</report-description>
    <obj_number>20</obj_number>
    <csv_rule>reuse</csv_rule>
    <addon_sorting/>
    <wrap_header>off</wrap_header>
    <help_file>about_kpi_help.htm</help_file>
    <nokia_counter_id_help_file/>
    <nokia_counter_db_help_file/>
    <external_kpi_help_file/>
  </info>
  <column_order>
    <period_duration/>
    <ave_prxtot_class_0/>
    <prxtot_denom_0/>
    <ave_prxtot_class_1/>
    <prxtot_denom_1/>
    <ave_prxtot_class_2/>
    <prxtot_denom_2/>
    <ave_prxtot_class_3/>
    <prxtot_denom_3/>
    <ave_prxtot_class_4/>
    <prxtot_denom_4/>
    <ave_prx_noise/>
    <prx_noise_denom_1/>
    <max_prx_noise_value/>
    <min_prx_noise_value/>
    <ave_ptxtot_class_0/>
    <ptxtot_denom_0/>
    <ave_ptxtot_class_1/>
    <ptxtot_denom_1/>
    <ave_ptxtot_class_2/>
    <ptxtot_denom_2/>
    <ave_ptxtot_class_3/>
    <ptxtot_denom_3/>
    <ave_ptxtot_class_4/>
    <ptxtot_denom_4/>
    <ave_lrt_class_0/>
    <lrt_denom_0/>
    <ave_lrt_class_1/>
    <lrt_denom_1/>
    <ave_lrt_class_2/>
    <lrt_denom_2/>
    <ave_lrt_class_3/>
    <lrt_denom_3/>
    <ave_lrt_class_4/>
    <lrt_denom_4/>
    <ave_lnrt_class_0/>
    <lnrt_denom_0/>
    <ave_lnrt_class_1/>
    <lnrt_denom_1/>
    <ave_lnrt_class_2/>
    <lnrt_denom_2/>
    <ave_lnrt_class_3/>
    <lnrt_denom_3/>
    <ave_lnrt_class_4/>
    <lnrt_denom_4/>
    <ave_ptx_nrt_class_0/>
    <ptx_nrt_denom_0/>
    <ave_ptx_nrt_class_1/>
    <ptx_nrt_denom_1/>
    <ave_ptx_nrt_class_2/>
    <ptx_nrt_denom_2/>
    <ave_ptx_nrt_class_3/>
    <ptx_nrt_denom_3/>
    <ave_ptx_nrt_class_4/>
    <ptx_nrt_denom_4/>
    <ave_rach_load/>
    <rach_denom_0/>
    <ave_rach_decod_msgs/>
    <rach_denom_1/>
    <ave_succ_decod_msgs/>
    <rach_denom_2/>
    <ave_rach_throughput/>
    <rach_denom_3/>
    <ave_rach_data_throughput/>
    <rach_denom_4/>
    <ave_sccpch_inc_pch_load/>
    <sccpch_load_denom_0/>
    <ave_fach_u_tot_tput_sccp_pch/>
    <fach_user_tot_tput_denom_0/>
    <ave_fach_udata_tp_sccpch_pch/>
    <fach_u_data_tput_denom_0/>
    <ave_pch_throughput/>
    <pch_throughput_denom_0/>
    <code_capacity/>
    <denom_code_capacity/>
    <min_code_occupancy_percent/>
    <max_code_occupance_percent/>
    <no_codes_available_sf4/>
    <no_codes_available_sf8/>
    <no_codes_available_sf16/>
    <no_codes_available_sf32/>
    <no_codes_available_sf64/>
    <no_codes_available_sf128/>
    <no_codes_available_sf256/>
    <nbr_succ_code_tree_allo/>
    <ave_avail_pool_capa_dl/>
    <nbr_of_pool_rep_dl/>
    <ave_avail_pool_capa_ul/>
    <nbr_of_pool_rep_ul/>
    <nbr_of_cells/>
    <ave_trx_for_rl_in_cell/>
    <nbr_of_rls/>
    <sum_sqr_for_rl_in_cell/>
    <nbr_of_rl_meas_reps/>
    <ave_ptx_rt_class_0/>
    <ptx_rt_denom_0/>
    <ave_ptx_rt_class_1/>
    <ptx_rt_denom_1/>
    <ave_ptx_rt_class_2/>
    <ptx_rt_denom_2/>
    <ave_ptx_rt_class_3/>
    <ptx_rt_denom_3/>
    <ave_ptx_rt_class_4/>
    <ptx_rt_denom_4/>
    <ave_sccpch_load/>
    <sccpch_load_denom_1/>
    <ave_fach_user_tot_tput/>
    <fach_user_tot_tput_denom_1/>
    <ave_fach_udata_tp_sccpch/>
    <fach_u_data_tput_denom_1/>
    <WBTS_RESET_DUE_USER_ACTION/>
    <WBTS_RESET_DUE_RNC/>
    <WBTS_RESET_DUE_BTS/>
    <WBTS_RESET_SIGN_UNIT_FAIL/>
    <WCELL_TO_BLO_BY_USER/>
    <WCELL_TO_BLO_BY_BTS/>
    <WCELL_TO_BLO_BY_SYS_FAIL/>
    <WCELL_TO_BLO_BY_LINK_FAIL/>
    <WCELL_TO_BLO_BY_SHUT_DOWN/>
    <WCELL_TO_BLO_BY_MEAS_FAIL/>
    <WCELL_TO_BLO_BY_BTS_BLOCK/>
    <WCELL_TO_BLO_IN_INIT/>
    <WCELL_TO_WO_UNSUCC_USER/>
    <WCELL_TO_WO_UNSUCC_BTS/>
    <WCELL_TO_WO_UNSUCC_SYS_FAIL/>
    <WCELL_TO_WO_UNSUCC_LINK_FAIL/>
    <WCELL_TO_WO_UNSUCC_SHUT_DOWN/>
    <WCELL_TO_WO_UNSUCC_MEAS_FAIL/>
    <WCELL_TO_WO_UNSUCC_BTS_BLOCK/>
    <WCELL_TO_WO_UNSUCC_INIT/>
    <WCELL_BLO_TO_WO_SUCCESS/>
    <FACH_THRPUT_SAB_USER_SIGN/>
    <FACH_THRPUT_SAB_USER_SIG_DEN/>
    <FACH_THRPUT_SAB_USER/>
    <FACH_THRPUT_SAB_USER_DEN/>
    <AVE_AVAIL_PERC_POOL_CAPA_DL/>
    <AVE_AVAIL_PERC_POOL_CAPA_UL/>
    <NBR_OF_BTS_HW_CAPA_ALLOC_DL/>
    <NBR_OF_BTS_HW_CAPA_ALLOC_UL/>
    <AVG_NON_HSDPA_PWR/>
    <AVG_NON_HSDPA_PWR_DENOM/>
    <AVG_ACTIVE_NON_HSDPA_PWR/>
    <AVG_ACT_NON_HSDPA_PWR_DENOM/>
    <RB_DOWNGR_DUE_OLC_TFC_SUBS/>
    <RB_DOWNGR_DUE_DYLO_RL_POWER/>
    <CELL_RESOURCE_SPARE_1/>
    <RB_DOWNGR_DUE_PBS_AAL2/>
    <RB_DOWNGR_DUE_PBS_BTS/>
    <RB_DOWNGR_DUE_PBS_INTERF/>
    <RB_DOWNGR_DUE_PBS_SPREAD/>
    <CELL_RESOURCE_SPARE_2/>
    <RB_DOWNGR_DUE_PRE_EMP_AAL2/>
    <RB_DOWNGR_DUE_PRE_EMP_BTS/>
    <RB_DOWNGR_DUE_PRE_EMP_INTERF/>
    <RB_DOWNGR_DUE_PRE_EMP_SPREAD/>
    <RB_DOWNGR_DUE_OLC_RL_RECONF/>
    <RB_RELEASE_DUE_DYLO_RL_POWER/>
    <CELL_RESOURCE_SPARE_3/>
    <RB_RELEASE_DUE_PBS_AAL2/>
    <RB_RELEASE_DUE_PBS_BTS/>
    <RB_RELEASE_DUE_PBS_INTERF/>
    <RB_RELEASE_DUE_PBS_SPREAD/>
    <CELL_RESOURCE_SPARE_4/>
    <RB_RELEASE_DUE_PRE_EMP_AAL2/>
    <RB_RELEASE_DUE_PRE_EMP_BTS/>
    <RB_RELEASE_DUE_PRE_EMP_INTF/>
    <RB_RELEASE_DUE_PRE_EMP_SPREA/>
    <RB_RELEASE_DUE_OLC_RL_RECONF/>
    <DUR_HSDPA_NO_USERS/>
    <DUR_HSDPA_USERS_1_OR_2/>
    <DUR_HSDPA_USERS_3_OR_4/>
    <DUR_HSDPA_USERS_5_OR_6/>
    <DUR_HSDPA_USERS_7_OR_8/>
    <DUR_HSDPA_USERS_9_OR_10/>
    <DUR_HSDPA_USERS_11_OR_12/>
    <DUR_HSDPA_USERS_13_OR_14/>
    <DUR_HSDPA_USERS_15_OR_16/>
    <SUM_RACH_ACK_PREAMBLES/>
    <DENOM_RACH_ACK_PREAMBLES/>
    <AVAIL_WCELL_IN_WO_STATE/>
    <AVAIL_WCELL_BLOCKED_BY_USER/>
    <AVAIL_WCELL_EXISTS_IN_RNW_DB/>
    <CE_SAMPLE_AMOUNT/>
    <AVE_CE_USED_AMR/>
    <AVE_CE_USED_CS_CONV_64/>
    <AVE_CE_USED_CS_STR_14_4/>
    <AVE_CE_USED_CS_STR_57_6/>
    <AVE_CE_USED_PS_STR_8_UL/>
    <AVE_CE_USED_PS_STR_16_UL/>
    <AVE_CE_USED_PS_STR_32_UL/>
    <AVE_CE_USED_PS_STR_64_UL/>
    <AVE_CE_USED_PS_STR_128_UL/>
    <AVE_CE_USED_PS_STR_8_DL/>
    <AVE_CE_USED_PS_STR_16_DL/>
    <AVE_CE_USED_PS_STR_32_DL/>
    <AVE_CE_USED_PS_STR_64_DL/>
    <AVE_CE_USED_PS_STR_128_DL/>
    <AVE_CE_USED_PS_STR_256_DL/>
    <AVE_CE_USED_PS_STR_384_DL/>
    <AVE_CE_USED_PS_INT_8_UL/>
    <AVE_CE_USED_PS_INT_16_UL/>
    <AVE_CE_USED_PS_INT_32_UL/>
    <AVE_CE_USED_PS_INT_64_UL/>
    <AVE_CE_USED_PS_INT_128_UL/>
    <AVE_CE_USED_PS_INT_256_UL/>
    <AVE_CE_USED_PS_INT_384_UL/>
    <AVE_CE_USED_PS_INT_8_DL/>
    <AVE_CE_USED_PS_INT_16_DL/>
    <AVE_CE_USED_PS_INT_32_DL/>
    <AVE_CE_USED_PS_INT_64_DL/>
    <AVE_CE_USED_PS_INT_128_DL/>
    <AVE_CE_USED_PS_INT_256_DL/>
    <AVE_CE_USED_PS_INT_384_DL/>
    <AVE_CE_USED_PS_BGR_8_UL/>
    <AVE_CE_USED_PS_BGR_16_UL/>
    <AVE_CE_USED_PS_BGR_32_UL/>
    <AVE_CE_USED_PS_BGR_64_UL/>
    <AVE_CE_USED_PS_BGR_128_UL/>
    <AVE_CE_USED_PS_BGR_256_UL/>
    <AVE_CE_USED_PS_BGR_384_UL/>
    <AVE_CE_USED_PS_BGR_8_DL/>
    <AVE_CE_USED_PS_BGR_16_DL/>
    <AVE_CE_USED_PS_BGR_32_DL/>
    <AVE_CE_USED_PS_BGR_64_DL/>
    <AVE_CE_USED_PS_BGR_128_DL/>
    <AVE_CE_USED_PS_BGR_256_DL/>
    <AVE_CE_USED_PS_BGR_384_DL/>
    <RB_DOWNGR_DUE_THRPOPT/>
    <RB_RELEASE_DUE_THRPOPT/>
    <MAXIMUM_PRXTOTAL/>
    <MINIMUM_PRXTOTAL/>
    <MAXIMUM_PTXTOTAL/>
    <MINIMUM_PTXTOTAL/>
    <MIN_PTX_TARGET_PS/>
    <MAX_PTX_TARGET_PS/>
    <AVE_PTX_TARGET_PS/>
    <PTX_TARGET_PS_DENOM/>
    <MIN_HSPA_DL_POWER/>
    <MAX_HSPA_DL_POWER/>
    <AVE_HSPA_DL_POWER/>
    <HSPA_DL_POWER_SAMPLES/>
    <DURA_HSDPA_USERS_17_TO_20/>
    <DURA_HSDPA_USERS_21_TO_24/>
    <DURA_HSDPA_USERS_25_TO_28/>
    <DURA_HSDPA_USERS_29_TO_32/>
    <DURA_HSDPA_USERS_33_TO_36/>
    <DURA_HSDPA_USERS_37_TO_40/>
    <DURA_HSDPA_USERS_41_TO_44/>
    <DURA_HSDPA_USERS_45_TO_48/>
    <DURA_HSDPA_5_CODE/>
    <DURA_HSDPA_6_CODE/>
    <DURA_HSDPA_7_CODE/>
    <DURA_HSDPA_8_CODE/>
    <DURA_HSDPA_9_CODE/>
    <DURA_HSDPA_10_CODE/>
    <DURA_HSDPA_11_CODE/>
    <DURA_HSDPA_12_CODE/>
    <DURA_HSDPA_13_CODE/>
    <DURA_HSDPA_14_CODE/>
    <DURA_HSDPA_15_CODE/>
    <CHAN_CODE_SF4_REQUEST/>
    <CHAN_CODE_SF8_REQUEST/>
    <CHAN_CODE_SF16_REQUEST/>
    <CHAN_CODE_SF32_REQUEST/>
    <CHAN_CODE_SF64_REQUEST/>
    <CHAN_CODE_SF128_REQUEST/>
    <CHAN_CODE_SF256_REQUEST/>
    <CH_CODE_DOWNG_RT/>
    <CH_CODE_DOWNG_NRT_DCH/>
    <BTS_HSUPA_HW_NOT_LIMITED_DUR/>
    <BTS_HSUPA_HW_LIMITED_DUR/>
    <BTS_HSUPA_NO_HW_CAPA_DUR/>
    <DUR_HSUPA_NO_USERS/>
    <DUR_HSUPA_USERS_1_OR_2/>
    <DUR_HSUPA_USERS_3_OR_4/>
    <DUR_HSUPA_USERS_5_OR_6/>
    <DUR_HSUPA_USERS_7_OR_8/>
    <DUR_HSUPA_USERS_9_OR_10/>
    <DUR_HSUPA_USERS_11_OR_12/>
    <DUR_HSUPA_USERS_13_OR_14/>
    <DUR_HSUPA_USERS_15_OR_16/>
    <DUR_HSUPA_USERS_17_OR_18/>
    <DUR_HSUPA_USERS_19_OR_20/>
    <MAX_HSDPA_USERS_IN_CELL/>
    <MAX_HSUPA_USERS_IN_CELL/>
    <SUM_HSDPA_USERS_IN_CELL/>
    <DENOM_HSDPA_USERS_PER_CELL/>
    <SUM_HSUPA_USERS_IN_CELL/>
    <DENOM_HSUPA_USERS_PER_CELL/>
    <AMR_TXPOW_LOAD_UNDERLOAD/>
    <AMR_TXPOW_LOAD_BELOW_TARGET/>
    <AMR_TXPOW_LOAD_OVER_TARGET/>
    <AMR_TXPOW_LOAD_OVERLOAD/>
    <AMR_CODE_LOAD_UNDERLOAD/>
    <AMR_CODE_LOAD_BELOW_TARGET/>
    <AMR_CODE_LOAD_OVER_TARGET/>
    <AMR_CODE_LOAD_OVERLOAD/>
    <AMR_TRANSM_LOAD_UNDERLOAD/>
    <AMR_TRANSM_LOAD_BELOW_TARGET/>
    <AMR_TRANSM_LOAD_OVER_TARGET/>
    <AMR_TRANSM_LOAD_OVERLOAD/>
    <SUM_HSDSCH_MACD_STREA/>
    <DENOM_HSDSCH_MACD_STREA/>
    <SUM_HSDSCH_MACD_INTERA/>
    <DENOM_HSDSCH_MACD_INTERA/>
    <SUM_HSDSCH_MACD_BGR/>
    <DENOM_HSDSCH_MACD_BGR/>
    <SUM_EDCH_MACD_STREA/>
    <DENOM_EDCH_MACD_STREA/>
    <SUM_EDCH_MACD_INTERA/>
    <DENOM_EDCH_MACD_INTERA/>
    <SUM_EDCH_MACD_BGR/>
    <DENOM_EDCH_MACD_BGR/>
    <DURA_HSDPA_USERS_1/>
    <DURA_HSDPA_USERS_3/>
    <DURA_HSDPA_USERS_49_TO_52/>
    <DURA_HSDPA_USERS_53_TO_56/>
    <DURA_HSDPA_USERS_57_TO_60/>
    <DURA_HSDPA_USERS_61_TO_64/>
    <DUR_HSUPA_USERS_1/>
    <DUR_HSUPA_USERS_3/>
    <RTWP_CLASS_0/>
    <RTWP_CLASS_1/>
    <RTWP_CLASS_2/>
    <RTWP_CLASS_3/>
    <RTWP_CLASS_4/>
    <RTWP_CLASS_5/>
    <RTWP_CLASS_6/>
    <RTWP_CLASS_7/>
    <RTWP_CLASS_8/>
    <RTWP_CLASS_9/>
    <RTWP_CLASS_10/>
    <RTWP_CLASS_11/>
    <RTWP_CLASS_12/>
    <RTWP_CLASS_13/>
    <RTWP_CLASS_14/>
    <RTWP_CLASS_15/>
    <RTWP_CLASS_16/>
    <RTWP_CLASS_17/>
    <RTWP_CLASS_18/>
    <RTWP_CLASS_19/>
    <RTWP_CLASS_20/>
    <RTWP_CLASS_21/>
    <TX_CR_PWR_CLASS_0/>
    <TX_CR_PWR_CLASS_1/>
    <TX_CR_PWR_CLASS_2/>
    <TX_CR_PWR_CLASS_3/>
    <TX_CR_PWR_CLASS_4/>
    <TX_CR_PWR_CLASS_5/>
    <TX_CR_PWR_CLASS_6/>
    <TX_CR_PWR_CLASS_7/>
    <TX_CR_PWR_CLASS_8/>
    <TX_CR_PWR_CLASS_9/>
    <TX_CR_PWR_CLASS_10/>
    <TX_CODE_PWR_CLASS_0/>
    <TX_CODE_PWR_CLASS_1/>
    <TX_CODE_PWR_CLASS_2/>
    <TX_CODE_PWR_CLASS_3/>
    <TX_CODE_PWR_CLASS_4/>
    <TX_CODE_PWR_CLASS_5/>
    <TX_CODE_PWR_CLASS_6/>
    <TX_CODE_PWR_CLASS_7/>
    <TX_CODE_PWR_CLASS_8/>
    <TX_CODE_PWR_CLASS_9/>
    <DURA_HSDPA_USERS_17_OR_18/>
    <DURA_HSDPA_USERS_65_TO_72/>
    <DURA_HSUPA_USERS_21_TO_24/>
    <DURA_HSUPA_USERS_25_TO_28/>
    <DURA_HSUPA_USERS_29_TO_32/>
    <DURA_HSUPA_USERS_33_TO_36/>
    <DURA_HSUPA_USERS_37_TO_40/>
    <DURA_HSUPA_USERS_41_TO_44/>
    <DURA_HSUPA_USERS_45_TO_48/>
    <DURA_HSUPA_USERS_49_TO_52/>
    <DURA_HSUPA_USERS_53_TO_56/>
    <DURA_HSUPA_USERS_57_TO_60/>
    <DURA_HSUPA_USERS_61_TO_64/>
    <DURA_HSUPA_USERS_65_TO_72/>
    <WCELL_POWER_SAVING_MODE_ACT/>
    <AVAIL_WCELL_IN_POWER_SAVING/>
    <RB_DOWNGR_DUE_PBS_INTERF_UL/>
    <RB_RELEASE_DUE_PBS_INTERF_UL/>
    <RB_REL_DUE_PRE_EMP_INTF_UL/>
    <AVE_RESID_UL_POWER/>
    <RESID_UL_POWER_SAMPLES/>
    <DURA_HSUPA_USERS_73_TO_80/>
    <DURA_HSUPA_USERS_81_TO_96/>
    <DURA_HSUPA_USERS_97_TO_112/>
    <DURA_HSUPA_USERS_113_OR_MORE/>
    <MAX_HSUPA_USERS_IN_SERV_CELL/>
    <SUM_HSUPA_USERS_IN_SERV_CELL/>
    <DURA_HSDPA_USERS_73_TO_80/>
    <DURA_HSDPA_USERS_81_TO_96/>
    <DURA_HSDPA_USERS_97_TO_112/>
    <DURA_HSDPA_USERS_113_OR_MORE/>
    <CELL_RESOURCE_SPARE_5/>
    <CELL_RESOURCE_SPARE_6/>
    <MAX_AVAIL_R99_DL_CODE/>
    <CHAN_CODE_SF16_HS_REQUEST/>
    <RTWP_TOO_LOW/>
    <BMC_DATA_REQUEST/>
    <BMC_DATA_INDICATION/>
    <BMC_DATA_CONFIRMATION/>
    <CTCH_BLK_SCHEDULED/>
    <CTCH_BLK_FACH_DISCARD/>
    <ACCESS_RESTR_ACTIVE_SAMPLES/>
    <ACCESS_CLASSES_BLOCKED/>
    <MEH_ACTIVE_DURATION/>
    <MEH_ACTIVATIONS/>
    <ACCESS_RESTR_ACT_BTS_SAMPLES/>
    <period_duration_sum/>
  </column_order>
  <temp_table name="CELLRES" omes_name="Cell_Resource" meas_level="PLMN/RSRAN-RNC/RSRAN-WBTS/RSRAN-WCEL/RSRAN-MCC/RSRAN-MNC" type="PM" master="yes" pragma="RSRAN" create="yes">
    <koala_meas_id>CELLRES</koala_meas_id>
	<last_mo_level>RSRAN-WCEL</last_mo_level>
    <counters>
          <counter alias="period_duration" time-alias="period_duration" time-formula="SUM(period_duration)" object-formula="AVG(period_duration)">SUM(period_duration)</counter>
          <counter alias="ave_prxtot_class_0" symmetrical="false">(((DECODE(SUM(PRXTOT_DENOM_0),0,-112.1,10*LOG(10,(SUM(PRXTOT_DENOM_0*0.001*POWER(10,((ave_prxtot_class_0/621*62-112.1)/10)))/SUM(PRXTOT_DENOM_0))/0.001)))+112)*621/62+1)</counter>
          <counter alias="prxtot_denom_0" symmetrical="false">SUM(prxtot_denom_0)</counter>
          <counter alias="ave_prxtot_class_1" symmetrical="false">(((DECODE(SUM(PRXTOT_DENOM_1),0,-112.1,10*LOG(10,(SUM(PRXTOT_DENOM_1*0.001*POWER(10,((ave_prxtot_class_1/621*62-112.1)/10)))/SUM(PRXTOT_DENOM_1))/0.001)))+112)*621/62+1)</counter>
          <counter alias="prxtot_denom_1" symmetrical="false">SUM(prxtot_denom_1)</counter>
          <counter alias="ave_prxtot_class_2" symmetrical="false">(((DECODE(SUM(PRXTOT_DENOM_2),0,-112.1,10*LOG(10,(SUM(PRXTOT_DENOM_2*0.001*POWER(10,((ave_prxtot_class_2/621*62-112.1)/10)))/SUM(PRXTOT_DENOM_2))/0.001)))+112)*621/62+1)</counter>
          <counter alias="prxtot_denom_2" symmetrical="false">SUM(prxtot_denom_2)</counter>
          <counter alias="ave_prxtot_class_3" symmetrical="false">(((DECODE(SUM(PRXTOT_DENOM_3),0,-112.1,10*LOG(10,(SUM(PRXTOT_DENOM_3*0.001*POWER(10,((ave_prxtot_class_3/621*62-112.1)/10)))/SUM(PRXTOT_DENOM_3))/0.001)))+112)*621/62+1)</counter>
          <counter alias="prxtot_denom_3" symmetrical="false">SUM(prxtot_denom_3)</counter>
          <counter alias="ave_prxtot_class_4" symmetrical="false">(((DECODE(SUM(PRXTOT_DENOM_4),0,-112.1,10*LOG(10,(SUM(PRXTOT_DENOM_4*0.001*POWER(10,((ave_prxtot_class_4/621*62-112.1)/10)))/SUM(PRXTOT_DENOM_4))/0.001)))+112)*621/62+1)</counter>
          <counter alias="prxtot_denom_4" symmetrical="false">SUM(prxtot_denom_4)</counter>
          <counter alias="ave_prx_noise" symmetrical="false">ROUND((((DECODE(NVL(SUM(prx_noise_denom_1),0),0,0,10*LOG(10,(SUM(prx_noise_denom_1*0.001*POWER(10,((ave_prx_noise/100)/10)))/SUM(prx_noise_denom_1))/0.001))))*100),0)</counter>
          <counter alias="prx_noise_denom_1" symmetrical="false">SUM(prx_noise_denom_1)</counter>
          <counter alias="max_prx_noise_value" symmetrical="false">MIN(max_prx_noise_value)</counter>
          <counter alias="min_prx_noise_value" symmetrical="false">MAX(min_prx_noise_value)</counter>
          <counter alias="ave_ptxtot_class_0" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptxtot_denom_0),0),0,0,10*LOG(10,(SUM(ptxtot_denom_0*0.001*POWER(10,((ave_ptxtot_class_0/100)/10)))/SUM(ptxtot_denom_0))/0.001))))*100),0)</counter>
          <counter alias="ptxtot_denom_0" symmetrical="false">SUM(ptxtot_denom_0)</counter>
          <counter alias="ave_ptxtot_class_1" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptxtot_denom_1),0),0,0,10*LOG(10,(SUM(ptxtot_denom_1*0.001*POWER(10,((ave_ptxtot_class_1/100)/10)))/SUM(ptxtot_denom_1))/0.001))))*100),0)</counter>
          <counter alias="ptxtot_denom_1" symmetrical="false">SUM(ptxtot_denom_1)</counter>
          <counter alias="ave_ptxtot_class_2" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptxtot_denom_2),0),0,0,10*LOG(10,(SUM(ptxtot_denom_2*0.001*POWER(10,((ave_ptxtot_class_2/100)/10)))/SUM(ptxtot_denom_2))/0.001))))*100),0)</counter>
          <counter alias="ptxtot_denom_2" symmetrical="false">SUM(ptxtot_denom_2)</counter>
          <counter alias="ave_ptxtot_class_3" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptxtot_denom_3),0),0,0,10*LOG(10,(SUM(ptxtot_denom_3*0.001*POWER(10,((ave_ptxtot_class_3/100)/10)))/SUM(ptxtot_denom_3))/0.001))))*100),0)</counter>
          <counter alias="ptxtot_denom_3" symmetrical="false">SUM(ptxtot_denom_3)</counter>
          <counter alias="ave_ptxtot_class_4" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptxtot_denom_4),0),0,0,10*LOG(10,(SUM(ptxtot_denom_4*0.001*POWER(10,((ave_ptxtot_class_4/100)/10)))/SUM(ptxtot_denom_4))/0.001))))*100),0)</counter>
          <counter alias="ptxtot_denom_4" symmetrical="false">SUM(ptxtot_denom_4)</counter>
          <counter alias="ave_lrt_class_0" symmetrical="false">ROUND(DECODE(NVL(SUM(lrt_denom_0),0),0,0,SUM(ave_lrt_class_0*lrt_denom_0)/SUM(lrt_denom_0)),3)</counter>
          <counter alias="lrt_denom_0" symmetrical="false">SUM(lrt_denom_0)</counter>
          <counter alias="ave_lrt_class_1" symmetrical="false">ROUND(DECODE(NVL(SUM(lrt_denom_1),0),0,0,SUM(ave_lrt_class_1*lrt_denom_1)/SUM(lrt_denom_1)),3)</counter>
          <counter alias="lrt_denom_1" symmetrical="false">SUM(lrt_denom_1)</counter>
          <counter alias="ave_lrt_class_2" symmetrical="false">ROUND(DECODE(NVL(SUM(lrt_denom_2),0),0,0,SUM(ave_lrt_class_2*lrt_denom_2)/SUM(lrt_denom_2)),3)</counter>
          <counter alias="lrt_denom_2" symmetrical="false">SUM(lrt_denom_2)</counter>
          <counter alias="ave_lrt_class_3" symmetrical="false">ROUND(DECODE(NVL(SUM(lrt_denom_3),0),0,0,SUM(ave_lrt_class_3*lrt_denom_3)/SUM(lrt_denom_3)),3)</counter>
          <counter alias="lrt_denom_3" symmetrical="false">SUM(lrt_denom_3)</counter>
          <counter alias="ave_lrt_class_4" symmetrical="false">ROUND(DECODE(NVL(SUM(lrt_denom_4),0),0,0,SUM(ave_lrt_class_4*lrt_denom_4)/SUM(lrt_denom_4)),3)</counter>
          <counter alias="lrt_denom_4" symmetrical="false">SUM(lrt_denom_4)</counter>
          <counter alias="ave_lnrt_class_0" symmetrical="false">ROUND(DECODE(NVL(SUM(lnrt_denom_0),0),0,0,SUM(ave_lnrt_class_0*lnrt_denom_0)/SUM(lnrt_denom_0)),3)</counter>
          <counter alias="lnrt_denom_0" symmetrical="false">SUM(lnrt_denom_0)</counter>
          <counter alias="ave_lnrt_class_1" symmetrical="false">ROUND(DECODE(NVL(SUM(lnrt_denom_1),0),0,0,SUM(ave_lnrt_class_1*lnrt_denom_1)/SUM(lnrt_denom_1)),3)</counter>
          <counter alias="lnrt_denom_1" symmetrical="false">SUM(lnrt_denom_1)</counter>
          <counter alias="ave_lnrt_class_2" symmetrical="false">ROUND(DECODE(NVL(SUM(lnrt_denom_2),0),0,0,SUM(ave_lnrt_class_2*lnrt_denom_2)/SUM(lnrt_denom_2)),3)</counter>
          <counter alias="lnrt_denom_2" symmetrical="false">SUM(lnrt_denom_2)</counter>
          <counter alias="ave_lnrt_class_3" symmetrical="false">ROUND(DECODE(NVL(SUM(lnrt_denom_3),0),0,0,SUM(ave_lnrt_class_3*lnrt_denom_3)/SUM(lnrt_denom_3)),3)</counter>
          <counter alias="lnrt_denom_3" symmetrical="false">SUM(lnrt_denom_3)</counter>
          <counter alias="ave_lnrt_class_4" symmetrical="false">ROUND(DECODE(NVL(SUM(lnrt_denom_4),0),0,0,SUM(ave_lnrt_class_4*lnrt_denom_4)/SUM(lnrt_denom_4)),3)</counter>
          <counter alias="lnrt_denom_4" symmetrical="false">SUM(lnrt_denom_4)</counter>
          <counter alias="ave_ptx_nrt_class_0" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptx_nrt_denom_0),0),0,0,10*LOG(10,(SUM(ptx_nrt_denom_0*0.001*POWER(10,((ave_ptx_nrt_class_0/100)/10)))/SUM(ptx_nrt_denom_0))/0.001))))*100),0)</counter>
          <counter alias="ptx_nrt_denom_0" symmetrical="false">SUM(ptx_nrt_denom_0)</counter>
          <counter alias="ave_ptx_nrt_class_1" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptx_nrt_denom_1),0),0,0,10*LOG(10,(SUM(ptx_nrt_denom_1*0.001*POWER(10,((ave_ptx_nrt_class_1/100)/10)))/SUM(ptx_nrt_denom_1))/0.001))))*100),0)</counter>
          <counter alias="ptx_nrt_denom_1" symmetrical="false">SUM(ptx_nrt_denom_1)</counter>
          <counter alias="ave_ptx_nrt_class_2" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptx_nrt_denom_2),0),0,0,10*LOG(10,(SUM(ptx_nrt_denom_2*0.001*POWER(10,((ave_ptx_nrt_class_2/100)/10)))/SUM(ptx_nrt_denom_2))/0.001))))*100),0)</counter>
          <counter alias="ptx_nrt_denom_2" symmetrical="false">SUM(ptx_nrt_denom_2)</counter>
          <counter alias="ave_ptx_nrt_class_3" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptx_nrt_denom_3),0),0,0,10*LOG(10,(SUM(ptx_nrt_denom_3*0.001*POWER(10,((ave_ptx_nrt_class_3/100)/10)))/SUM(ptx_nrt_denom_3))/0.001))))*100),0)</counter>
          <counter alias="ptx_nrt_denom_3" symmetrical="false">SUM(ptx_nrt_denom_3)</counter>
          <counter alias="ave_ptx_nrt_class_4" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptx_nrt_denom_4),0),0,0,10*LOG(10,(SUM(ptx_nrt_denom_4*0.001*POWER(10,((ave_ptx_nrt_class_4/100)/10)))/SUM(ptx_nrt_denom_4))/0.001))))*100),0)</counter>
          <counter alias="ptx_nrt_denom_4" symmetrical="false">SUM(ptx_nrt_denom_4)</counter>
          <counter alias="ave_rach_load" symmetrical="false">SUM(ave_rach_load)</counter>
          <counter alias="rach_denom_0" symmetrical="false">SUM(rach_denom_0)</counter>
          <counter alias="ave_rach_decod_msgs" symmetrical="false">SUM(ave_rach_decod_msgs)</counter>
          <counter alias="rach_denom_1" symmetrical="false">SUM(rach_denom_1)</counter>
          <counter alias="ave_succ_decod_msgs" symmetrical="false">SUM(ave_succ_decod_msgs)</counter>
          <counter alias="rach_denom_2" symmetrical="false">SUM(rach_denom_2)</counter>
          <counter alias="ave_rach_throughput" symmetrical="false">SUM(ave_rach_throughput)</counter>
          <counter alias="rach_denom_3" symmetrical="false">SUM(rach_denom_3)</counter>
          <counter alias="ave_rach_data_throughput" symmetrical="false">SUM(ave_rach_data_throughput)</counter>
          <counter alias="rach_denom_4" symmetrical="false">SUM(rach_denom_4)</counter>
          <counter alias="ave_sccpch_inc_pch_load" symmetrical="false">SUM(ave_sccpch_inc_pch_load)</counter>
          <counter alias="sccpch_load_denom_0" symmetrical="false">SUM(sccpch_load_denom_0)</counter>
          <counter alias="ave_fach_u_tot_tput_sccp_pch" symmetrical="false">SUM(ave_fach_u_tot_tput_sccp_pch)</counter>
          <counter alias="fach_user_tot_tput_denom_0" symmetrical="false">SUM(fach_user_tot_tput_denom_0)</counter>
          <counter alias="ave_fach_udata_tp_sccpch_pch" symmetrical="false">SUM(ave_fach_udata_tp_sccpch_pch)</counter>
          <counter alias="fach_u_data_tput_denom_0" symmetrical="false">SUM(fach_u_data_tput_denom_0)</counter>
          <counter alias="ave_pch_throughput" symmetrical="false">SUM(ave_pch_throughput)</counter>
          <counter alias="pch_throughput_denom_0" symmetrical="false">SUM(pch_throughput_denom_0)</counter>
          <counter alias="code_capacity" symmetrical="false">SUM(code_capacity)</counter>
          <counter alias="denom_code_capacity" symmetrical="false">SUM(denom_code_capacity)</counter>
          <counter alias="min_code_occupancy_percent" symmetrical="false">MIN(min_code_occupancy_percent)</counter>
          <counter alias="max_code_occupance_percent" symmetrical="false">MAX(max_code_occupance_percent)</counter>
          <counter alias="no_codes_available_sf4" symmetrical="false">SUM(no_codes_available_sf4)</counter>
          <counter alias="no_codes_available_sf8" symmetrical="false">SUM(no_codes_available_sf8)</counter>
          <counter alias="no_codes_available_sf16" symmetrical="false">SUM(no_codes_available_sf16)</counter>
          <counter alias="no_codes_available_sf32" symmetrical="false">SUM(no_codes_available_sf32)</counter>
          <counter alias="no_codes_available_sf64" symmetrical="false">SUM(no_codes_available_sf64)</counter>
          <counter alias="no_codes_available_sf128" symmetrical="false">SUM(no_codes_available_sf128)</counter>
          <counter alias="no_codes_available_sf256" symmetrical="false">SUM(no_codes_available_sf256)</counter>
          <counter alias="nbr_succ_code_tree_allo" symmetrical="false">SUM(nbr_succ_code_tree_allo)</counter>
          <counter alias="ave_avail_pool_capa_dl" symmetrical="false">SUM(ave_avail_pool_capa_dl)</counter>
          <counter alias="nbr_of_pool_rep_dl" symmetrical="false">SUM(nbr_of_pool_rep_dl)</counter>
          <counter alias="ave_avail_pool_capa_ul" symmetrical="false">SUM(ave_avail_pool_capa_ul)</counter>
          <counter alias="nbr_of_pool_rep_ul" symmetrical="false">SUM(nbr_of_pool_rep_ul)</counter>
          <counter alias="nbr_of_cells" symmetrical="false">SUM(nbr_of_cells)</counter>
          <counter alias="ave_trx_for_rl_in_cell" symmetrical="false">ROUND(DECODE(NVL(SUM(nbr_of_rls),0),0,0,10+ABS((10*LOG(10,(SUM(nbr_of_rls*0.001*POWER(10,((-10+0.5*(ave_trx_for_rl_in_cell-10))/10)))/SUM(nbr_of_rls))/0.001))-(-10))/0.5),0)</counter>
          <counter alias="nbr_of_rls" symmetrical="false">SUM(nbr_of_rls)</counter>
          <counter alias="sum_sqr_for_rl_in_cell" symmetrical="false">NVL(ROUND(1000*LOG(10,((SUM(POWER(10,(DECODE(sum_sqr_for_rl_in_cell,0,NULL,sum_sqr_for_rl_in_cell)/1000))/1000))*1000)),0),0)</counter>
          <counter alias="nbr_of_rl_meas_reps" symmetrical="false">SUM(nbr_of_rl_meas_reps)</counter>
          <counter alias="ave_ptx_rt_class_0" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptx_rt_denom_0),0),0,0,10*LOG(10,(SUM(ptx_rt_denom_0*0.001*POWER(10,((ave_ptx_rt_class_0/100)/10)))/SUM(ptx_rt_denom_0))/0.001))))*100),0)</counter>
          <counter alias="ptx_rt_denom_0" symmetrical="false">SUM(ptx_rt_denom_0)</counter>
          <counter alias="ave_ptx_rt_class_1" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptx_rt_denom_1),0),0,0,10*LOG(10,(SUM(ptx_rt_denom_1*0.001*POWER(10,((ave_ptx_rt_class_1/100)/10)))/SUM(ptx_rt_denom_1))/0.001))))*100),0)</counter>
          <counter alias="ptx_rt_denom_1" symmetrical="false">SUM(ptx_rt_denom_1)</counter>
          <counter alias="ave_ptx_rt_class_2" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptx_rt_denom_2),0),0,0,10*LOG(10,(SUM(ptx_rt_denom_2*0.001*POWER(10,((ave_ptx_rt_class_2/100)/10)))/SUM(ptx_rt_denom_2))/0.001))))*100),0)</counter>
          <counter alias="ptx_rt_denom_2" symmetrical="false">SUM(ptx_rt_denom_2)</counter>
          <counter alias="ave_ptx_rt_class_3" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptx_rt_denom_3),0),0,0,10*LOG(10,(SUM(ptx_rt_denom_3*0.001*POWER(10,((ave_ptx_rt_class_3/100)/10)))/SUM(ptx_rt_denom_3))/0.001))))*100),0)</counter>
          <counter alias="ptx_rt_denom_3" symmetrical="false">SUM(ptx_rt_denom_3)</counter>
          <counter alias="ave_ptx_rt_class_4" symmetrical="false">ROUND((((DECODE(NVL(SUM(ptx_rt_denom_4),0),0,0,10*LOG(10,(SUM(ptx_rt_denom_4*0.001*POWER(10,((ave_ptx_rt_class_4/100)/10)))/SUM(ptx_rt_denom_4))/0.001))))*100),0)</counter>
          <counter alias="ptx_rt_denom_4" symmetrical="false">SUM(ptx_rt_denom_4)</counter>
          <counter alias="ave_sccpch_load" symmetrical="false">SUM(ave_sccpch_load)</counter>
          <counter alias="sccpch_load_denom_1" symmetrical="false">SUM(sccpch_load_denom_1)</counter>
          <counter alias="ave_fach_user_tot_tput" symmetrical="false">SUM(ave_fach_user_tot_tput)</counter>
          <counter alias="fach_user_tot_tput_denom_1" symmetrical="false">SUM(fach_user_tot_tput_denom_1)</counter>
          <counter alias="ave_fach_udata_tp_sccpch" symmetrical="false">SUM(ave_fach_udata_tp_sccpch)</counter>
          <counter alias="fach_u_data_tput_denom_1" symmetrical="false">SUM(fach_u_data_tput_denom_1)</counter>
          <counter alias="WBTS_RESET_DUE_USER_ACTION" symmetrical="false">SUM(WBTS_RESET_DUE_USER_ACTION)</counter>
          <counter alias="WBTS_RESET_DUE_RNC" symmetrical="false">SUM(WBTS_RESET_DUE_RNC)</counter>
          <counter alias="WBTS_RESET_DUE_BTS" symmetrical="false">SUM(WBTS_RESET_DUE_BTS)</counter>
          <counter alias="WBTS_RESET_SIGN_UNIT_FAIL" symmetrical="false">SUM(WBTS_RESET_SIGN_UNIT_FAIL)</counter>
          <counter alias="WCELL_TO_BLO_BY_USER" symmetrical="false">SUM(WCELL_TO_BLO_BY_USER)</counter>
          <counter alias="WCELL_TO_BLO_BY_BTS" symmetrical="false">SUM(WCELL_TO_BLO_BY_BTS)</counter>
          <counter alias="WCELL_TO_BLO_BY_SYS_FAIL" symmetrical="false">SUM(WCELL_TO_BLO_BY_SYS_FAIL)</counter>
          <counter alias="WCELL_TO_BLO_BY_LINK_FAIL" symmetrical="false">SUM(WCELL_TO_BLO_BY_LINK_FAIL)</counter>
          <counter alias="WCELL_TO_BLO_BY_SHUT_DOWN" symmetrical="false">SUM(WCELL_TO_BLO_BY_SHUT_DOWN)</counter>
          <counter alias="WCELL_TO_BLO_BY_MEAS_FAIL" symmetrical="false">SUM(WCELL_TO_BLO_BY_MEAS_FAIL)</counter>
          <counter alias="WCELL_TO_BLO_BY_BTS_BLOCK" symmetrical="false">SUM(WCELL_TO_BLO_BY_BTS_BLOCK)</counter>
          <counter alias="WCELL_TO_BLO_IN_INIT" symmetrical="false">SUM(WCELL_TO_BLO_IN_INIT)</counter>
          <counter alias="WCELL_TO_WO_UNSUCC_USER" symmetrical="false">SUM(WCELL_TO_WO_UNSUCC_USER)</counter>
          <counter alias="WCELL_TO_WO_UNSUCC_BTS" symmetrical="false">SUM(WCELL_TO_WO_UNSUCC_BTS)</counter>
          <counter alias="WCELL_TO_WO_UNSUCC_SYS_FAIL" symmetrical="false">SUM(WCELL_TO_WO_UNSUCC_SYS_FAIL)</counter>
          <counter alias="WCELL_TO_WO_UNSUCC_LINK_FAIL" symmetrical="false">SUM(WCELL_TO_WO_UNSUCC_LINK_FAIL)</counter>
          <counter alias="WCELL_TO_WO_UNSUCC_SHUT_DOWN" symmetrical="false">SUM(WCELL_TO_WO_UNSUCC_SHUT_DOWN)</counter>
          <counter alias="WCELL_TO_WO_UNSUCC_MEAS_FAIL" symmetrical="false">SUM(WCELL_TO_WO_UNSUCC_MEAS_FAIL)</counter>
          <counter alias="WCELL_TO_WO_UNSUCC_BTS_BLOCK" symmetrical="false">SUM(WCELL_TO_WO_UNSUCC_BTS_BLOCK)</counter>
          <counter alias="WCELL_TO_WO_UNSUCC_INIT" symmetrical="false">SUM(WCELL_TO_WO_UNSUCC_INIT)</counter>
          <counter alias="WCELL_BLO_TO_WO_SUCCESS" symmetrical="false">SUM(WCELL_BLO_TO_WO_SUCCESS)</counter>
          <counter alias="FACH_THRPUT_SAB_USER_SIGN" symmetrical="false">SUM(FACH_THRPUT_SAB_USER_SIGN)</counter>
          <counter alias="FACH_THRPUT_SAB_USER_SIG_DEN" symmetrical="false">SUM(FACH_THRPUT_SAB_USER_SIG_DEN)</counter>
          <counter alias="FACH_THRPUT_SAB_USER" symmetrical="false">SUM(FACH_THRPUT_SAB_USER)</counter>
          <counter alias="FACH_THRPUT_SAB_USER_DEN" symmetrical="false">SUM(FACH_THRPUT_SAB_USER_DEN)</counter>
          <counter alias="AVE_AVAIL_PERC_POOL_CAPA_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(NBR_OF_BTS_HW_CAPA_ALLOC_DL),0),0,0,SUM(AVE_AVAIL_PERC_POOL_CAPA_DL*NBR_OF_BTS_HW_CAPA_ALLOC_DL)/SUM(NBR_OF_BTS_HW_CAPA_ALLOC_DL)),3)</counter>
          <counter alias="AVE_AVAIL_PERC_POOL_CAPA_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(NBR_OF_BTS_HW_CAPA_ALLOC_UL),0),0,0,SUM(AVE_AVAIL_PERC_POOL_CAPA_UL*NBR_OF_BTS_HW_CAPA_ALLOC_UL)/SUM(NBR_OF_BTS_HW_CAPA_ALLOC_UL)),3)</counter>
          <counter alias="NBR_OF_BTS_HW_CAPA_ALLOC_DL" symmetrical="false">SUM(NBR_OF_BTS_HW_CAPA_ALLOC_DL)</counter>
          <counter alias="NBR_OF_BTS_HW_CAPA_ALLOC_UL" symmetrical="false">SUM(NBR_OF_BTS_HW_CAPA_ALLOC_UL)</counter>
          <counter alias="AVG_NON_HSDPA_PWR" symmetrical="false">ROUND(DECODE(NVL(SUM(AVG_NON_HSDPA_PWR_DENOM),0),0,0,SUM(AVG_NON_HSDPA_PWR*AVG_NON_HSDPA_PWR_DENOM)/SUM(AVG_NON_HSDPA_PWR_DENOM)),3)</counter>
          <counter alias="AVG_NON_HSDPA_PWR_DENOM" symmetrical="false">SUM(AVG_NON_HSDPA_PWR_DENOM)</counter>
          <counter alias="AVG_ACTIVE_NON_HSDPA_PWR" symmetrical="false">ROUND(DECODE(NVL(SUM(AVG_ACT_NON_HSDPA_PWR_DENOM),0),0,0,SUM(AVG_ACTIVE_NON_HSDPA_PWR*AVG_ACT_NON_HSDPA_PWR_DENOM)/SUM(AVG_ACT_NON_HSDPA_PWR_DENOM)),3)</counter>
          <counter alias="AVG_ACT_NON_HSDPA_PWR_DENOM" symmetrical="false">SUM(AVG_ACT_NON_HSDPA_PWR_DENOM)</counter>
          <counter alias="RB_DOWNGR_DUE_OLC_TFC_SUBS" symmetrical="false">SUM(RB_DOWNGR_DUE_OLC_TFC_SUBS)</counter>
          <counter alias="RB_DOWNGR_DUE_DYLO_RL_POWER" symmetrical="false">SUM(RB_DOWNGR_DUE_DYLO_RL_POWER)</counter>
          <counter alias="CELL_RESOURCE_SPARE_1" symmetrical="false">SUM(CELL_RESOURCE_SPARE_1)</counter>
          <counter alias="RB_DOWNGR_DUE_PBS_AAL2" symmetrical="false">SUM(RB_DOWNGR_DUE_PBS_AAL2)</counter>
          <counter alias="RB_DOWNGR_DUE_PBS_BTS" symmetrical="false">SUM(RB_DOWNGR_DUE_PBS_BTS)</counter>
          <counter alias="RB_DOWNGR_DUE_PBS_INTERF" symmetrical="false">SUM(RB_DOWNGR_DUE_PBS_INTERF)</counter>
          <counter alias="RB_DOWNGR_DUE_PBS_SPREAD" symmetrical="false">SUM(RB_DOWNGR_DUE_PBS_SPREAD)</counter>
          <counter alias="CELL_RESOURCE_SPARE_2" symmetrical="false">SUM(CELL_RESOURCE_SPARE_2)</counter>
          <counter alias="RB_DOWNGR_DUE_PRE_EMP_AAL2" symmetrical="false">SUM(RB_DOWNGR_DUE_PRE_EMP_AAL2)</counter>
          <counter alias="RB_DOWNGR_DUE_PRE_EMP_BTS" symmetrical="false">SUM(RB_DOWNGR_DUE_PRE_EMP_BTS)</counter>
          <counter alias="RB_DOWNGR_DUE_PRE_EMP_INTERF" symmetrical="false">SUM(RB_DOWNGR_DUE_PRE_EMP_INTERF)</counter>
          <counter alias="RB_DOWNGR_DUE_PRE_EMP_SPREAD" symmetrical="false">SUM(RB_DOWNGR_DUE_PRE_EMP_SPREAD)</counter>
          <counter alias="RB_DOWNGR_DUE_OLC_RL_RECONF" symmetrical="false">SUM(RB_DOWNGR_DUE_OLC_RL_RECONF)</counter>
          <counter alias="RB_RELEASE_DUE_DYLO_RL_POWER" symmetrical="false">SUM(RB_RELEASE_DUE_DYLO_RL_POWER)</counter>
          <counter alias="CELL_RESOURCE_SPARE_3" symmetrical="false">SUM(CELL_RESOURCE_SPARE_3)</counter>
          <counter alias="RB_RELEASE_DUE_PBS_AAL2" symmetrical="false">SUM(RB_RELEASE_DUE_PBS_AAL2)</counter>
          <counter alias="RB_RELEASE_DUE_PBS_BTS" symmetrical="false">SUM(RB_RELEASE_DUE_PBS_BTS)</counter>
          <counter alias="RB_RELEASE_DUE_PBS_INTERF" symmetrical="false">SUM(RB_RELEASE_DUE_PBS_INTERF)</counter>
          <counter alias="RB_RELEASE_DUE_PBS_SPREAD" symmetrical="false">SUM(RB_RELEASE_DUE_PBS_SPREAD)</counter>
          <counter alias="CELL_RESOURCE_SPARE_4" symmetrical="false">SUM(CELL_RESOURCE_SPARE_4)</counter>
          <counter alias="RB_RELEASE_DUE_PRE_EMP_AAL2" symmetrical="false">SUM(RB_RELEASE_DUE_PRE_EMP_AAL2)</counter>
          <counter alias="RB_RELEASE_DUE_PRE_EMP_BTS" symmetrical="false">SUM(RB_RELEASE_DUE_PRE_EMP_BTS)</counter>
          <counter alias="RB_RELEASE_DUE_PRE_EMP_INTF" symmetrical="false">SUM(RB_RELEASE_DUE_PRE_EMP_INTF)</counter>
          <counter alias="RB_RELEASE_DUE_PRE_EMP_SPREA" symmetrical="false">SUM(RB_RELEASE_DUE_PRE_EMP_SPREA)</counter>
          <counter alias="RB_RELEASE_DUE_OLC_RL_RECONF" symmetrical="false">SUM(RB_RELEASE_DUE_OLC_RL_RECONF)</counter>
          <counter alias="DUR_HSDPA_NO_USERS" symmetrical="false">SUM(DUR_HSDPA_NO_USERS)</counter>
          <counter alias="DUR_HSDPA_USERS_1_OR_2" symmetrical="false">SUM(DUR_HSDPA_USERS_1_OR_2)</counter>
          <counter alias="DUR_HSDPA_USERS_3_OR_4" symmetrical="false">SUM(DUR_HSDPA_USERS_3_OR_4)</counter>
          <counter alias="DUR_HSDPA_USERS_5_OR_6" symmetrical="false">SUM(DUR_HSDPA_USERS_5_OR_6)</counter>
          <counter alias="DUR_HSDPA_USERS_7_OR_8" symmetrical="false">SUM(DUR_HSDPA_USERS_7_OR_8)</counter>
          <counter alias="DUR_HSDPA_USERS_9_OR_10" symmetrical="false">SUM(DUR_HSDPA_USERS_9_OR_10)</counter>
          <counter alias="DUR_HSDPA_USERS_11_OR_12" symmetrical="false">SUM(DUR_HSDPA_USERS_11_OR_12)</counter>
          <counter alias="DUR_HSDPA_USERS_13_OR_14" symmetrical="false">SUM(DUR_HSDPA_USERS_13_OR_14)</counter>
          <counter alias="DUR_HSDPA_USERS_15_OR_16" symmetrical="false">SUM(DUR_HSDPA_USERS_15_OR_16)</counter>
          <counter alias="SUM_RACH_ACK_PREAMBLES" symmetrical="false">SUM(SUM_RACH_ACK_PREAMBLES)</counter>
          <counter alias="DENOM_RACH_ACK_PREAMBLES" symmetrical="false">SUM(DENOM_RACH_ACK_PREAMBLES)</counter>
          <counter alias="AVAIL_WCELL_IN_WO_STATE" symmetrical="false">SUM(AVAIL_WCELL_IN_WO_STATE)</counter>
          <counter alias="AVAIL_WCELL_BLOCKED_BY_USER" symmetrical="false">SUM(AVAIL_WCELL_BLOCKED_BY_USER)</counter>
          <counter alias="AVAIL_WCELL_EXISTS_IN_RNW_DB" symmetrical="false">SUM(AVAIL_WCELL_EXISTS_IN_RNW_DB)</counter>
          <counter alias="CE_SAMPLE_AMOUNT" symmetrical="false">SUM(CE_SAMPLE_AMOUNT)</counter>
          <counter alias="AVE_CE_USED_AMR" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_AMR*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_CS_CONV_64" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_CS_CONV_64*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_CS_STR_14_4" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_CS_STR_14_4*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_CS_STR_57_6" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_CS_STR_57_6*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_8_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_8_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_16_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_16_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_32_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_32_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_64_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_64_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_128_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_128_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_8_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_8_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_16_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_16_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_32_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_32_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_64_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_64_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_128_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_128_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_256_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_256_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_STR_384_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_384_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_8_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_8_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_16_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_16_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_32_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_32_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_64_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_64_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_128_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_128_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_256_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_256_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_384_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_384_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_8_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_8_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_16_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_16_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_32_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_32_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_64_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_64_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_128_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_128_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_256_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_256_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_INT_384_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_384_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_8_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_8_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_16_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_16_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_32_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_32_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_64_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_64_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_128_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_128_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_256_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_256_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_384_UL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_384_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_8_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_8_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_16_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_16_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_32_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_32_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_64_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_64_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_128_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_128_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_256_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_256_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="AVE_CE_USED_PS_BGR_384_DL" symmetrical="false">ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_384_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</counter>
          <counter alias="RB_DOWNGR_DUE_THRPOPT" symmetrical="false">SUM(RB_DOWNGR_DUE_THRPOPT)</counter>
          <counter alias="RB_RELEASE_DUE_THRPOPT" symmetrical="false">SUM(RB_RELEASE_DUE_THRPOPT)</counter>
          <counter alias="MAXIMUM_PRXTOTAL" symmetrical="false">MAX(MAXIMUM_PRXTOTAL)</counter>
          <counter alias="MINIMUM_PRXTOTAL" symmetrical="false">MIN(MINIMUM_PRXTOTAL)</counter>
          <counter alias="MAXIMUM_PTXTOTAL" symmetrical="false">MAX(MAXIMUM_PTXTOTAL)</counter>
          <counter alias="MINIMUM_PTXTOTAL" symmetrical="false">MIN(MINIMUM_PTXTOTAL)</counter>
          <counter alias="MIN_PTX_TARGET_PS" symmetrical="false">MIN(MIN_PTX_TARGET_PS)</counter>
          <counter alias="MAX_PTX_TARGET_PS" symmetrical="false">MAX(MAX_PTX_TARGET_PS)</counter>
          <counter alias="AVE_PTX_TARGET_PS" symmetrical="false">ROUND(DECODE(NVL(SUM(PTX_TARGET_PS_DENOM),0),0,0,10*LOG(10,(SUM(PTX_TARGET_PS_DENOM*(POWER(10,(AVE_PTX_TARGET_PS/10))/1000))/SUM(PTX_TARGET_PS_DENOM))*1000)),3)</counter>
          <counter alias="PTX_TARGET_PS_DENOM" symmetrical="false">SUM(PTX_TARGET_PS_DENOM)</counter>
          <counter alias="MIN_HSPA_DL_POWER" symmetrical="false">MIN(MIN_HSPA_DL_POWER)</counter>
          <counter alias="MAX_HSPA_DL_POWER" symmetrical="false">MAX(MAX_HSPA_DL_POWER)</counter>
          <counter alias="AVE_HSPA_DL_POWER" symmetrical="false">ROUND(DECODE(NVL(SUM(HSPA_DL_POWER_SAMPLES),0),0,0,10*LOG(10,(SUM(HSPA_DL_POWER_SAMPLES*(POWER(10,(AVE_HSPA_DL_POWER/10))/1000))/SUM(HSPA_DL_POWER_SAMPLES))*1000)),3)</counter>
          <counter alias="HSPA_DL_POWER_SAMPLES" symmetrical="false">SUM(HSPA_DL_POWER_SAMPLES)</counter>
          <counter alias="DURA_HSDPA_USERS_17_TO_20" symmetrical="false">SUM(DURA_HSDPA_USERS_17_TO_20)</counter>
          <counter alias="DURA_HSDPA_USERS_21_TO_24" symmetrical="false">SUM(DURA_HSDPA_USERS_21_TO_24)</counter>
          <counter alias="DURA_HSDPA_USERS_25_TO_28" symmetrical="false">SUM(DURA_HSDPA_USERS_25_TO_28)</counter>
          <counter alias="DURA_HSDPA_USERS_29_TO_32" symmetrical="false">SUM(DURA_HSDPA_USERS_29_TO_32)</counter>
          <counter alias="DURA_HSDPA_USERS_33_TO_36" symmetrical="false">SUM(DURA_HSDPA_USERS_33_TO_36)</counter>
          <counter alias="DURA_HSDPA_USERS_37_TO_40" symmetrical="false">SUM(DURA_HSDPA_USERS_37_TO_40)</counter>
          <counter alias="DURA_HSDPA_USERS_41_TO_44" symmetrical="false">SUM(DURA_HSDPA_USERS_41_TO_44)</counter>
          <counter alias="DURA_HSDPA_USERS_45_TO_48" symmetrical="false">SUM(DURA_HSDPA_USERS_45_TO_48)</counter>
          <counter alias="DURA_HSDPA_5_CODE" symmetrical="false">SUM(DURA_HSDPA_5_CODE)</counter>
          <counter alias="DURA_HSDPA_6_CODE" symmetrical="false">SUM(DURA_HSDPA_6_CODE)</counter>
          <counter alias="DURA_HSDPA_7_CODE" symmetrical="false">SUM(DURA_HSDPA_7_CODE)</counter>
          <counter alias="DURA_HSDPA_8_CODE" symmetrical="false">SUM(DURA_HSDPA_8_CODE)</counter>
          <counter alias="DURA_HSDPA_9_CODE" symmetrical="false">SUM(DURA_HSDPA_9_CODE)</counter>
          <counter alias="DURA_HSDPA_10_CODE" symmetrical="false">SUM(DURA_HSDPA_10_CODE)</counter>
          <counter alias="DURA_HSDPA_11_CODE" symmetrical="false">SUM(DURA_HSDPA_11_CODE)</counter>
          <counter alias="DURA_HSDPA_12_CODE" symmetrical="false">SUM(DURA_HSDPA_12_CODE)</counter>
          <counter alias="DURA_HSDPA_13_CODE" symmetrical="false">SUM(DURA_HSDPA_13_CODE)</counter>
          <counter alias="DURA_HSDPA_14_CODE" symmetrical="false">SUM(DURA_HSDPA_14_CODE)</counter>
          <counter alias="DURA_HSDPA_15_CODE" symmetrical="false">SUM(DURA_HSDPA_15_CODE)</counter>
          <counter alias="CHAN_CODE_SF4_REQUEST" symmetrical="false">SUM(CHAN_CODE_SF4_REQUEST)</counter>
          <counter alias="CHAN_CODE_SF8_REQUEST" symmetrical="false">SUM(CHAN_CODE_SF8_REQUEST)</counter>
          <counter alias="CHAN_CODE_SF16_REQUEST" symmetrical="false">SUM(CHAN_CODE_SF16_REQUEST)</counter>
          <counter alias="CHAN_CODE_SF32_REQUEST" symmetrical="false">SUM(CHAN_CODE_SF32_REQUEST)</counter>
          <counter alias="CHAN_CODE_SF64_REQUEST" symmetrical="false">SUM(CHAN_CODE_SF64_REQUEST)</counter>
          <counter alias="CHAN_CODE_SF128_REQUEST" symmetrical="false">SUM(CHAN_CODE_SF128_REQUEST)</counter>
          <counter alias="CHAN_CODE_SF256_REQUEST" symmetrical="false">SUM(CHAN_CODE_SF256_REQUEST)</counter>
          <counter alias="CH_CODE_DOWNG_RT" symmetrical="false">SUM(CH_CODE_DOWNG_RT)</counter>
          <counter alias="CH_CODE_DOWNG_NRT_DCH" symmetrical="false">SUM(CH_CODE_DOWNG_NRT_DCH)</counter>
          <counter alias="BTS_HSUPA_HW_NOT_LIMITED_DUR" symmetrical="false">SUM(BTS_HSUPA_HW_NOT_LIMITED_DUR)</counter>
          <counter alias="BTS_HSUPA_HW_LIMITED_DUR" symmetrical="false">SUM(BTS_HSUPA_HW_LIMITED_DUR)</counter>
          <counter alias="BTS_HSUPA_NO_HW_CAPA_DUR" symmetrical="false">SUM(BTS_HSUPA_NO_HW_CAPA_DUR)</counter>
          <counter alias="DUR_HSUPA_NO_USERS" symmetrical="false">SUM(DUR_HSUPA_NO_USERS)</counter>
          <counter alias="DUR_HSUPA_USERS_1_OR_2" symmetrical="false">SUM(DUR_HSUPA_USERS_1_OR_2)</counter>
          <counter alias="DUR_HSUPA_USERS_3_OR_4" symmetrical="false">SUM(DUR_HSUPA_USERS_3_OR_4)</counter>
          <counter alias="DUR_HSUPA_USERS_5_OR_6" symmetrical="false">SUM(DUR_HSUPA_USERS_5_OR_6)</counter>
          <counter alias="DUR_HSUPA_USERS_7_OR_8" symmetrical="false">SUM(DUR_HSUPA_USERS_7_OR_8)</counter>
          <counter alias="DUR_HSUPA_USERS_9_OR_10" symmetrical="false">SUM(DUR_HSUPA_USERS_9_OR_10)</counter>
          <counter alias="DUR_HSUPA_USERS_11_OR_12" symmetrical="false">SUM(DUR_HSUPA_USERS_11_OR_12)</counter>
          <counter alias="DUR_HSUPA_USERS_13_OR_14" symmetrical="false">SUM(DUR_HSUPA_USERS_13_OR_14)</counter>
          <counter alias="DUR_HSUPA_USERS_15_OR_16" symmetrical="false">SUM(DUR_HSUPA_USERS_15_OR_16)</counter>
          <counter alias="DUR_HSUPA_USERS_17_OR_18" symmetrical="false">SUM(DUR_HSUPA_USERS_17_OR_18)</counter>
          <counter alias="DUR_HSUPA_USERS_19_OR_20" symmetrical="false">SUM(DUR_HSUPA_USERS_19_OR_20)</counter>
          <counter alias="MAX_HSDPA_USERS_IN_CELL" symmetrical="false">MAX(MAX_HSDPA_USERS_IN_CELL)</counter>
          <counter alias="MAX_HSUPA_USERS_IN_CELL" symmetrical="false">MAX(MAX_HSUPA_USERS_IN_CELL)</counter>
          <counter alias="SUM_HSDPA_USERS_IN_CELL" symmetrical="false">SUM(SUM_HSDPA_USERS_IN_CELL)</counter>
          <counter alias="DENOM_HSDPA_USERS_PER_CELL" symmetrical="false">SUM(DENOM_HSDPA_USERS_PER_CELL)</counter>
          <counter alias="SUM_HSUPA_USERS_IN_CELL" symmetrical="false">SUM(SUM_HSUPA_USERS_IN_CELL)</counter>
          <counter alias="DENOM_HSUPA_USERS_PER_CELL" symmetrical="false">SUM(DENOM_HSUPA_USERS_PER_CELL)</counter>
          <counter alias="AMR_TXPOW_LOAD_UNDERLOAD" symmetrical="false">SUM(AMR_TXPOW_LOAD_UNDERLOAD)</counter>
          <counter alias="AMR_TXPOW_LOAD_BELOW_TARGET" symmetrical="false">SUM(AMR_TXPOW_LOAD_BELOW_TARGET)</counter>
          <counter alias="AMR_TXPOW_LOAD_OVER_TARGET" symmetrical="false">SUM(AMR_TXPOW_LOAD_OVER_TARGET)</counter>
          <counter alias="AMR_TXPOW_LOAD_OVERLOAD" symmetrical="false">SUM(AMR_TXPOW_LOAD_OVERLOAD)</counter>
          <counter alias="AMR_CODE_LOAD_UNDERLOAD" symmetrical="false">SUM(AMR_CODE_LOAD_UNDERLOAD)</counter>
          <counter alias="AMR_CODE_LOAD_BELOW_TARGET" symmetrical="false">SUM(AMR_CODE_LOAD_BELOW_TARGET)</counter>
          <counter alias="AMR_CODE_LOAD_OVER_TARGET" symmetrical="false">SUM(AMR_CODE_LOAD_OVER_TARGET)</counter>
          <counter alias="AMR_CODE_LOAD_OVERLOAD" symmetrical="false">SUM(AMR_CODE_LOAD_OVERLOAD)</counter>
          <counter alias="AMR_TRANSM_LOAD_UNDERLOAD" symmetrical="false">SUM(AMR_TRANSM_LOAD_UNDERLOAD)</counter>
          <counter alias="AMR_TRANSM_LOAD_BELOW_TARGET" symmetrical="false">SUM(AMR_TRANSM_LOAD_BELOW_TARGET)</counter>
          <counter alias="AMR_TRANSM_LOAD_OVER_TARGET" symmetrical="false">SUM(AMR_TRANSM_LOAD_OVER_TARGET)</counter>
          <counter alias="AMR_TRANSM_LOAD_OVERLOAD" symmetrical="false">SUM(AMR_TRANSM_LOAD_OVERLOAD)</counter>
          <counter alias="SUM_HSDSCH_MACD_STREA" symmetrical="false">SUM(SUM_HSDSCH_MACD_STREA)</counter>
          <counter alias="DENOM_HSDSCH_MACD_STREA" symmetrical="false">SUM(DENOM_HSDSCH_MACD_STREA)</counter>
          <counter alias="SUM_HSDSCH_MACD_INTERA" symmetrical="false">SUM(SUM_HSDSCH_MACD_INTERA)</counter>
          <counter alias="DENOM_HSDSCH_MACD_INTERA" symmetrical="false">SUM(DENOM_HSDSCH_MACD_INTERA)</counter>
          <counter alias="SUM_HSDSCH_MACD_BGR" symmetrical="false">SUM(SUM_HSDSCH_MACD_BGR)</counter>
          <counter alias="DENOM_HSDSCH_MACD_BGR" symmetrical="false">SUM(DENOM_HSDSCH_MACD_BGR)</counter>
          <counter alias="SUM_EDCH_MACD_STREA" symmetrical="false">SUM(SUM_EDCH_MACD_STREA)</counter>
          <counter alias="DENOM_EDCH_MACD_STREA" symmetrical="false">SUM(DENOM_EDCH_MACD_STREA)</counter>
          <counter alias="SUM_EDCH_MACD_INTERA" symmetrical="false">SUM(SUM_EDCH_MACD_INTERA)</counter>
          <counter alias="DENOM_EDCH_MACD_INTERA" symmetrical="false">SUM(DENOM_EDCH_MACD_INTERA)</counter>
          <counter alias="SUM_EDCH_MACD_BGR" symmetrical="false">SUM(SUM_EDCH_MACD_BGR)</counter>
          <counter alias="DENOM_EDCH_MACD_BGR" symmetrical="false">SUM(DENOM_EDCH_MACD_BGR)</counter>
          <counter alias="DURA_HSDPA_USERS_1" symmetrical="false">SUM(DURA_HSDPA_USERS_1)</counter>
          <counter alias="DURA_HSDPA_USERS_3" symmetrical="false">SUM(DURA_HSDPA_USERS_3)</counter>
          <counter alias="DURA_HSDPA_USERS_49_TO_52" symmetrical="false">SUM(DURA_HSDPA_USERS_49_TO_52)</counter>
          <counter alias="DURA_HSDPA_USERS_53_TO_56" symmetrical="false">SUM(DURA_HSDPA_USERS_53_TO_56)</counter>
          <counter alias="DURA_HSDPA_USERS_57_TO_60" symmetrical="false">SUM(DURA_HSDPA_USERS_57_TO_60)</counter>
          <counter alias="DURA_HSDPA_USERS_61_TO_64" symmetrical="false">SUM(DURA_HSDPA_USERS_61_TO_64)</counter>
          <counter alias="DUR_HSUPA_USERS_1" symmetrical="false">SUM(DUR_HSUPA_USERS_1)</counter>
          <counter alias="DUR_HSUPA_USERS_3" symmetrical="false">SUM(DUR_HSUPA_USERS_3)</counter>
          <counter alias="RTWP_CLASS_0" symmetrical="false">SUM(RTWP_CLASS_0)</counter>
          <counter alias="RTWP_CLASS_1" symmetrical="false">SUM(RTWP_CLASS_1)</counter>
          <counter alias="RTWP_CLASS_2" symmetrical="false">SUM(RTWP_CLASS_2)</counter>
          <counter alias="RTWP_CLASS_3" symmetrical="false">SUM(RTWP_CLASS_3)</counter>
          <counter alias="RTWP_CLASS_4" symmetrical="false">SUM(RTWP_CLASS_4)</counter>
          <counter alias="RTWP_CLASS_5" symmetrical="false">SUM(RTWP_CLASS_5)</counter>
          <counter alias="RTWP_CLASS_6" symmetrical="false">SUM(RTWP_CLASS_6)</counter>
          <counter alias="RTWP_CLASS_7" symmetrical="false">SUM(RTWP_CLASS_7)</counter>
          <counter alias="RTWP_CLASS_8" symmetrical="false">SUM(RTWP_CLASS_8)</counter>
          <counter alias="RTWP_CLASS_9" symmetrical="false">SUM(RTWP_CLASS_9)</counter>
          <counter alias="RTWP_CLASS_10" symmetrical="false">SUM(RTWP_CLASS_10)</counter>
          <counter alias="RTWP_CLASS_11" symmetrical="false">SUM(RTWP_CLASS_11)</counter>
          <counter alias="RTWP_CLASS_12" symmetrical="false">SUM(RTWP_CLASS_12)</counter>
          <counter alias="RTWP_CLASS_13" symmetrical="false">SUM(RTWP_CLASS_13)</counter>
          <counter alias="RTWP_CLASS_14" symmetrical="false">SUM(RTWP_CLASS_14)</counter>
          <counter alias="RTWP_CLASS_15" symmetrical="false">SUM(RTWP_CLASS_15)</counter>
          <counter alias="RTWP_CLASS_16" symmetrical="false">SUM(RTWP_CLASS_16)</counter>
          <counter alias="RTWP_CLASS_17" symmetrical="false">SUM(RTWP_CLASS_17)</counter>
          <counter alias="RTWP_CLASS_18" symmetrical="false">SUM(RTWP_CLASS_18)</counter>
          <counter alias="RTWP_CLASS_19" symmetrical="false">SUM(RTWP_CLASS_19)</counter>
          <counter alias="RTWP_CLASS_20" symmetrical="false">SUM(RTWP_CLASS_20)</counter>
          <counter alias="RTWP_CLASS_21" symmetrical="false">SUM(RTWP_CLASS_21)</counter>
          <counter alias="TX_CR_PWR_CLASS_0" symmetrical="false">SUM(TX_CR_PWR_CLASS_0)</counter>
          <counter alias="TX_CR_PWR_CLASS_1" symmetrical="false">SUM(TX_CR_PWR_CLASS_1)</counter>
          <counter alias="TX_CR_PWR_CLASS_2" symmetrical="false">SUM(TX_CR_PWR_CLASS_2)</counter>
          <counter alias="TX_CR_PWR_CLASS_3" symmetrical="false">SUM(TX_CR_PWR_CLASS_3)</counter>
          <counter alias="TX_CR_PWR_CLASS_4" symmetrical="false">SUM(TX_CR_PWR_CLASS_4)</counter>
          <counter alias="TX_CR_PWR_CLASS_5" symmetrical="false">SUM(TX_CR_PWR_CLASS_5)</counter>
          <counter alias="TX_CR_PWR_CLASS_6" symmetrical="false">SUM(TX_CR_PWR_CLASS_6)</counter>
          <counter alias="TX_CR_PWR_CLASS_7" symmetrical="false">SUM(TX_CR_PWR_CLASS_7)</counter>
          <counter alias="TX_CR_PWR_CLASS_8" symmetrical="false">SUM(TX_CR_PWR_CLASS_8)</counter>
          <counter alias="TX_CR_PWR_CLASS_9" symmetrical="false">SUM(TX_CR_PWR_CLASS_9)</counter>
          <counter alias="TX_CR_PWR_CLASS_10" symmetrical="false">SUM(TX_CR_PWR_CLASS_10)</counter>
          <counter alias="TX_CODE_PWR_CLASS_0" symmetrical="false">SUM(TX_CODE_PWR_CLASS_0)</counter>
          <counter alias="TX_CODE_PWR_CLASS_1" symmetrical="false">SUM(TX_CODE_PWR_CLASS_1)</counter>
          <counter alias="TX_CODE_PWR_CLASS_2" symmetrical="false">SUM(TX_CODE_PWR_CLASS_2)</counter>
          <counter alias="TX_CODE_PWR_CLASS_3" symmetrical="false">SUM(TX_CODE_PWR_CLASS_3)</counter>
          <counter alias="TX_CODE_PWR_CLASS_4" symmetrical="false">SUM(TX_CODE_PWR_CLASS_4)</counter>
          <counter alias="TX_CODE_PWR_CLASS_5" symmetrical="false">SUM(TX_CODE_PWR_CLASS_5)</counter>
          <counter alias="TX_CODE_PWR_CLASS_6" symmetrical="false">SUM(TX_CODE_PWR_CLASS_6)</counter>
          <counter alias="TX_CODE_PWR_CLASS_7" symmetrical="false">SUM(TX_CODE_PWR_CLASS_7)</counter>
          <counter alias="TX_CODE_PWR_CLASS_8" symmetrical="false">SUM(TX_CODE_PWR_CLASS_8)</counter>
          <counter alias="TX_CODE_PWR_CLASS_9" symmetrical="false">SUM(TX_CODE_PWR_CLASS_9)</counter>
          <counter alias="DURA_HSDPA_USERS_17_OR_18" symmetrical="false">SUM(DURA_HSDPA_USERS_17_OR_18)</counter>
          <counter alias="DURA_HSDPA_USERS_65_TO_72" symmetrical="false">SUM(DURA_HSDPA_USERS_65_TO_72)</counter>
          <counter alias="DURA_HSUPA_USERS_21_TO_24" symmetrical="false">SUM(DURA_HSUPA_USERS_21_TO_24)</counter>
          <counter alias="DURA_HSUPA_USERS_25_TO_28" symmetrical="false">SUM(DURA_HSUPA_USERS_25_TO_28)</counter>
          <counter alias="DURA_HSUPA_USERS_29_TO_32" symmetrical="false">SUM(DURA_HSUPA_USERS_29_TO_32)</counter>
          <counter alias="DURA_HSUPA_USERS_33_TO_36" symmetrical="false">SUM(DURA_HSUPA_USERS_33_TO_36)</counter>
          <counter alias="DURA_HSUPA_USERS_37_TO_40" symmetrical="false">SUM(DURA_HSUPA_USERS_37_TO_40)</counter>
          <counter alias="DURA_HSUPA_USERS_41_TO_44" symmetrical="false">SUM(DURA_HSUPA_USERS_41_TO_44)</counter>
          <counter alias="DURA_HSUPA_USERS_45_TO_48" symmetrical="false">SUM(DURA_HSUPA_USERS_45_TO_48)</counter>
          <counter alias="DURA_HSUPA_USERS_49_TO_52" symmetrical="false">SUM(DURA_HSUPA_USERS_49_TO_52)</counter>
          <counter alias="DURA_HSUPA_USERS_53_TO_56" symmetrical="false">SUM(DURA_HSUPA_USERS_53_TO_56)</counter>
          <counter alias="DURA_HSUPA_USERS_57_TO_60" symmetrical="false">SUM(DURA_HSUPA_USERS_57_TO_60)</counter>
          <counter alias="DURA_HSUPA_USERS_61_TO_64" symmetrical="false">SUM(DURA_HSUPA_USERS_61_TO_64)</counter>
          <counter alias="DURA_HSUPA_USERS_65_TO_72" symmetrical="false">SUM(DURA_HSUPA_USERS_65_TO_72)</counter>
          <counter alias="WCELL_POWER_SAVING_MODE_ACT" symmetrical="false">SUM(WCELL_POWER_SAVING_MODE_ACT)</counter>
          <counter alias="AVAIL_WCELL_IN_POWER_SAVING" symmetrical="false">SUM(AVAIL_WCELL_IN_POWER_SAVING)</counter>
          <counter alias="RB_DOWNGR_DUE_PBS_INTERF_UL" symmetrical="false">SUM(RB_DOWNGR_DUE_PBS_INTERF_UL)</counter>
          <counter alias="RB_RELEASE_DUE_PBS_INTERF_UL" symmetrical="false">SUM(RB_RELEASE_DUE_PBS_INTERF_UL)</counter>
          <counter alias="RB_REL_DUE_PRE_EMP_INTF_UL" symmetrical="false">SUM(RB_REL_DUE_PRE_EMP_INTF_UL)</counter>
          <counter alias="AVE_RESID_UL_POWER" symmetrical="false">ROUND(DECODE(NVL(SUM(RESID_UL_POWER_SAMPLES),0),0,0,10*LOG(10,(SUM(RESID_UL_POWER_SAMPLES*(POWER(10,(AVE_RESID_UL_POWER/10))/1000))/SUM(RESID_UL_POWER_SAMPLES))*1000)),3)</counter>
          <counter alias="RESID_UL_POWER_SAMPLES" symmetrical="false">SUM(RESID_UL_POWER_SAMPLES)</counter>
          <counter alias="DURA_HSUPA_USERS_73_TO_80" symmetrical="false">SUM(DURA_HSUPA_USERS_73_TO_80)</counter>
          <counter alias="DURA_HSUPA_USERS_81_TO_96" symmetrical="false">SUM(DURA_HSUPA_USERS_81_TO_96)</counter>
          <counter alias="DURA_HSUPA_USERS_97_TO_112" symmetrical="false">SUM(DURA_HSUPA_USERS_97_TO_112)</counter>
          <counter alias="DURA_HSUPA_USERS_113_OR_MORE" symmetrical="false">SUM(DURA_HSUPA_USERS_113_OR_MORE)</counter>
          <counter alias="MAX_HSUPA_USERS_IN_SERV_CELL" symmetrical="false">MAX(MAX_HSUPA_USERS_IN_SERV_CELL)</counter>
          <counter alias="SUM_HSUPA_USERS_IN_SERV_CELL" symmetrical="false">SUM(SUM_HSUPA_USERS_IN_SERV_CELL)</counter>
          <counter alias="DURA_HSDPA_USERS_73_TO_80" symmetrical="false">SUM(DURA_HSDPA_USERS_73_TO_80)</counter>
          <counter alias="DURA_HSDPA_USERS_81_TO_96" symmetrical="false">SUM(DURA_HSDPA_USERS_81_TO_96)</counter>
          <counter alias="DURA_HSDPA_USERS_97_TO_112" symmetrical="false">SUM(DURA_HSDPA_USERS_97_TO_112)</counter>
          <counter alias="DURA_HSDPA_USERS_113_OR_MORE" symmetrical="false">SUM(DURA_HSDPA_USERS_113_OR_MORE)</counter>
          <counter alias="CELL_RESOURCE_SPARE_5" symmetrical="false">SUM(CELL_RESOURCE_SPARE_5)</counter>
          <counter alias="CELL_RESOURCE_SPARE_6" symmetrical="false">SUM(CELL_RESOURCE_SPARE_6)</counter>
          <counter alias="MAX_AVAIL_R99_DL_CODE" symmetrical="false">MAX(MAX_AVAIL_R99_DL_CODE)</counter>
          <counter alias="CHAN_CODE_SF16_HS_REQUEST" symmetrical="false">SUM(CHAN_CODE_SF16_HS_REQUEST)</counter>
          <counter alias="RTWP_TOO_LOW" symmetrical="false">SUM(RTWP_TOO_LOW)</counter>
          <counter alias="BMC_DATA_REQUEST" symmetrical="false">SUM(BMC_DATA_REQUEST)</counter>
          <counter alias="BMC_DATA_INDICATION" symmetrical="false">SUM(BMC_DATA_INDICATION)</counter>
          <counter alias="BMC_DATA_CONFIRMATION" symmetrical="false">SUM(BMC_DATA_CONFIRMATION)</counter>
          <counter alias="CTCH_BLK_SCHEDULED" symmetrical="false">SUM(CTCH_BLK_SCHEDULED)</counter>
          <counter alias="CTCH_BLK_FACH_DISCARD" symmetrical="false">SUM(CTCH_BLK_FACH_DISCARD)</counter>
          <counter alias="ACCESS_RESTR_ACTIVE_SAMPLES" symmetrical="false">SUM(ACCESS_RESTR_ACTIVE_SAMPLES)</counter>
          <counter alias="ACCESS_CLASSES_BLOCKED" symmetrical="false">SUM(ACCESS_CLASSES_BLOCKED)</counter>
          <counter alias="MEH_ACTIVE_DURATION" symmetrical="false">SUM(MEH_ACTIVE_DURATION)</counter>
          <counter alias="MEH_ACTIVATIONS" symmetrical="false">SUM(MEH_ACTIVATIONS)</counter>
          <counter alias="ACCESS_RESTR_ACT_BTS_SAMPLES" symmetrical="false">SUM(ACCESS_RESTR_ACT_BTS_SAMPLES)</counter>
          <counter alias="period_duration_sum" symmetrical="false">SUM(period_duration_sum)</counter>
    </counters>
    <table_name>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</table_name>
    <alias_name>CELLRES</alias_name>
    <ui_name>Cell Resource</ui_name>
  </temp_table>
  <kpi name="period_duration">
    <formula>CELLRES.period_duration</formula>
    <kpi_info>
      <title>period_duration (period_duration)</title>
      <use>Duration of the measurement period in minutes.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula time-formula="SUM(period_duration)">AVG(period_duration)</formula>
      <unit>min</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>period_duration (period_duration)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_prxtot_class_0">
    <formula>CELLRES.ave_prxtot_class_0</formula>
    <kpi_info>
      <title>ave_prxtot_class_0 (M1000C0)</title>
      <use>The average Rel99 received power in relation to the unloaded area. NOTE: RNW Measurement Presentation GUI shows the dBm values, not the RSSI_LEV values. UPDATED: The estimated PrxTotal (HSUPA disabled) or PrxNonEDPCH (HSUPA enabled) is calculated periodically and updated to this counter if the value is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>(((DECODE(SUM(PRXTOT_DENOM_0),0,-112.1,10*LOG(10,(SUM(PRXTOT_DENOM_0*0.001*POWER(10,((ave_prxtot_class_0/621*62-112.1)/10)))/SUM(PRXTOT_DENOM_0))/0.001)))+112)*621/62+1)</formula>
      <unit>RSSI_LEV</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_prxtot_class_0 (M1000C0)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="prxtot_denom_0">
    <formula>CELLRES.prxtot_denom_0</formula>
    <kpi_info>
      <title>prxtot_denom_0 (M1000C1)</title>
      <use>Denominator for PrxTotal Class 0 (=Unloaded Area). UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(prxtot_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>prxtot_denom_0 (M1000C1)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_prxtot_class_1">
    <formula>CELLRES.ave_prxtot_class_1</formula>
    <kpi_info>
      <title>ave_prxtot_class_1 (M1000C2)</title>
      <use>The average Rel99 received power in relation to the feasible load area 1. NOTE: The RNW Measurement Presentation GUI shows the dBm values, not the RSSI_LEV values. UPDATED: The estimated PrxTotal (HSUPA disabled) or PrxNonEDPCH (HSUPA enabled) is calculated periodically and updated to this counter if the value is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>(((DECODE(SUM(PRXTOT_DENOM_1),0,-112.1,10*LOG(10,(SUM(PRXTOT_DENOM_1*0.001*POWER(10,((ave_prxtot_class_1/621*62-112.1)/10)))/SUM(PRXTOT_DENOM_1))/0.001)))+112)*621/62+1)</formula>
      <unit>RSSI_LEV</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_prxtot_class_1 (M1000C2)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="prxtot_denom_1">
    <formula>CELLRES.prxtot_denom_1</formula>
    <kpi_info>
      <title>prxtot_denom_1 (M1000C3)</title>
      <use>Denominator for PrxTotal Class 1 (=Feasible Load Area 1). UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(prxtot_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>prxtot_denom_1 (M1000C3)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_prxtot_class_2">
    <formula>CELLRES.ave_prxtot_class_2</formula>
    <kpi_info>
      <title>ave_prxtot_class_2 (M1000C4)</title>
      <use>The average Rel99 received power in relation to the feasible load area 2. NOTE: The RNW Measurement Presentation GUI shows the dBm values, not the RSSI_LEV values. UPDATED: The estimated PrxTotal (HSUPA disabled) or PrxNonEDPCH (HSUPA enabled) is calculated periodically and updated to this counter if the value is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>(((DECODE(SUM(PRXTOT_DENOM_2),0,-112.1,10*LOG(10,(SUM(PRXTOT_DENOM_2*0.001*POWER(10,((ave_prxtot_class_2/621*62-112.1)/10)))/SUM(PRXTOT_DENOM_2))/0.001)))+112)*621/62+1)</formula>
      <unit>RSSI_LEV</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_prxtot_class_2 (M1000C4)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="prxtot_denom_2">
    <formula>CELLRES.prxtot_denom_2</formula>
    <kpi_info>
      <title>prxtot_denom_2 (M1000C5)</title>
      <use>Denominator for PrxTotal Class 2 (=Feasible Load Area 2). UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(prxtot_denom_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>prxtot_denom_2 (M1000C5)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_prxtot_class_3">
    <formula>CELLRES.ave_prxtot_class_3</formula>
    <kpi_info>
      <title>ave_prxtot_class_3 (M1000C6)</title>
      <use>The average Rel99 received power in relation to the marginal load area. NOTE: The RNW Measurement Presentation GUI shows the dBm values, not the RSSI_LEV values. UPDATED: The estimated PrxTotal (HSUPA disabled) or PrxNonEDPCH (HSUPA enabled) is calculated periodically and updated to this counter if the value is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>(((DECODE(SUM(PRXTOT_DENOM_3),0,-112.1,10*LOG(10,(SUM(PRXTOT_DENOM_3*0.001*POWER(10,((ave_prxtot_class_3/621*62-112.1)/10)))/SUM(PRXTOT_DENOM_3))/0.001)))+112)*621/62+1)</formula>
      <unit>RSSI_LEV</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_prxtot_class_3 (M1000C6)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="prxtot_denom_3">
    <formula>CELLRES.prxtot_denom_3</formula>
    <kpi_info>
      <title>prxtot_denom_3 (M1000C7)</title>
      <use>Denominator for PrxTotal Class 3 (=Marginal Load Area). UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(prxtot_denom_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>prxtot_denom_3 (M1000C7)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_prxtot_class_4">
    <formula>CELLRES.ave_prxtot_class_4</formula>
    <kpi_info>
      <title>ave_prxtot_class_4 (M1000C8)</title>
      <use>The average Rel99 received power in relation to the overload area. NOTE: The RNW Measurement Presentation GUI shows the dBm values, not the RSSI_LEV values. UPDATED: The estimated PrxTotal (HSUPA disabled) or PrxNonEDPCH (HSUPA enabled) is calculated periodically and updated to this counter if the value is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>(((DECODE(SUM(PRXTOT_DENOM_4),0,-112.1,10*LOG(10,(SUM(PRXTOT_DENOM_4*0.001*POWER(10,((ave_prxtot_class_4/621*62-112.1)/10)))/SUM(PRXTOT_DENOM_4))/0.001)))+112)*621/62+1)</formula>
      <unit>RSSI_LEV</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_prxtot_class_4 (M1000C8)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="prxtot_denom_4">
    <formula>CELLRES.prxtot_denom_4</formula>
    <kpi_info>
      <title>prxtot_denom_4 (M1000C9)</title>
      <use>Denominator for PrxTotal Class 4 (=Overload Area). UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(prxtot_denom_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>prxtot_denom_4 (M1000C9)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_prx_noise">
    <formula>CELLRES.ave_prx_noise</formula>
    <kpi_info>
      <title>ave_prx_noise (M1000C10)</title>
      <use>The average PrxNoise threshold used in admission control. The real dBm value is obtained when divided by -100. UPDATED: This counter is updated periodically according to the RNC internal timer. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(prx_noise_denom_1),0),0,0,10*LOG(10,(SUM(prx_noise_denom_1*0.001*POWER(10,((ave_prx_noise/100)/10)))/SUM(prx_noise_denom_1))/0.001))))*100),0)</formula>
      <unit>-0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_prx_noise (M1000C10)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="prx_noise_denom_1">
    <formula>CELLRES.prx_noise_denom_1</formula>
    <kpi_info>
      <title>prx_noise_denom_1 (M1000C11)</title>
      <use>The number of samples taken for counter M1000C10. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the PrxNoise value is updated to M1000C10. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(prx_noise_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>prx_noise_denom_1 (M1000C11)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="max_prx_noise_value">
    <formula>CELLRES.max_prx_noise_value</formula>
    <kpi_info>
      <title>max_prx_noise_value (M1000C12)</title>
      <use>Maximum PrxNoise threshold value. NOTE! Real dBm value is obtained when divided by -100! UPDATED:This counter is updated if the value of the counter is smaller than the current value of PrxNoise threshold.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MIN(max_prx_noise_value)</formula>
      <unit>-0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>max_prx_noise_value (M1000C12)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="min_prx_noise_value">
    <formula>CELLRES.min_prx_noise_value</formula>
    <kpi_info>
      <title>min_prx_noise_value (M1000C13)</title>
      <use>Minimum PrxNoise threshold value. NOTE: Real dBm value is obtained when divided by -100! UPDATED:This counter is updated if the value of the counter is bigger than the current value of PrxNoise threshold.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(min_prx_noise_value)</formula>
      <unit>-0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>min_prx_noise_value (M1000C13)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptxtot_class_0">
    <formula>CELLRES.ave_ptxtot_class_0</formula>
    <kpi_info>
      <title>ave_ptxtot_class_0 (M1000C14)</title>
      <use>HSDPA not in use or HSDPA in use and there is not any HS-DSCH users in cell: The average PtxTotal in relation to the [unloaded area]. HSDPA in use and there is at least one HS-DSCH user in cell: The average PtxNonHSPA in relation to the [unloaded area]. The real dBm value is obtained when divided by 100. UPDATED: The estimated PtxTotal or PtxNonHSPA is calculated periodically and updated to this counter if the value is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptxtot_denom_0),0),0,0,10*LOG(10,(SUM(ptxtot_denom_0*0.001*POWER(10,((ave_ptxtot_class_0/100)/10)))/SUM(ptxtot_denom_0))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptxtot_class_0 (M1000C14)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptxtot_denom_0">
    <formula>CELLRES.ptxtot_denom_0</formula>
    <kpi_info>
      <title>ptxtot_denom_0 (M1000C15)</title>
      <use>Denominator for PtxTotal Class 0 (=Unloaded Area). UPDATED: Incremented by value 1 when the estimated transmission power is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptxtot_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptxtot_denom_0 (M1000C15)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptxtot_class_1">
    <formula>CELLRES.ave_ptxtot_class_1</formula>
    <kpi_info>
      <title>ave_ptxtot_class_1 (M1000C16)</title>
      <use>HSDPA not in use or HSDPA in use and there is not any HS-DSCH users in cell: The average PtxTotal in relation to the [feasible load area 1]. HSDPA in use and there is at least one HS-DSCH user in cell: The average PtxNonHSPA in relation to the [feasible load area 1]. The real dBm value is obtained when divided by 100. UPDATED: The estimated PtxTotal or PtxNonHSPA is calculated periodically and updated to this counter if the value is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptxtot_denom_1),0),0,0,10*LOG(10,(SUM(ptxtot_denom_1*0.001*POWER(10,((ave_ptxtot_class_1/100)/10)))/SUM(ptxtot_denom_1))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptxtot_class_1 (M1000C16)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptxtot_denom_1">
    <formula>CELLRES.ptxtot_denom_1</formula>
    <kpi_info>
      <title>ptxtot_denom_1 (M1000C17)</title>
      <use>Denominator for PtxTotal Class 1 (=Feasible Load Area 1). UPDATED: Incremented by value 1 when the estimated transmission power is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptxtot_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptxtot_denom_1 (M1000C17)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptxtot_class_2">
    <formula>CELLRES.ave_ptxtot_class_2</formula>
    <kpi_info>
      <title>ave_ptxtot_class_2 (M1000C18)</title>
      <use>HSDPA not in use or HSDPA in use and there is not any HS-DSCH users in cell: The average PtxTotal in relation to the [feasible load area 2]. HSDPA in use and there is at least one HS-DSCH user in cell: The average PtxNonHSPA in relation to the [feasible load area 2]. The real dBm value is obtained when divided by 100. UPDATED: The estimated PtxTotal or PtxNonHSPA is calculated periodically and updated to this counter if the value is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptxtot_denom_2),0),0,0,10*LOG(10,(SUM(ptxtot_denom_2*0.001*POWER(10,((ave_ptxtot_class_2/100)/10)))/SUM(ptxtot_denom_2))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptxtot_class_2 (M1000C18)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptxtot_denom_2">
    <formula>CELLRES.ptxtot_denom_2</formula>
    <kpi_info>
      <title>ptxtot_denom_2 (M1000C19)</title>
      <use>Denominator for PtxTotal Class 2 (=Feasible Load Area 2). UPDATED: Incremented by value 1 when the estimated transmission power is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptxtot_denom_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptxtot_denom_2 (M1000C19)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptxtot_class_3">
    <formula>CELLRES.ave_ptxtot_class_3</formula>
    <kpi_info>
      <title>ave_ptxtot_class_3 (M1000C20)</title>
      <use>HSDPA not in use or HSDPA in use and there is not any HS-DSCH users in cell: The average PtxTotal in relation to the [marginal load area]. HSDPA in use and there is at least one HS-DSCH user in cell: The average PtxNonHSPA in relation to the [marginal load area]. The real dBm value is obtained when divided by 100. UPDATED: The estimated PtxTotal or PtxNonHSPA is calculated periodically and updated to this counter if the value is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptxtot_denom_3),0),0,0,10*LOG(10,(SUM(ptxtot_denom_3*0.001*POWER(10,((ave_ptxtot_class_3/100)/10)))/SUM(ptxtot_denom_3))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptxtot_class_3 (M1000C20)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptxtot_denom_3">
    <formula>CELLRES.ptxtot_denom_3</formula>
    <kpi_info>
      <title>ptxtot_denom_3 (M1000C21)</title>
      <use>Denominator for PtxTotal Class 3 (=Marginal Load Area). UPDATED: Incremented by value 1 when the estimated transmission power is inside Class 3 range. This counter is not incremented if class 4 and class 3 ranges are the same. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptxtot_denom_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptxtot_denom_3 (M1000C21)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptxtot_class_4">
    <formula>CELLRES.ave_ptxtot_class_4</formula>
    <kpi_info>
      <title>ave_ptxtot_class_4 (M1000C22)</title>
      <use>HSDPA not in use or HSDPA in use and there is not any HS-DSCH users in cell: The average PtxTotal in relation to the [overload area]. HSDPA in use and there is at least one HS-DSCH user in cell: The average PtxNonHSPA in relation to the [overload area]. The real dBm value is obtained when divided by 100. UPDATED: The estimated PtxTotal or PtxNonHSPA is calculated periodically and updated to this counter if the value is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptxtot_denom_4),0),0,0,10*LOG(10,(SUM(ptxtot_denom_4*0.001*POWER(10,((ave_ptxtot_class_4/100)/10)))/SUM(ptxtot_denom_4))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptxtot_class_4 (M1000C22)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptxtot_denom_4">
    <formula>CELLRES.ptxtot_denom_4</formula>
    <kpi_info>
      <title>ptxtot_denom_4 (M1000C23)</title>
      <use>Denominator for PtxTotal Class 4 (=Overload Area). UPDATED: Incremented by value 1 when the estimated transmission power is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptxtot_denom_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptxtot_denom_4 (M1000C23)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_lrt_class_0">
    <formula>CELLRES.ave_lrt_class_0</formula>
    <kpi_info>
      <title>ave_lrt_class_0 (M1000C24)</title>
      <use>Average Uplink RT load factor for own cell users when the cell has been in 'PrxTotal Unloaded Area' (Class 0). The RT load factor is an estimate calculated by Admission Control. UPDATED: The uplink RT load factor is calculated periodically and updated to this counter if the estimated received Rel99 power value is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(lrt_denom_0),0),0,0,SUM(ave_lrt_class_0*lrt_denom_0)/SUM(lrt_denom_0)),3)</formula>
      <unit>0.01*%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_lrt_class_0 (M1000C24)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="lrt_denom_0">
    <formula>CELLRES.lrt_denom_0</formula>
    <kpi_info>
      <title>lrt_denom_0 (M1000C25)</title>
      <use>The number of samples taken for counter M1000C24. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(lrt_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>lrt_denom_0 (M1000C25)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_lrt_class_1">
    <formula>CELLRES.ave_lrt_class_1</formula>
    <kpi_info>
      <title>ave_lrt_class_1 (M1000C26)</title>
      <use>Average Uplink RT load factor for own cell users when the cell has been in 'Feasible Load Area 1' (Class 1). The RT load factor is an estimate calculated by Admission Control. UPDATED: The uplink RT load factor is calculated periodically and updated to this counter if the estimated received Rel99 power value is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(lrt_denom_1),0),0,0,SUM(ave_lrt_class_1*lrt_denom_1)/SUM(lrt_denom_1)),3)</formula>
      <unit>0.01*%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_lrt_class_1 (M1000C26)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="lrt_denom_1">
    <formula>CELLRES.lrt_denom_1</formula>
    <kpi_info>
      <title>lrt_denom_1 (M1000C27)</title>
      <use>The number of samples taken for counter M1000C26. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(lrt_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>lrt_denom_1 (M1000C27)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_lrt_class_2">
    <formula>CELLRES.ave_lrt_class_2</formula>
    <kpi_info>
      <title>ave_lrt_class_2 (M1000C28)</title>
      <use>Average Uplink RT load factor for own cell users when the cell has been in 'Feasible Load Area 2' (Class 2). The RT load factor is an estimate calculated by Admission Control. UPDATED: The uplink RT load factor is calculated periodically and updated to this counter if the estimated received Rel99 power value is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(lrt_denom_2),0),0,0,SUM(ave_lrt_class_2*lrt_denom_2)/SUM(lrt_denom_2)),3)</formula>
      <unit>0.01*%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_lrt_class_2 (M1000C28)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="lrt_denom_2">
    <formula>CELLRES.lrt_denom_2</formula>
    <kpi_info>
      <title>lrt_denom_2 (M1000C29)</title>
      <use>The number of samples taken for counter M1000C28. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(lrt_denom_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>lrt_denom_2 (M1000C29)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_lrt_class_3">
    <formula>CELLRES.ave_lrt_class_3</formula>
    <kpi_info>
      <title>ave_lrt_class_3 (M1000C30)</title>
      <use>Average Uplink RT load factor for own cell users when the cell has been in 'Marginal Load Area' (Class 3). The RT load factor is an estimate calculated by Admission Control. UPDATED: The uplink RT load factor is calculated periodically and updated to this counter if the estimated received Rel99 power value is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(lrt_denom_3),0),0,0,SUM(ave_lrt_class_3*lrt_denom_3)/SUM(lrt_denom_3)),3)</formula>
      <unit>0.01*%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_lrt_class_3 (M1000C30)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="lrt_denom_3">
    <formula>CELLRES.lrt_denom_3</formula>
    <kpi_info>
      <title>lrt_denom_3 (M1000C31)</title>
      <use>The number of samples taken for counter M1000C30. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(lrt_denom_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>lrt_denom_3 (M1000C31)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_lrt_class_4">
    <formula>CELLRES.ave_lrt_class_4</formula>
    <kpi_info>
      <title>ave_lrt_class_4 (M1000C32)</title>
      <use>Average Uplink RT load factor for own cell users when the cell has been in 'Overload Area' (Class 4). The RT load factor is an estimate calculated by Admission Control. UPDATED: The uplink RT load factor is calculated periodically and updated to this counter if the estimated received Rel99 power value is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(lrt_denom_4),0),0,0,SUM(ave_lrt_class_4*lrt_denom_4)/SUM(lrt_denom_4)),3)</formula>
      <unit>0.01*%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_lrt_class_4 (M1000C32)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="lrt_denom_4">
    <formula>CELLRES.lrt_denom_4</formula>
    <kpi_info>
      <title>lrt_denom_4 (M1000C33)</title>
      <use>The number of samples taken for counter M1000C32. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(lrt_denom_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>lrt_denom_4 (M1000C33)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_lnrt_class_0">
    <formula>CELLRES.ave_lnrt_class_0</formula>
    <kpi_info>
      <title>ave_lnrt_class_0 (M1000C34)</title>
      <use>Average Uplink NRT load factor for own cell users when the cell has been in 'PrxTotal Unloaded Area' (Class 0). The NRT load factor is an estimate calculated by Packet Scheduler. UPDATED: The uplink NRT load factor is calculated periodically and updated to this counter if the estimated received Rel99 power value is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(lnrt_denom_0),0),0,0,SUM(ave_lnrt_class_0*lnrt_denom_0)/SUM(lnrt_denom_0)),3)</formula>
      <unit>0.01*%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_lnrt_class_0 (M1000C34)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="lnrt_denom_0">
    <formula>CELLRES.lnrt_denom_0</formula>
    <kpi_info>
      <title>lnrt_denom_0 (M1000C35)</title>
      <use>The number of samples taken for counter M1000C34. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(lnrt_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>lnrt_denom_0 (M1000C35)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_lnrt_class_1">
    <formula>CELLRES.ave_lnrt_class_1</formula>
    <kpi_info>
      <title>ave_lnrt_class_1 (M1000C36)</title>
      <use>Average Uplink NRT load factor for own cell users when the cell has been in 'Feasible Load Area 1' (Class 1). The NRT load factor is an estimate calculated by Packet Scheduler. UPDATED: The uplink NRT load factor is calculated periodically and updated to this counter if the estimated received Rel99 power value is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(lnrt_denom_1),0),0,0,SUM(ave_lnrt_class_1*lnrt_denom_1)/SUM(lnrt_denom_1)),3)</formula>
      <unit>0.01*%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_lnrt_class_1 (M1000C36)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="lnrt_denom_1">
    <formula>CELLRES.lnrt_denom_1</formula>
    <kpi_info>
      <title>lnrt_denom_1 (M1000C37)</title>
      <use>The number of samples taken for counter M1000C36. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(lnrt_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>lnrt_denom_1 (M1000C37)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_lnrt_class_2">
    <formula>CELLRES.ave_lnrt_class_2</formula>
    <kpi_info>
      <title>ave_lnrt_class_2 (M1000C38)</title>
      <use>Average Uplink NRT load factor for own cell users when the cell has been in 'Feasible Load Area' (Class 2). The NRT load factor is an estimate calculated by Packet Scheduler. UPDATED: The uplink NRT load factor is calculated periodically and updated to this counter if the estimated received Rel99 power value is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(lnrt_denom_2),0),0,0,SUM(ave_lnrt_class_2*lnrt_denom_2)/SUM(lnrt_denom_2)),3)</formula>
      <unit>0.01*%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_lnrt_class_2 (M1000C38)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="lnrt_denom_2">
    <formula>CELLRES.lnrt_denom_2</formula>
    <kpi_info>
      <title>lnrt_denom_2 (M1000C39)</title>
      <use>The number of samples taken for counter M1000C38. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(lnrt_denom_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>lnrt_denom_2 (M1000C39)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_lnrt_class_3">
    <formula>CELLRES.ave_lnrt_class_3</formula>
    <kpi_info>
      <title>ave_lnrt_class_3 (M1000C40)</title>
      <use>Average Uplink NRT load factor for own cell users when the cell has been in 'Marginal Load Area' (Class 3). The NRT load factor is an estimate calculated by Packet Scheduler. UPDATED: The uplink NRT load factor is calculated periodically and updated to this counter if the estimated received Rel99 power value is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(lnrt_denom_3),0),0,0,SUM(ave_lnrt_class_3*lnrt_denom_3)/SUM(lnrt_denom_3)),3)</formula>
      <unit>0.01*%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_lnrt_class_3 (M1000C40)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="lnrt_denom_3">
    <formula>CELLRES.lnrt_denom_3</formula>
    <kpi_info>
      <title>lnrt_denom_3 (M1000C41)</title>
      <use>The number of samples taken for counter M1000C40. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(lnrt_denom_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>lnrt_denom_3 (M1000C41)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_lnrt_class_4">
    <formula>CELLRES.ave_lnrt_class_4</formula>
    <kpi_info>
      <title>ave_lnrt_class_4 (M1000C42)</title>
      <use>Average Uplink NRT load factor for own cell users when the cell has been in 'Overload Area' (Class 4). The NRT load factor is an estimate calculated by Packet Scheduler. UPDATED: The uplink NRT load factor is calculated periodically and updated to this counter if the estimated received Rel99 power value is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(lnrt_denom_4),0),0,0,SUM(ave_lnrt_class_4*lnrt_denom_4)/SUM(lnrt_denom_4)),3)</formula>
      <unit>0.01*%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_lnrt_class_4 (M1000C42)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="lnrt_denom_4">
    <formula>CELLRES.lnrt_denom_4</formula>
    <kpi_info>
      <title>lnrt_denom_4 (M1000C43)</title>
      <use>The number of samples taken for counter M1000C42. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 received power estimation is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(lnrt_denom_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>lnrt_denom_4 (M1000C43)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptx_nrt_class_0">
    <formula>CELLRES.ave_ptx_nrt_class_0</formula>
    <kpi_info>
      <title>ave_ptx_nrt_class_0 (M1000C44)</title>
      <use>Estimated average downlink transmitted power for NRT users on the cell for Class 0 (Unloaded area). NOTE: Real dBm value is obtained when divided by 100. UPDATED: The estimated PtxNRT is calculated periodically and updated to this counter if the total transmitted Rel99 power value is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptx_nrt_denom_0),0),0,0,10*LOG(10,(SUM(ptx_nrt_denom_0*0.001*POWER(10,((ave_ptx_nrt_class_0/100)/10)))/SUM(ptx_nrt_denom_0))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptx_nrt_class_0 (M1000C44)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptx_nrt_denom_0">
    <formula>CELLRES.ptx_nrt_denom_0</formula>
    <kpi_info>
      <title>ptx_nrt_denom_0 (M1000C45)</title>
      <use>The number of samples taken for counter M1000C44. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 transmitted power estimation is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptx_nrt_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptx_nrt_denom_0 (M1000C45)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptx_nrt_class_1">
    <formula>CELLRES.ave_ptx_nrt_class_1</formula>
    <kpi_info>
      <title>ave_ptx_nrt_class_1 (M1000C46)</title>
      <use>Estimated average downlink transmitted power for NRT users on the cell for Class 1 (Feasible load area 1). NOTE: Real dBm value is obtained when divided by 100. UPDATED: The estimated PtxNRT is calculated periodically and updated to this counter if the total transmitted Rel99 power value is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptx_nrt_denom_1),0),0,0,10*LOG(10,(SUM(ptx_nrt_denom_1*0.001*POWER(10,((ave_ptx_nrt_class_1/100)/10)))/SUM(ptx_nrt_denom_1))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptx_nrt_class_1 (M1000C46)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptx_nrt_denom_1">
    <formula>CELLRES.ptx_nrt_denom_1</formula>
    <kpi_info>
      <title>ptx_nrt_denom_1 (M1000C47)</title>
      <use>The number of samples taken for counter M1000C46. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 transmitted power estimation is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptx_nrt_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptx_nrt_denom_1 (M1000C47)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptx_nrt_class_2">
    <formula>CELLRES.ave_ptx_nrt_class_2</formula>
    <kpi_info>
      <title>ave_ptx_nrt_class_2 (M1000C48)</title>
      <use>Estimated average downlink transmitted power for NRT users on the cell for Class 2 (Feasible load area 2). NOTE: Real dBm value is obtained when divided by 100. UPDATED: The estimated PtxNRT is calculated periodically and updated to this counter if the total transmitted Rel99 power value is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptx_nrt_denom_2),0),0,0,10*LOG(10,(SUM(ptx_nrt_denom_2*0.001*POWER(10,((ave_ptx_nrt_class_2/100)/10)))/SUM(ptx_nrt_denom_2))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptx_nrt_class_2 (M1000C48)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptx_nrt_denom_2">
    <formula>CELLRES.ptx_nrt_denom_2</formula>
    <kpi_info>
      <title>ptx_nrt_denom_2 (M1000C49)</title>
      <use>The number of samples taken for counter M1000C48. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 transmitted power estimation is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptx_nrt_denom_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptx_nrt_denom_2 (M1000C49)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptx_nrt_class_3">
    <formula>CELLRES.ave_ptx_nrt_class_3</formula>
    <kpi_info>
      <title>ave_ptx_nrt_class_3 (M1000C50)</title>
      <use>Estimated average downlink transmitted power for NRT users on the cell for Class 3 (Marginal load area). NOTE: Real dBm value is obtained when divided by 100. UPDATED: The estimated PtxNRT is calculated periodically and updated to this counter if the total transmitted Rel99 power value is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptx_nrt_denom_3),0),0,0,10*LOG(10,(SUM(ptx_nrt_denom_3*0.001*POWER(10,((ave_ptx_nrt_class_3/100)/10)))/SUM(ptx_nrt_denom_3))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptx_nrt_class_3 (M1000C50)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptx_nrt_denom_3">
    <formula>CELLRES.ptx_nrt_denom_3</formula>
    <kpi_info>
      <title>ptx_nrt_denom_3 (M1000C51)</title>
      <use>The number of samples taken for counter M1000C50. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 transmitted power estimation is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptx_nrt_denom_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptx_nrt_denom_3 (M1000C51)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptx_nrt_class_4">
    <formula>CELLRES.ave_ptx_nrt_class_4</formula>
    <kpi_info>
      <title>ave_ptx_nrt_class_4 (M1000C52)</title>
      <use>Estimated average downlink transmitted power for NRT users on the cell for Class 4 (Overload area). NOTE: Real dBm value is obtained when divided by 100. UPDATED: The estimated PtxNRT is calculated periodically and updated to this counter if the total transmitted Rel99 power value is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptx_nrt_denom_4),0),0,0,10*LOG(10,(SUM(ptx_nrt_denom_4*0.001*POWER(10,((ave_ptx_nrt_class_4/100)/10)))/SUM(ptx_nrt_denom_4))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptx_nrt_class_4 (M1000C52)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptx_nrt_denom_4">
    <formula>CELLRES.ptx_nrt_denom_4</formula>
    <kpi_info>
      <title>ptx_nrt_denom_4 (M1000C53)</title>
      <use>The number of samples taken for counter M1000C52. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 transmitted power estimation is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptx_nrt_denom_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptx_nrt_denom_4 (M1000C53)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_rach_load">
    <formula>CELLRES.ave_rach_load</formula>
    <kpi_info>
      <title>ave_rach_load (M1000C54)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_rach_load)</formula>
      <unit>value*10.0</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_rach_load (M1000C54)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rach_denom_0">
    <formula>CELLRES.rach_denom_0</formula>
    <kpi_info>
      <title>rach_denom_0 (M1000C55)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rach_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rach_denom_0 (M1000C55)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_rach_decod_msgs">
    <formula>CELLRES.ave_rach_decod_msgs</formula>
    <kpi_info>
      <title>ave_rach_decod_msgs (M1000C56)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_rach_decod_msgs)</formula>
      <unit>value*10.0</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_rach_decod_msgs (M1000C56)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rach_denom_1">
    <formula>CELLRES.rach_denom_1</formula>
    <kpi_info>
      <title>rach_denom_1 (M1000C57)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rach_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rach_denom_1 (M1000C57)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_succ_decod_msgs">
    <formula>CELLRES.ave_succ_decod_msgs</formula>
    <kpi_info>
      <title>ave_succ_decod_msgs (M1000C58)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_succ_decod_msgs)</formula>
      <unit>value*10.0</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_succ_decod_msgs (M1000C58)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rach_denom_2">
    <formula>CELLRES.rach_denom_2</formula>
    <kpi_info>
      <title>rach_denom_2 (M1000C59)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rach_denom_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rach_denom_2 (M1000C59)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_rach_throughput">
    <formula>CELLRES.ave_rach_throughput</formula>
    <kpi_info>
      <title>ave_rach_throughput (M1000C60)</title>
      <use>RACH throughput of both user data and signalling. This counter, divided by the denominator, gives the Average RACH throughput of both user data and signalling in bit/s over a measurement period. UPDATED:When the RNC/MAC-c sends an internal message with common channel information to the Radio Resource Management in the RNC. MAC-c sends this message at 20-second intervals.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_rach_throughput)</formula>
      <unit>bit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_rach_throughput (M1000C60)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rach_denom_3">
    <formula>CELLRES.rach_denom_3</formula>
    <kpi_info>
      <title>rach_denom_3 (M1000C61)</title>
      <use>Denominator for Average RACH throughput of both user data and signalling in bit/s. UPDATED:Incremented by the number of CCH measurements when the measurement report arrives
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rach_denom_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rach_denom_3 (M1000C61)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_rach_data_throughput">
    <formula>CELLRES.ave_rach_data_throughput</formula>
    <kpi_info>
      <title>ave_rach_data_throughput (M1000C62)</title>
      <use>RACH throughput of user data. This counter, divided by the denominator, gives the Average RACH throughput user data in bit/s over a measurement period. UPDATED:When the RNC/MAC-c sends an internal message with common channel information to the Radio Resource Management in the RNC. MAC-c sends this message at 20-second intervals.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_rach_data_throughput)</formula>
      <unit>bit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_rach_data_throughput (M1000C62)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rach_denom_4">
    <formula>CELLRES.rach_denom_4</formula>
    <kpi_info>
      <title>rach_denom_4 (M1000C63)</title>
      <use>Denominator for Average RACH throughput of user data in bit/s. UPDATED:Incremented by the number of CCH measurements when the measurement report arrives.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rach_denom_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rach_denom_4 (M1000C63)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_sccpch_inc_pch_load">
    <formula>CELLRES.ave_sccpch_inc_pch_load</formula>
    <kpi_info>
      <title>ave_sccpch_inc_pch_load (M1000C64)</title>
      <use>Average load of SCCPCH channel - including PCH. This counter, divided by the denominator, gives Average SCCPCH channel load - including PCH on a measurement period. The FACH-u, FACH-c and PCH transport channels are mapped to this SCCPCH physical channel. When more than one SCCPCH is used this channel includes only PCH. UPDATED:When the RNC/MAC-c sends an internal message with common channel information to the Radio Resource Management in the RNC. MAC-c sends this message at 20-second intervals.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_sccpch_inc_pch_load)</formula>
      <unit>%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_sccpch_inc_pch_load (M1000C64)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="sccpch_load_denom_0">
    <formula>CELLRES.sccpch_load_denom_0</formula>
    <kpi_info>
      <title>sccpch_load_denom_0 (M1000C65)</title>
      <use>Denominator for Average load of SCCPCH channel (including PCH).. UPDATED:Incremented by the number of CCH measurements when the measurement report arrives.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(sccpch_load_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>sccpch_load_denom_0 (M1000C65)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_fach_u_tot_tput_sccp_pch">
    <formula>CELLRES.ave_fach_u_tot_tput_sccp_pch</formula>
    <kpi_info>
      <title>ave_fach_u_tot_tput_sccp_pch (M1000C66)</title>
      <use>FACH throughput of both user data and signalling for an SCCPCH including PCH. This counter, divided by the denominator, gives Average FACH throughput for SCCPCH channel - including PCH on a measurement period. The FACH Total throughput includes all user-related data; (FACH-u) and signalling (FACH-c). UPDATED:When the RNC/MAC-c sends an internal message with common channel information to the Radio Resource Management in the RNC. MAC-c sends this message at 20-second intervals.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_fach_u_tot_tput_sccp_pch)</formula>
      <unit>bit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_fach_u_tot_tput_sccp_pch (M1000C66)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="fach_user_tot_tput_denom_0">
    <formula>CELLRES.fach_user_tot_tput_denom_0</formula>
    <kpi_info>
      <title>fach_user_tot_tput_denom_0 (M1000C67)</title>
      <use>Denominator for Average FACH throughput of both user data and signalling in bit/s for a SCCPCH including PCH. UPDATED:Incremented by the number of CCH measurements when the measurement report arrives.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(fach_user_tot_tput_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>fach_user_tot_tput_denom_0 (M1000C67)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_fach_udata_tp_sccpch_pch">
    <formula>CELLRES.ave_fach_udata_tp_sccpch_pch</formula>
    <kpi_info>
      <title>ave_fach_udata_tp_sccpch_pch (M1000C68)</title>
      <use>FACH throughput of user data only for SCCPCHs including PCH. This counter, divided by the denominator, gives Average FACH throughput for SCCPCH channel - including PCH on a measurement period. The FACH-u includes only user-related data. UPDATED:When the RNC/MAC-c sends an internal message with common channel information to the Radio Resource Management in the RNC. MAC-c sends this message at 20-second intervals.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_fach_udata_tp_sccpch_pch)</formula>
      <unit>bit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_fach_udata_tp_sccpch_pch (M1000C68)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="fach_u_data_tput_denom_0">
    <formula>CELLRES.fach_u_data_tput_denom_0</formula>
    <kpi_info>
      <title>fach_u_data_tput_denom_0 (M1000C69)</title>
      <use>Denominator for Average FACH throughput of user data in bit/s for a SCCPCH including PCH. UPDATED:Incremented by the number of CCH measurements when the measurement report arrives.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(fach_u_data_tput_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>fach_u_data_tput_denom_0 (M1000C69)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_pch_throughput">
    <formula>CELLRES.ave_pch_throughput</formula>
    <kpi_info>
      <title>ave_pch_throughput (M1000C70)</title>
      <use>PCH throughput. This counter, divided by the denominator M1000C71, gives Average PCH throughput for SCCPCH channel - including PCH on a measurement period. The counter is based on transport blocks sent to the Iub interface. Some of those blocks may be filled with padding data instead of actual paging records and therefore the measured throughput can be higher than the actual amount of paging payload data. UPDATED:When the RNC/MAC-c sends an internal message with common channel information to the Radio Resource Management in the RNC. MAC-c sends this message at 20-second intervals.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_pch_throughput)</formula>
      <unit>bit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_pch_throughput (M1000C70)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="pch_throughput_denom_0">
    <formula>CELLRES.pch_throughput_denom_0</formula>
    <kpi_info>
      <title>pch_throughput_denom_0 (M1000C71)</title>
      <use>Denominator for Average PCH throughput. UPDATED:Incremented by the number of CCH measurements when the measurement report arrives.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(pch_throughput_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>pch_throughput_denom_0 (M1000C71)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="code_capacity">
    <formula>CELLRES.code_capacity</formula>
    <kpi_info>
      <title>code_capacity (M1000C72)</title>
      <use>This counter, divided by the denominator counter, indicates the average code usage in percentage in a measurement period. Average code usage is calculated as the ratio between the number of unavailable SFx codes and the number of all (available and unavailable) SFx codes, where SFx refers to the highest spreading factor. Note that the SFx codes may be unavailable due to two reasons: the code is allocated, or the code is unavailable because another code is allocated in the same code tree branch and thus prevents the use of the SFx code. UPDATED:In 1-second intervals.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(code_capacity)</formula>
      <unit>%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>code_capacity (M1000C72)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_code_capacity">
    <formula>CELLRES.denom_code_capacity</formula>
    <kpi_info>
      <title>denom_code_capacity (M1000C73)</title>
      <use>Denominator for the average usage of code capacity. UPDATED:This counter is updated by value 1 when code usage value is updated to M1000C72.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_code_capacity)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_code_capacity (M1000C73)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="min_code_occupancy_percent">
    <formula>CELLRES.min_code_occupancy_percent</formula>
    <kpi_info>
      <title>min_code_occupancy_percent (M1000C74)</title>
      <use>Minimum code usage in percentage. This counter indicates the minimum code occupancy in percentage in a measurement period. The code occupancy is checked at 1-second intervals. UPDATED:When the current code occupancy is lower than the previously recorded minimum code occupancy.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MIN(min_code_occupancy_percent)</formula>
      <unit>%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>min_code_occupancy_percent (M1000C74)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="max_code_occupance_percent">
    <formula>CELLRES.max_code_occupance_percent</formula>
    <kpi_info>
      <title>max_code_occupance_percent (M1000C75)</title>
      <use>Maximum code usage in percentage. This counter indicates the maximum code occupancy in percentage in a measurement period. The code occupancy is checked at 1-second intervals. UPDATED:When the current code occupancy is higher than the previously recorded maximum code occupancy.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(max_code_occupance_percent)</formula>
      <unit>%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>max_code_occupance_percent (M1000C75)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="no_codes_available_sf4">
    <formula>CELLRES.no_codes_available_sf4</formula>
    <kpi_info>
      <title>no_codes_available_sf4 (M1000C76)</title>
      <use>A number of times when no SF4 codes were available. UPDATED:When the code allocation fails because of not available SF4 codes.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(no_codes_available_sf4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>no_codes_available_sf4 (M1000C76)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="no_codes_available_sf8">
    <formula>CELLRES.no_codes_available_sf8</formula>
    <kpi_info>
      <title>no_codes_available_sf8 (M1000C77)</title>
      <use>A number of times when no SF8 codes were available. UPDATED:When code allocation fails because of not available SF8 codes.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(no_codes_available_sf8)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>no_codes_available_sf8 (M1000C77)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="no_codes_available_sf16">
    <formula>CELLRES.no_codes_available_sf16</formula>
    <kpi_info>
      <title>no_codes_available_sf16 (M1000C78)</title>
      <use>A number of times when no SF16 codes were available. UPDATED:When the code allocation fails because of not available SF16 codes.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(no_codes_available_sf16)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>no_codes_available_sf16 (M1000C78)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="no_codes_available_sf32">
    <formula>CELLRES.no_codes_available_sf32</formula>
    <kpi_info>
      <title>no_codes_available_sf32 (M1000C79)</title>
      <use>A number of times when no SF32 codes were available. UPDATED:When the code allocation fails because of not available SF32 codes.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(no_codes_available_sf32)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>no_codes_available_sf32 (M1000C79)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="no_codes_available_sf64">
    <formula>CELLRES.no_codes_available_sf64</formula>
    <kpi_info>
      <title>no_codes_available_sf64 (M1000C80)</title>
      <use>A number of times when no SF64 codes were available. UPDATED:When code allocation fails because of not available SF64 codes.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(no_codes_available_sf64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>no_codes_available_sf64 (M1000C80)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="no_codes_available_sf128">
    <formula>CELLRES.no_codes_available_sf128</formula>
    <kpi_info>
      <title>no_codes_available_sf128 (M1000C81)</title>
      <use>A number of times when no SF128 codes were available. UPDATED:When the code allocation fails because of not available SF128 codes.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(no_codes_available_sf128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>no_codes_available_sf128 (M1000C81)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="no_codes_available_sf256">
    <formula>CELLRES.no_codes_available_sf256</formula>
    <kpi_info>
      <title>no_codes_available_sf256 (M1000C82)</title>
      <use>A number of times when no SF256 codes were available. UPDATED:When the code allocation fails because of not available SF256 codes.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(no_codes_available_sf256)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>no_codes_available_sf256 (M1000C82)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="nbr_succ_code_tree_allo">
    <formula>CELLRES.nbr_succ_code_tree_allo</formula>
    <kpi_info>
      <title>nbr_succ_code_tree_allo (M1000C83)</title>
      <use>The number of successful code tree allocations. UPDATED:When code is allocated from the code tree..
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(nbr_succ_code_tree_allo)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>nbr_succ_code_tree_allo (M1000C83)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_avail_pool_capa_dl">
    <formula>CELLRES.ave_avail_pool_capa_dl</formula>
    <kpi_info>
      <title>ave_avail_pool_capa_dl (M1000C84)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_avail_pool_capa_dl)</formula>
      <unit>kbit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_avail_pool_capa_dl (M1000C84)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="nbr_of_pool_rep_dl">
    <formula>CELLRES.nbr_of_pool_rep_dl</formula>
    <kpi_info>
      <title>nbr_of_pool_rep_dl (M1000C85)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(nbr_of_pool_rep_dl)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>nbr_of_pool_rep_dl (M1000C85)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_avail_pool_capa_ul">
    <formula>CELLRES.ave_avail_pool_capa_ul</formula>
    <kpi_info>
      <title>ave_avail_pool_capa_ul (M1000C86)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_avail_pool_capa_ul)</formula>
      <unit>kbit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_avail_pool_capa_ul (M1000C86)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="nbr_of_pool_rep_ul">
    <formula>CELLRES.nbr_of_pool_rep_ul</formula>
    <kpi_info>
      <title>nbr_of_pool_rep_ul (M1000C87)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(nbr_of_pool_rep_ul)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>nbr_of_pool_rep_ul (M1000C87)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="nbr_of_cells">
    <formula>CELLRES.nbr_of_cells</formula>
    <kpi_info>
      <title>nbr_of_cells (M1000C88)</title>
      <use>This counter was originally created for Nokia proprietary NBAP and is never updated in RN3.0 and later releases. UPDATED:Never
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(nbr_of_cells)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>nbr_of_cells (M1000C88)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_trx_for_rl_in_cell">
    <formula>CELLRES.ave_trx_for_rl_in_cell</formula>
    <kpi_info>
      <title>ave_trx_for_rl_in_cell (M1000C89)</title>
      <use>The average transmission power per radio link in the cell. The measurement unit UTRAN_CODE_POWER is defined in 3GPP TS 25.133. NOTE: RNC GUI shows dBm values, not UTRAN_CODE_POWER. UPDATED:When NBAP: DEDICATED MEASUREMENT REPORT message is received from the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(nbr_of_rls),0),0,0,10+ABS((10*LOG(10,(SUM(nbr_of_rls*0.001*POWER(10,((-10+0.5*(ave_trx_for_rl_in_cell-10))/10)))/SUM(nbr_of_rls))/0.001))-(-10))/0.5),0)</formula>
      <unit>UTRAN_CODE_POWER</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_trx_for_rl_in_cell (M1000C89)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="nbr_of_rls">
    <formula>CELLRES.nbr_of_rls</formula>
    <kpi_info>
      <title>nbr_of_rls (M1000C90)</title>
      <use>The number of received radio link measurement results during the measurement period. UPDATED: When NBAP: DEDICATED MEASUREMENT REPORT message is received from the BTS, this counter is updated by the number of radio link measurement results included in the message.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(nbr_of_rls)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>nbr_of_rls (M1000C90)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="sum_sqr_for_rl_in_cell">
    <formula>CELLRES.sum_sqr_for_rl_in_cell</formula>
    <kpi_info>
      <title>sum_sqr_for_rl_in_cell (M1000C91)</title>
      <use>The sum of squared measured values for transmission power for the radio links in the cell. UPDATED:When NBAP: DEDICATED MEASUREMENT REPORT message is received from the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>NVL(ROUND(1000*LOG(10,((SUM(POWER(10,(DECODE(sum_sqr_for_rl_in_cell,0,NULL,sum_sqr_for_rl_in_cell)/1000))/1000))*1000)),0),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>sum_sqr_for_rl_in_cell (M1000C91)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="nbr_of_rl_meas_reps">
    <formula>CELLRES.nbr_of_rl_meas_reps</formula>
    <kpi_info>
      <title>nbr_of_rl_meas_reps (M1000C92)</title>
      <use>This counter indicates the number of radio link measurement reports received during the measurement period. NOTE: This counter is updated only for the WBTS object that is WBTS/WCEL-300000000 in the XML measurement file created by OMS and "This WBTS" in the OMS EM GUI. The special object is not supported by NetAct. UPDATED:The counter is updated when NBAP: DEDICATED MEASUREMENT REPORT message is received from the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(nbr_of_rl_meas_reps)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>nbr_of_rl_meas_reps (M1000C92)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptx_rt_class_0">
    <formula>CELLRES.ave_ptx_rt_class_0</formula>
    <kpi_info>
      <title>ave_ptx_rt_class_0 (M1000C93)</title>
      <use>Estimated average downlink transmitted power for RT users on the cell for Class 0 (Unloaded area). NOTE: Real dBm value is obtained when divided by 100. UPDATED: The estimated PtxRT is calculated periodically and updated to this counter if the total transmitted Rel99 power value is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptx_rt_denom_0),0),0,0,10*LOG(10,(SUM(ptx_rt_denom_0*0.001*POWER(10,((ave_ptx_rt_class_0/100)/10)))/SUM(ptx_rt_denom_0))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptx_rt_class_0 (M1000C93)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptx_rt_denom_0">
    <formula>CELLRES.ptx_rt_denom_0</formula>
    <kpi_info>
      <title>ptx_rt_denom_0 (M1000C94)</title>
      <use>The number of samples taken for counter M1000C93. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 transmitted power estimation is inside Class 0 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptx_rt_denom_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptx_rt_denom_0 (M1000C94)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptx_rt_class_1">
    <formula>CELLRES.ave_ptx_rt_class_1</formula>
    <kpi_info>
      <title>ave_ptx_rt_class_1 (M1000C95)</title>
      <use>Estimated average downlink transmitted power for RT users on the cell for Class 1 (Feasible load area 1). NOTE: Real dBm value is obtained when divided by 100. UPDATED: The estimated PtxRT is calculated periodically and updated to this counter if the total transmitted Rel99 power value is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptx_rt_denom_1),0),0,0,10*LOG(10,(SUM(ptx_rt_denom_1*0.001*POWER(10,((ave_ptx_rt_class_1/100)/10)))/SUM(ptx_rt_denom_1))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptx_rt_class_1 (M1000C95)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptx_rt_denom_1">
    <formula>CELLRES.ptx_rt_denom_1</formula>
    <kpi_info>
      <title>ptx_rt_denom_1 (M1000C96)</title>
      <use>The number of samples taken for counter M1000C95. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 transmitted power estimation is inside Class 1 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptx_rt_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptx_rt_denom_1 (M1000C96)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptx_rt_class_2">
    <formula>CELLRES.ave_ptx_rt_class_2</formula>
    <kpi_info>
      <title>ave_ptx_rt_class_2 (M1000C97)</title>
      <use>Estimated average downlink transmitted power for RT users on the cell for Class 2 (Feasible load area 2). NOTE: Real dBm value is obtained when divided by 100. UPDATED: The estimated PtxRT is calculated periodically and updated to this counter if the total transmitted Rel99 power value is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptx_rt_denom_2),0),0,0,10*LOG(10,(SUM(ptx_rt_denom_2*0.001*POWER(10,((ave_ptx_rt_class_2/100)/10)))/SUM(ptx_rt_denom_2))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptx_rt_class_2 (M1000C97)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptx_rt_denom_2">
    <formula>CELLRES.ptx_rt_denom_2</formula>
    <kpi_info>
      <title>ptx_rt_denom_2 (M1000C98)</title>
      <use>The number of samples taken for counter M1000C97. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 transmitted power estimation is inside Class 2 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptx_rt_denom_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptx_rt_denom_2 (M1000C98)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptx_rt_class_3">
    <formula>CELLRES.ave_ptx_rt_class_3</formula>
    <kpi_info>
      <title>ave_ptx_rt_class_3 (M1000C99)</title>
      <use>Estimated average downlink transmitted power for RT users on the cell for Class 3 (Marginal load area). NOTE: Real dBm value is obtained when divided by 100. UPDATED: The estimated PtxRT is calculated periodically and updated to this counter if the total transmitted Rel99 power value is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptx_rt_denom_3),0),0,0,10*LOG(10,(SUM(ptx_rt_denom_3*0.001*POWER(10,((ave_ptx_rt_class_3/100)/10)))/SUM(ptx_rt_denom_3))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptx_rt_class_3 (M1000C99)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptx_rt_denom_3">
    <formula>CELLRES.ptx_rt_denom_3</formula>
    <kpi_info>
      <title>ptx_rt_denom_3 (M1000C100)</title>
      <use>The number of samples taken for counter M1000C99. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 transmitted power estimation is inside Class 3 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptx_rt_denom_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptx_rt_denom_3 (M1000C100)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_ptx_rt_class_4">
    <formula>CELLRES.ave_ptx_rt_class_4</formula>
    <kpi_info>
      <title>ave_ptx_rt_class_4 (M1000C101)</title>
      <use>Estimated average downlink transmitted power for RT users on the cell for Class 4 (Overload area). NOTE: Real dBm value is obtained when divided by 100. UPDATED: The estimated PtxRT is calculated periodically and updated to this counter if the total transmitted Rel99 power value is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND((((DECODE(NVL(SUM(ptx_rt_denom_4),0),0,0,10*LOG(10,(SUM(ptx_rt_denom_4*0.001*POWER(10,((ave_ptx_rt_class_4/100)/10)))/SUM(ptx_rt_denom_4))/0.001))))*100),0)</formula>
      <unit>0.01*dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_ptx_rt_class_4 (M1000C101)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ptx_rt_denom_4">
    <formula>CELLRES.ptx_rt_denom_4</formula>
    <kpi_info>
      <title>ptx_rt_denom_4 (M1000C102)</title>
      <use>The number of samples taken for counter M1000C101. Used as a weighing factor in aggregation. UPDATED: Incremented by value 1 when the periodically calculated Rel99 transmitted power estimation is inside Class 4 range. The sampling period is based on an RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ptx_rt_denom_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ptx_rt_denom_4 (M1000C102)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_sccpch_load">
    <formula>CELLRES.ave_sccpch_load</formula>
    <kpi_info>
      <title>ave_sccpch_load (M1000C103)</title>
      <use>Average load of SCCPCH channel - PCH not present - measured as a percentage value [%]. This counter, divided by the denominator, gives Average SCCPCH channel load - excluding PCH on a measurement period. The FACH-u and FACH-c logical channels are mapped to this SCCPCH physical channel. When this SCCPCH is used this PCH channel is found in the SCCPCH channel including PCH. UPDATED:Incremented by the received value when the CCH measurement report arrives.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_sccpch_load)</formula>
      <unit>%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_sccpch_load (M1000C103)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="sccpch_load_denom_1">
    <formula>CELLRES.sccpch_load_denom_1</formula>
    <kpi_info>
      <title>sccpch_load_denom_1 (M1000C104)</title>
      <use>Denominator for Average load of SCCPCH channel (PCH not present). UPDATED:Incremented by the number of CCH measurements when the measurement report arrives.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(sccpch_load_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>sccpch_load_denom_1 (M1000C104)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_fach_user_tot_tput">
    <formula>CELLRES.ave_fach_user_tot_tput</formula>
    <kpi_info>
      <title>ave_fach_user_tot_tput (M1000C105)</title>
      <use>Average FACH throughput of both user data and signalling in bit/s for a SCCPCH (PCH not present). This counter, divided by the denominator, gives Average FACH throughput for SCCPCH channel - excluding PCH on a measurement period. The FACH Total throughput means all the user related data (FACH-u) and signalling (FACH-c). UPDATED:Incremented by the received value when the CCH measurement report arrives.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_fach_user_tot_tput)</formula>
      <unit>bit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_fach_user_tot_tput (M1000C105)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="fach_user_tot_tput_denom_1">
    <formula>CELLRES.fach_user_tot_tput_denom_1</formula>
    <kpi_info>
      <title>fach_user_tot_tput_denom_1 (M1000C106)</title>
      <use>Denominator for Average FACH throughput of both user data and signalling in bit/s for a SCCPCH (PCH not present). UPDATED:Incremented by the number of CCH measurements when the measurement report arrives.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(fach_user_tot_tput_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>fach_user_tot_tput_denom_1 (M1000C106)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ave_fach_udata_tp_sccpch">
    <formula>CELLRES.ave_fach_udata_tp_sccpch</formula>
    <kpi_info>
      <title>ave_fach_udata_tp_sccpch (M1000C107)</title>
      <use>Average FACH throughput of user data only in bit/s for a SCCPCH (PCH not present). This counter, divided by the denominator, gives Average FACH data throughput for SCCPCH channel - excluding PCH on a measurement period. The FACH-u includes only the user related data. UPDATED:Incremented by the received value when the CCH measurement report arrives
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ave_fach_udata_tp_sccpch)</formula>
      <unit>bit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ave_fach_udata_tp_sccpch (M1000C107)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="fach_u_data_tput_denom_1">
    <formula>CELLRES.fach_u_data_tput_denom_1</formula>
    <kpi_info>
      <title>fach_u_data_tput_denom_1 (M1000C108)</title>
      <use>Denominator for Average FACH throughput of user data in bit/s for a SCCPCH (PCH not present). UPDATED:Incremented by the number of CCH measurements when the measurement report arrives.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(fach_u_data_tput_denom_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>fach_u_data_tput_denom_1 (M1000C108)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WBTS_RESET_DUE_USER_ACTION">
    <formula>CELLRES.WBTS_RESET_DUE_USER_ACTION</formula>
    <kpi_info>
      <title>WBTS_RESET_DUE_USER_ACTION (M1000C109)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WBTS_RESET_DUE_USER_ACTION)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WBTS_RESET_DUE_USER_ACTION (M1000C109)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WBTS_RESET_DUE_RNC">
    <formula>CELLRES.WBTS_RESET_DUE_RNC</formula>
    <kpi_info>
      <title>WBTS_RESET_DUE_RNC (M1000C110)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WBTS_RESET_DUE_RNC)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WBTS_RESET_DUE_RNC (M1000C110)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WBTS_RESET_DUE_BTS">
    <formula>CELLRES.WBTS_RESET_DUE_BTS</formula>
    <kpi_info>
      <title>WBTS_RESET_DUE_BTS (M1000C111)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WBTS_RESET_DUE_BTS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WBTS_RESET_DUE_BTS (M1000C111)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WBTS_RESET_SIGN_UNIT_FAIL">
    <formula>CELLRES.WBTS_RESET_SIGN_UNIT_FAIL</formula>
    <kpi_info>
      <title>WBTS_RESET_SIGN_UNIT_FAIL (M1000C112)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WBTS_RESET_SIGN_UNIT_FAIL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WBTS_RESET_SIGN_UNIT_FAIL (M1000C112)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_BLO_BY_USER">
    <formula>CELLRES.WCELL_TO_BLO_BY_USER</formula>
    <kpi_info>
      <title>WCELL_TO_BLO_BY_USER (M1000C113)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_BLO_BY_USER)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_BLO_BY_USER (M1000C113)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_BLO_BY_BTS">
    <formula>CELLRES.WCELL_TO_BLO_BY_BTS</formula>
    <kpi_info>
      <title>WCELL_TO_BLO_BY_BTS (M1000C114)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_BLO_BY_BTS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_BLO_BY_BTS (M1000C114)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_BLO_BY_SYS_FAIL">
    <formula>CELLRES.WCELL_TO_BLO_BY_SYS_FAIL</formula>
    <kpi_info>
      <title>WCELL_TO_BLO_BY_SYS_FAIL (M1000C115)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_BLO_BY_SYS_FAIL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_BLO_BY_SYS_FAIL (M1000C115)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_BLO_BY_LINK_FAIL">
    <formula>CELLRES.WCELL_TO_BLO_BY_LINK_FAIL</formula>
    <kpi_info>
      <title>WCELL_TO_BLO_BY_LINK_FAIL (M1000C116)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_BLO_BY_LINK_FAIL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_BLO_BY_LINK_FAIL (M1000C116)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_BLO_BY_SHUT_DOWN">
    <formula>CELLRES.WCELL_TO_BLO_BY_SHUT_DOWN</formula>
    <kpi_info>
      <title>WCELL_TO_BLO_BY_SHUT_DOWN (M1000C117)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_BLO_BY_SHUT_DOWN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_BLO_BY_SHUT_DOWN (M1000C117)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_BLO_BY_MEAS_FAIL">
    <formula>CELLRES.WCELL_TO_BLO_BY_MEAS_FAIL</formula>
    <kpi_info>
      <title>WCELL_TO_BLO_BY_MEAS_FAIL (M1000C118)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_BLO_BY_MEAS_FAIL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_BLO_BY_MEAS_FAIL (M1000C118)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_BLO_BY_BTS_BLOCK">
    <formula>CELLRES.WCELL_TO_BLO_BY_BTS_BLOCK</formula>
    <kpi_info>
      <title>WCELL_TO_BLO_BY_BTS_BLOCK (M1000C119)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_BLO_BY_BTS_BLOCK)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_BLO_BY_BTS_BLOCK (M1000C119)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_BLO_IN_INIT">
    <formula>CELLRES.WCELL_TO_BLO_IN_INIT</formula>
    <kpi_info>
      <title>WCELL_TO_BLO_IN_INIT (M1000C120)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_BLO_IN_INIT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_BLO_IN_INIT (M1000C120)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_WO_UNSUCC_USER">
    <formula>CELLRES.WCELL_TO_WO_UNSUCC_USER</formula>
    <kpi_info>
      <title>WCELL_TO_WO_UNSUCC_USER (M1000C121)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_WO_UNSUCC_USER)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_WO_UNSUCC_USER (M1000C121)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_WO_UNSUCC_BTS">
    <formula>CELLRES.WCELL_TO_WO_UNSUCC_BTS</formula>
    <kpi_info>
      <title>WCELL_TO_WO_UNSUCC_BTS (M1000C122)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_WO_UNSUCC_BTS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_WO_UNSUCC_BTS (M1000C122)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_WO_UNSUCC_SYS_FAIL">
    <formula>CELLRES.WCELL_TO_WO_UNSUCC_SYS_FAIL</formula>
    <kpi_info>
      <title>WCELL_TO_WO_UNSUCC_SYS_FAIL (M1000C123)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_WO_UNSUCC_SYS_FAIL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_WO_UNSUCC_SYS_FAIL (M1000C123)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_WO_UNSUCC_LINK_FAIL">
    <formula>CELLRES.WCELL_TO_WO_UNSUCC_LINK_FAIL</formula>
    <kpi_info>
      <title>WCELL_TO_WO_UNSUCC_LINK_FAIL (M1000C124)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_WO_UNSUCC_LINK_FAIL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_WO_UNSUCC_LINK_FAIL (M1000C124)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_WO_UNSUCC_SHUT_DOWN">
    <formula>CELLRES.WCELL_TO_WO_UNSUCC_SHUT_DOWN</formula>
    <kpi_info>
      <title>WCELL_TO_WO_UNSUCC_SHUT_DOWN (M1000C125)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_WO_UNSUCC_SHUT_DOWN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_WO_UNSUCC_SHUT_DOWN (M1000C125)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_WO_UNSUCC_MEAS_FAIL">
    <formula>CELLRES.WCELL_TO_WO_UNSUCC_MEAS_FAIL</formula>
    <kpi_info>
      <title>WCELL_TO_WO_UNSUCC_MEAS_FAIL (M1000C126)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_WO_UNSUCC_MEAS_FAIL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_WO_UNSUCC_MEAS_FAIL (M1000C126)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_WO_UNSUCC_BTS_BLOCK">
    <formula>CELLRES.WCELL_TO_WO_UNSUCC_BTS_BLOCK</formula>
    <kpi_info>
      <title>WCELL_TO_WO_UNSUCC_BTS_BLOCK (M1000C127)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_WO_UNSUCC_BTS_BLOCK)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_WO_UNSUCC_BTS_BLOCK (M1000C127)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_TO_WO_UNSUCC_INIT">
    <formula>CELLRES.WCELL_TO_WO_UNSUCC_INIT</formula>
    <kpi_info>
      <title>WCELL_TO_WO_UNSUCC_INIT (M1000C128)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_TO_WO_UNSUCC_INIT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_TO_WO_UNSUCC_INIT (M1000C128)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_BLO_TO_WO_SUCCESS">
    <formula>CELLRES.WCELL_BLO_TO_WO_SUCCESS</formula>
    <kpi_info>
      <title>WCELL_BLO_TO_WO_SUCCESS (M1000C129)</title>
      <use>This counter is not supported. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_BLO_TO_WO_SUCCESS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_BLO_TO_WO_SUCCESS (M1000C129)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="FACH_THRPUT_SAB_USER_SIGN">
    <formula>CELLRES.FACH_THRPUT_SAB_USER_SIGN</formula>
    <kpi_info>
      <title>FACH_THRPUT_SAB_USER_SIGN (M1000C130)</title>
      <use>The total throughput of FACH containing the CTCH channel used for Service Area Broadcast. Both user data and signalling are included. This counter, divided by the denominator, gives the average total throughput of the channel. UPDATED:The counter is updated when the RNC/MAC-c sends an internal message to the Radio Resource Management in the RNC, telling common channel information. MAC-c sends this message periodically at 20-second intervals.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(FACH_THRPUT_SAB_USER_SIGN)</formula>
      <unit>bit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>FACH_THRPUT_SAB_USER_SIGN (M1000C130)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="FACH_THRPUT_SAB_USER_SIG_DEN">
    <formula>CELLRES.FACH_THRPUT_SAB_USER_SIG_DEN</formula>
    <kpi_info>
      <title>FACH_THRPUT_SAB_USER_SIG_DEN (M1000C131)</title>
      <use>The denominator for FACH Throughput for Service Area Broadcast (user data and signalling). UPDATED:When the measurement report arrives from MAC-c, this counter is updated by the number of FACH measurement samples included in the report.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(FACH_THRPUT_SAB_USER_SIG_DEN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>FACH_THRPUT_SAB_USER_SIG_DEN (M1000C131)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="FACH_THRPUT_SAB_USER">
    <formula>CELLRES.FACH_THRPUT_SAB_USER</formula>
    <kpi_info>
      <title>FACH_THRPUT_SAB_USER (M1000C132)</title>
      <use>The user data throughput of FACH containing the CTCH channel used for Service Area Broadcast. This counter, divided by the denominator, gives the average user data throughput of the channel. UPDATED:This counter is updated when the RNC/MAC-c sends an internal message to the Radio Resource Management in the RNC, telling common channel information. MAC-c sends this message periodically at 20-second intervals.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(FACH_THRPUT_SAB_USER)</formula>
      <unit>bit/s</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>FACH_THRPUT_SAB_USER (M1000C132)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="FACH_THRPUT_SAB_USER_DEN">
    <formula>CELLRES.FACH_THRPUT_SAB_USER_DEN</formula>
    <kpi_info>
      <title>FACH_THRPUT_SAB_USER_DEN (M1000C133)</title>
      <use>The denominator for counter FACH Throughput for Service Area Broadcast (user data only). UPDATED:When the measurement report arrives from MAC-c, this counter is updated by the number of FACH measurement samples included in the report.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(FACH_THRPUT_SAB_USER_DEN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>FACH_THRPUT_SAB_USER_DEN (M1000C133)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_AVAIL_PERC_POOL_CAPA_DL">
    <formula>CELLRES.AVE_AVAIL_PERC_POOL_CAPA_DL</formula>
    <kpi_info>
      <title>AVE_AVAIL_PERC_POOL_CAPA_DL (M1000C134)</title>
      <use>This counter is never updated in RN2.2ED and later releases. WBTS HW Resources can be measured using M5001 WBTS HW Resource measurement. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(NBR_OF_BTS_HW_CAPA_ALLOC_DL),0),0,0,SUM(AVE_AVAIL_PERC_POOL_CAPA_DL*NBR_OF_BTS_HW_CAPA_ALLOC_DL)/SUM(NBR_OF_BTS_HW_CAPA_ALLOC_DL)),3)</formula>
      <unit>%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_AVAIL_PERC_POOL_CAPA_DL (M1000C134)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_AVAIL_PERC_POOL_CAPA_UL">
    <formula>CELLRES.AVE_AVAIL_PERC_POOL_CAPA_UL</formula>
    <kpi_info>
      <title>AVE_AVAIL_PERC_POOL_CAPA_UL (M1000C135)</title>
      <use>This counter is never updated in RN2.2ED and later releases. WBTS HW Resources can be measured using M5001 WBTS HW Resource measurement. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(NBR_OF_BTS_HW_CAPA_ALLOC_UL),0),0,0,SUM(AVE_AVAIL_PERC_POOL_CAPA_UL*NBR_OF_BTS_HW_CAPA_ALLOC_UL)/SUM(NBR_OF_BTS_HW_CAPA_ALLOC_UL)),3)</formula>
      <unit>%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_AVAIL_PERC_POOL_CAPA_UL (M1000C135)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="NBR_OF_BTS_HW_CAPA_ALLOC_DL">
    <formula>CELLRES.NBR_OF_BTS_HW_CAPA_ALLOC_DL</formula>
    <kpi_info>
      <title>NBR_OF_BTS_HW_CAPA_ALLOC_DL (M1000C136)</title>
      <use>This counter is never updated in RN2.2ED and later releases. WBTS HW Resources can be measured using M5001 WBTS HW Resource measurement. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(NBR_OF_BTS_HW_CAPA_ALLOC_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>NBR_OF_BTS_HW_CAPA_ALLOC_DL (M1000C136)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="NBR_OF_BTS_HW_CAPA_ALLOC_UL">
    <formula>CELLRES.NBR_OF_BTS_HW_CAPA_ALLOC_UL</formula>
    <kpi_info>
      <title>NBR_OF_BTS_HW_CAPA_ALLOC_UL (M1000C137)</title>
      <use>This counter is never updated in RN2.2ED and later releases. WBTS HW Resources can be measured using M5001 WBTS HW Resource measurement. UPDATED:Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(NBR_OF_BTS_HW_CAPA_ALLOC_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>NBR_OF_BTS_HW_CAPA_ALLOC_UL (M1000C137)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVG_NON_HSDPA_PWR">
    <formula>CELLRES.AVG_NON_HSDPA_PWR</formula>
    <kpi_info>
      <title>AVG_NON_HSDPA_PWR (M1000C138)</title>
      <use>The ratio of transmitted non-HSPA power and the maximum transmission power possible to use on that DL carrier at that moment. If only HSDPA is enabled, the non-HSPA power is the transmitted carrier power of all codes not used for HS-PDSCH or HS-SCCH transmission. If HSUPA is enabled, the non-HSPA power is the transmitted carrier power of all codes not used for HS-PDSCH, HS-SCCH, E-AGCH, E-RGCH or E-HICH transmission. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the latest received non-HSPA power value in NBAP:PRIVATE:RADIO RESOURCE MEASUREMENT REPORT is used for counter update. This counter is updated even if there are not any HS-DSCH allocations in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(AVG_NON_HSDPA_PWR_DENOM),0),0,0,SUM(AVG_NON_HSDPA_PWR*AVG_NON_HSDPA_PWR_DENOM)/SUM(AVG_NON_HSDPA_PWR_DENOM)),3)</formula>
      <unit>%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVG_NON_HSDPA_PWR (M1000C138)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVG_NON_HSDPA_PWR_DENOM">
    <formula>CELLRES.AVG_NON_HSDPA_PWR_DENOM</formula>
    <kpi_info>
      <title>AVG_NON_HSDPA_PWR_DENOM (M1000C139)</title>
      <use>The denominator for the average non-HSPA power ratio. UPDATED:Incremented by value 1 when non-HSPA power value is updated to counter M1000C138.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AVG_NON_HSDPA_PWR_DENOM)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVG_NON_HSDPA_PWR_DENOM (M1000C139)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVG_ACTIVE_NON_HSDPA_PWR">
    <formula>CELLRES.AVG_ACTIVE_NON_HSDPA_PWR</formula>
    <kpi_info>
      <title>AVG_ACTIVE_NON_HSDPA_PWR (M1000C140)</title>
      <use>This counter gives the average active non-HSDPA power ratio. The ratio of transmitted non-HSPA power and the maximum transmission power possible to use on that DL carrier at that moment. If only HSDPA is enabled, the non-HSPA power is the transmitted carrier power of all codes not used for HS-PDSCH or HS-SCCH transmission. If HSUPA is enabled, the non-HSPA power is the transmitted carrier power of all codes not used for HS-PDSCH, HS-SCCH, E-AGCH, E-RGCH or E-HICH transmission. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the latest received non-HSPA power value in NBAP:PRIVATE:RADIO RESOURCE MEASUREMENT REPORT is used for counter update. This counter is updated even if there are not any HS-DSCH allocations in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(AVG_ACT_NON_HSDPA_PWR_DENOM),0),0,0,SUM(AVG_ACTIVE_NON_HSDPA_PWR*AVG_ACT_NON_HSDPA_PWR_DENOM)/SUM(AVG_ACT_NON_HSDPA_PWR_DENOM)),3)</formula>
      <unit>%</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVG_ACTIVE_NON_HSDPA_PWR (M1000C140)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVG_ACT_NON_HSDPA_PWR_DENOM">
    <formula>CELLRES.AVG_ACT_NON_HSDPA_PWR_DENOM</formula>
    <kpi_info>
      <title>AVG_ACT_NON_HSDPA_PWR_DENOM (M1000C141)</title>
      <use>The denominator for the average active non-HSPA power ratio. UPDATED:Incremented by value 1 when non-HSPA power value is updated to counter M1000C140.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AVG_ACT_NON_HSDPA_PWR_DENOM)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVG_ACT_NON_HSDPA_PWR_DENOM (M1000C141)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_OLC_TFC_SUBS">
    <formula>CELLRES.RB_DOWNGR_DUE_OLC_TFC_SUBS</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_OLC_TFC_SUBS (M1000C142)</title>
      <use>The number of radio bearer downgrades by the enhanced overload control using the TFC subset method. UPDATED:When the RNC sends RRC: TRANSPORT FORMAT COMBINATION CONTROL to the UE.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_OLC_TFC_SUBS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_OLC_TFC_SUBS (M1000C142)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_DYLO_RL_POWER">
    <formula>CELLRES.RB_DOWNGR_DUE_DYLO_RL_POWER</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_DYLO_RL_POWER (M1000C143)</title>
      <use>The number of radio bearer downgrades by the dynamic link optimisation for NRT traffic due to RL power congestion. UPDATED:When the RNC receives an NBAP: RADIO LINK RECONFIGURATION READY message from the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_DYLO_RL_POWER)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_DYLO_RL_POWER (M1000C143)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CELL_RESOURCE_SPARE_1">
    <formula>CELLRES.CELL_RESOURCE_SPARE_1</formula>
    <kpi_info>
      <title>CELL_RESOURCE_SPARE_1 (M1000C144)</title>
      <use>The number of times when HS-DSCH downlink transport channel cannot be selected due to downlink power limits. This counter includes both interactive and background class connections. UPDATED: When HS-DSCH cannot be selected as downlink transport channel due to condition PtxTotal&gt;PtxTargetHSDPA or PtxNC&gt;PtxTargetHSDPA.This counter is used only when HSDPA Static Resource Allocation is used. Counter M1002C521 or M1002C522 is updated along with this counter.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CELL_RESOURCE_SPARE_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CELL_RESOURCE_SPARE_1 (M1000C144)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_PBS_AAL2">
    <formula>CELLRES.RB_DOWNGR_DUE_PBS_AAL2</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_PBS_AAL2 (M1000C145)</title>
      <use>The number of radio bearer downgrades by priority-based scheduling (PBS) due to Iub transport congestion. Both ATM and IP-based transport are covered. UPDATED:When the radio bearer is successfully downgraded.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_PBS_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_PBS_AAL2 (M1000C145)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_PBS_BTS">
    <formula>CELLRES.RB_DOWNGR_DUE_PBS_BTS</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_PBS_BTS (M1000C146)</title>
      <use>The number of RB downgrades by priority-based scheduling (PBS) due to BTS congestion. UPDATED:When the radio bearer is successfully downgraded.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_PBS_BTS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_PBS_BTS (M1000C146)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_PBS_INTERF">
    <formula>CELLRES.RB_DOWNGR_DUE_PBS_INTERF</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_PBS_INTERF (M1000C147)</title>
      <use>The number of RB downgrades by priority-based scheduling (PBS) due to uplink interference or downlink power congestion reasons. UPDATED:When the radio bearer is successfully downgraded.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_PBS_INTERF)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_PBS_INTERF (M1000C147)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_PBS_SPREAD">
    <formula>CELLRES.RB_DOWNGR_DUE_PBS_SPREAD</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_PBS_SPREAD (M1000C148)</title>
      <use>The number of RB downgrades by priority-based scheduling (PBS) due to spreading code congestion. UPDATED:When the radio bearer is successfully downgraded.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_PBS_SPREAD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_PBS_SPREAD (M1000C148)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CELL_RESOURCE_SPARE_2">
    <formula>CELLRES.CELL_RESOURCE_SPARE_2</formula>
    <kpi_info>
      <title>CELL_RESOURCE_SPARE_2 (M1000C149)</title>
      <use>The number of HS-DSCH allocation releases due to downlink overload. This counter includes both interactive and background class connections. UPDATED: When the user's HS-DSCH allocation is released due to condition PtxNonHSDPA&gt;=PtxTargetHSDPA+PtxOffsetHSDPA.Thiscounter is updated only when HSDPA Static Resource Allocation is used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CELL_RESOURCE_SPARE_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CELL_RESOURCE_SPARE_2 (M1000C149)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_PRE_EMP_AAL2">
    <formula>CELLRES.RB_DOWNGR_DUE_PRE_EMP_AAL2</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_PRE_EMP_AAL2 (M1000C150)</title>
      <use>The number of radio bearer downgrades by pre-emption due to Iub transport congestion. Both ATM and IP-based transport are covered. UPDATED:When the radio bearer is successfully downgraded.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_PRE_EMP_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_PRE_EMP_AAL2 (M1000C150)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_PRE_EMP_BTS">
    <formula>CELLRES.RB_DOWNGR_DUE_PRE_EMP_BTS</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_PRE_EMP_BTS (M1000C151)</title>
      <use>The number of RB downgrades by pre-emption due to BTS congestion. UPDATED:When the radio bearer is successfully downgraded.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_PRE_EMP_BTS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_PRE_EMP_BTS (M1000C151)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_PRE_EMP_INTERF">
    <formula>CELLRES.RB_DOWNGR_DUE_PRE_EMP_INTERF</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_PRE_EMP_INTERF (M1000C152)</title>
      <use>The number of RB downgrades by pre-emption due to uplink interference or downlink power congestion reasons. This counter is never updated.UPDATED:This counter is never updated because pre-emption due to radio interface reason never triggers a downgrade of an NRT RAB. The downgrade is not done because the admission control of RT RAB is based on non-controllable load and downgrading of an NRT RAB does not change that. But if the radio interface load remains high, the NRT RAB can later be downgraded due to overload control actions.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_PRE_EMP_INTERF)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_PRE_EMP_INTERF (M1000C152)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_PRE_EMP_SPREAD">
    <formula>CELLRES.RB_DOWNGR_DUE_PRE_EMP_SPREAD</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_PRE_EMP_SPREAD (M1000C153)</title>
      <use>The number of RB downgrades by pre-emption due to spreading code congestion. UPDATED:When the radio bearer is successfully downgraded.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_PRE_EMP_SPREAD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_PRE_EMP_SPREAD (M1000C153)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_OLC_RL_RECONF">
    <formula>CELLRES.RB_DOWNGR_DUE_OLC_RL_RECONF</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_OLC_RL_RECONF (M1000C154)</title>
      <use>The number of radio bearer downgrades by the enhanced overload control using the radio link reconfiguration method. UPDATED:When the radio bearer is successfully downgraded.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_OLC_RL_RECONF)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_OLC_RL_RECONF (M1000C154)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_DYLO_RL_POWER">
    <formula>CELLRES.RB_RELEASE_DUE_DYLO_RL_POWER</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_DYLO_RL_POWER (M1000C155)</title>
      <use>The number of released radio bearers by the dynamic link optimisation for NRT traffic due to RL power congestion. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_DYLO_RL_POWER)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_DYLO_RL_POWER (M1000C155)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CELL_RESOURCE_SPARE_3">
    <formula>CELLRES.CELL_RESOURCE_SPARE_3</formula>
    <kpi_info>
      <title>CELL_RESOURCE_SPARE_3 (M1000C156)</title>
      <use>"This is a spare counter for future purposes. Updated: Never"
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CELL_RESOURCE_SPARE_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CELL_RESOURCE_SPARE_3 (M1000C156)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_PBS_AAL2">
    <formula>CELLRES.RB_RELEASE_DUE_PBS_AAL2</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_PBS_AAL2 (M1000C157)</title>
      <use>The number of released radio bearers by priority-based scheduling (PBS) due to Iub transport congestion. Both ATM and IP-based transport are covered. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_PBS_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_PBS_AAL2 (M1000C157)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_PBS_BTS">
    <formula>CELLRES.RB_RELEASE_DUE_PBS_BTS</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_PBS_BTS (M1000C158)</title>
      <use>The number of released radio bearers by priority-based scheduling (PBS) due to BTS congestion. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_PBS_BTS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_PBS_BTS (M1000C158)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_PBS_INTERF">
    <formula>CELLRES.RB_RELEASE_DUE_PBS_INTERF</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_PBS_INTERF (M1000C159)</title>
      <use>The number of released radio bearers by priority-based scheduling (PBS) due to uplink interference or downlink power congestion reasons. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_PBS_INTERF)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_PBS_INTERF (M1000C159)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_PBS_SPREAD">
    <formula>CELLRES.RB_RELEASE_DUE_PBS_SPREAD</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_PBS_SPREAD (M1000C160)</title>
      <use>The number of released radio bearers by priority-based scheduling (PBS) due to spreading code congestion. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_PBS_SPREAD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_PBS_SPREAD (M1000C160)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CELL_RESOURCE_SPARE_4">
    <formula>CELLRES.CELL_RESOURCE_SPARE_4</formula>
    <kpi_info>
      <title>CELL_RESOURCE_SPARE_4 (M1000C161)</title>
      <use>"This is a spare counter for future purposes. Updated: Never"
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CELL_RESOURCE_SPARE_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CELL_RESOURCE_SPARE_4 (M1000C161)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_PRE_EMP_AAL2">
    <formula>CELLRES.RB_RELEASE_DUE_PRE_EMP_AAL2</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_PRE_EMP_AAL2 (M1000C162)</title>
      <use>The number of released radio bearers by pre-emption due to Iub transport congestion. Both ATM and IP-based transport are covered. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_PRE_EMP_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_PRE_EMP_AAL2 (M1000C162)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_PRE_EMP_BTS">
    <formula>CELLRES.RB_RELEASE_DUE_PRE_EMP_BTS</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_PRE_EMP_BTS (M1000C163)</title>
      <use>The number of released radio bearers by pre-emption due to BTS congestion.This means either Channel Element shortage or maximum number of HS-DSCH MAC-d flows or HSPA users exceeded. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_PRE_EMP_BTS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_PRE_EMP_BTS (M1000C163)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_PRE_EMP_INTF">
    <formula>CELLRES.RB_RELEASE_DUE_PRE_EMP_INTF</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_PRE_EMP_INTF (M1000C164)</title>
      <use>The number of released radio bearers by pre-emption due to uplink interference or downlink power congestion reasons. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_PRE_EMP_INTF)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_PRE_EMP_INTF (M1000C164)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_PRE_EMP_SPREA">
    <formula>CELLRES.RB_RELEASE_DUE_PRE_EMP_SPREA</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_PRE_EMP_SPREA (M1000C165)</title>
      <use>The number of released radio bearers by pre-emption due to spreading code congestion. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_PRE_EMP_SPREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_PRE_EMP_SPREA (M1000C165)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_OLC_RL_RECONF">
    <formula>CELLRES.RB_RELEASE_DUE_OLC_RL_RECONF</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_OLC_RL_RECONF (M1000C166)</title>
      <use>The number of radio bearer releases by the enhanced overload control using the radio link reconfiguration method. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_OLC_RL_RECONF)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_OLC_RL_RECONF (M1000C166)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSDPA_NO_USERS">
    <formula>CELLRES.DUR_HSDPA_NO_USERS</formula>
    <kpi_info>
      <title>DUR_HSDPA_NO_USERS (M1000C167)</title>
      <use>This counter indicates how long time no HSDPA users are allocated during the measurement period. The counter is not updated if HSDPA is disabled for the cell. UPDATED:At 1-second intervals with value 1 if HSDPA is enabled in the cell but there are no HSDPA users allocated.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSDPA_NO_USERS)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSDPA_NO_USERS (M1000C167)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSDPA_USERS_1_OR_2">
    <formula>CELLRES.DUR_HSDPA_USERS_1_OR_2</formula>
    <kpi_info>
      <title>DUR_HSDPA_USERS_1_OR_2 (M1000C168)</title>
      <use>This counter indicates how long time 1 or 2 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:At 1-second intervals with value 1 if there are 1 or 2 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSDPA_USERS_1_OR_2)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSDPA_USERS_1_OR_2 (M1000C168)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSDPA_USERS_3_OR_4">
    <formula>CELLRES.DUR_HSDPA_USERS_3_OR_4</formula>
    <kpi_info>
      <title>DUR_HSDPA_USERS_3_OR_4 (M1000C169)</title>
      <use>This counter indicates how long time 3 or 4 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:At 1-second intervals with value 1 if there are 3 or 4 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSDPA_USERS_3_OR_4)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSDPA_USERS_3_OR_4 (M1000C169)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSDPA_USERS_5_OR_6">
    <formula>CELLRES.DUR_HSDPA_USERS_5_OR_6</formula>
    <kpi_info>
      <title>DUR_HSDPA_USERS_5_OR_6 (M1000C170)</title>
      <use>This counter indicates how long time 5 or 6 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:At 1-second intervals with value 1 if there are 5 or 6 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSDPA_USERS_5_OR_6)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSDPA_USERS_5_OR_6 (M1000C170)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSDPA_USERS_7_OR_8">
    <formula>CELLRES.DUR_HSDPA_USERS_7_OR_8</formula>
    <kpi_info>
      <title>DUR_HSDPA_USERS_7_OR_8 (M1000C171)</title>
      <use>This counter indicates how long time 7 or 8 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:At 1-second intervals with value 1 if there are 7 or 8 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSDPA_USERS_7_OR_8)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSDPA_USERS_7_OR_8 (M1000C171)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSDPA_USERS_9_OR_10">
    <formula>CELLRES.DUR_HSDPA_USERS_9_OR_10</formula>
    <kpi_info>
      <title>DUR_HSDPA_USERS_9_OR_10 (M1000C172)</title>
      <use>This counter indicates how long time 9 or 10 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:At 1-second intervals with value 1 if there are 9 or 10 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSDPA_USERS_9_OR_10)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSDPA_USERS_9_OR_10 (M1000C172)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSDPA_USERS_11_OR_12">
    <formula>CELLRES.DUR_HSDPA_USERS_11_OR_12</formula>
    <kpi_info>
      <title>DUR_HSDPA_USERS_11_OR_12 (M1000C173)</title>
      <use>This counter indicates how long time 11 or 12 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:At 1-second intervals with value 1 if there are 11 or 12 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSDPA_USERS_11_OR_12)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSDPA_USERS_11_OR_12 (M1000C173)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSDPA_USERS_13_OR_14">
    <formula>CELLRES.DUR_HSDPA_USERS_13_OR_14</formula>
    <kpi_info>
      <title>DUR_HSDPA_USERS_13_OR_14 (M1000C174)</title>
      <use>This counter indicates how long time 13 or 14 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:At 1-second intervals with value 1 if there are 13 or 14 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSDPA_USERS_13_OR_14)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSDPA_USERS_13_OR_14 (M1000C174)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSDPA_USERS_15_OR_16">
    <formula>CELLRES.DUR_HSDPA_USERS_15_OR_16</formula>
    <kpi_info>
      <title>DUR_HSDPA_USERS_15_OR_16 (M1000C175)</title>
      <use>This counter indicates how long time 15 or 16 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:At 1-second intervals with value 1 if there are 15 or 16 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSDPA_USERS_15_OR_16)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSDPA_USERS_15_OR_16 (M1000C175)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUM_RACH_ACK_PREAMBLES">
    <formula>CELLRES.SUM_RACH_ACK_PREAMBLES</formula>
    <kpi_info>
      <title>SUM_RACH_ACK_PREAMBLES (M1000C176)</title>
      <use>The number of acknowledged PRACH preambles reported by the BTS indicates the RACH channel load. This counter, divided by the denominator, gives the average number of acknowledged PRACH preambles during the Radio Resource Indication period. This counter is updated only for cells using the 3GPP Iub interface. However due to 3GPP NBAP protocol reporting range, the counter remains mostly zero in live network environment and thus does not give useful information about the RACH load.UPDATED:When NBAP:PRIVATE:RADIO RESOURCE MEASUREMENT REPORT or NBAP:COMMON MEASUREMENT REPORT including information on acknowledged PRACH preambles is received from the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUM_RACH_ACK_PREAMBLES)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUM_RACH_ACK_PREAMBLES (M1000C176)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_RACH_ACK_PREAMBLES">
    <formula>CELLRES.DENOM_RACH_ACK_PREAMBLES</formula>
    <kpi_info>
      <title>DENOM_RACH_ACK_PREAMBLES (M1000C177)</title>
      <use>The number of measurement reports including acknowledged PRACH preamble information. This counter is updated only for cells using the 3GPP Iub interface. UPDATED:When NBAP:PRIVATE:RADIO RESOURCE MEASUREMENT REPORT or NBAP:COMMON MEASUREMENT REPORT including information on acknowledged PRACH preambles is received from the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_RACH_ACK_PREAMBLES)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_RACH_ACK_PREAMBLES (M1000C177)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVAIL_WCELL_IN_WO_STATE">
    <formula>CELLRES.AVAIL_WCELL_IN_WO_STATE</formula>
    <kpi_info>
      <title>AVAIL_WCELL_IN_WO_STATE (M1000C178)</title>
      <use>The number of samples when WCEL is in Working or power saving state. Counter M1000C180 is always updated along with this counter. In power saving state BL(P) also M1000C378 is updated. UPDATED:The counter is updated with the value 1 once in approximately 5 seconds when the WCEL is in Working or power saving BL(P) state. It must be noted that due to limited timing accuracy the amount of samples per measurement interval does not always match with the nominal sampling rate. For example during 60 minute measurement interval there may be 719 samples instead of the nominal amount of 720 samples.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AVAIL_WCELL_IN_WO_STATE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVAIL_WCELL_IN_WO_STATE (M1000C178)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVAIL_WCELL_BLOCKED_BY_USER">
    <formula>CELLRES.AVAIL_WCELL_BLOCKED_BY_USER</formula>
    <kpi_info>
      <title>AVAIL_WCELL_BLOCKED_BY_USER (M1000C179)</title>
      <use>The number of samples when WCEL is in Blocked-by-user state. Counter M1000C180 is always updated along with this counter. UPDATED:The counter is updated with the value 1 once in approximately 5 seconds when the WCEL is in blocked-by-user state. The state can also be blocked-by-user state combined with some other blocked-states, for example, BL-UI. It must be noted that due to limited timing accuracy the amount of samples per measurement interval does not always match with the nominal sampling rate. For example during 60 minute measurement interval there may be 719 samples instead of the nominal amount of 720 samples.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AVAIL_WCELL_BLOCKED_BY_USER)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVAIL_WCELL_BLOCKED_BY_USER (M1000C179)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVAIL_WCELL_EXISTS_IN_RNW_DB">
    <formula>CELLRES.AVAIL_WCELL_EXISTS_IN_RNW_DB</formula>
    <kpi_info>
      <title>AVAIL_WCELL_EXISTS_IN_RNW_DB (M1000C180)</title>
      <use>The number of samples when WCEL is configured in the database. This counter is used as a denominator for cell availability calculation. UPDATED:The counter is updated with the value 1 once in approximately 5 seconds when the WCEL is configured in the radio network database. It must be noted that due to limited timing accuracy the amount of samples per measurement interval does not always match with the nominal sampling rate. For example during 60 minute measurement interval there may be 719 samples instead of the nominal amount of 720 samples.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AVAIL_WCELL_EXISTS_IN_RNW_DB)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVAIL_WCELL_EXISTS_IN_RNW_DB (M1000C180)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CE_SAMPLE_AMOUNT">
    <formula>CELLRES.CE_SAMPLE_AMOUNT</formula>
    <kpi_info>
      <title>CE_SAMPLE_AMOUNT (M1000C181)</title>
      <use>The number of channel element capacity samples (common denominator for counters M1000C182-M1000C225). UPDATED:The counter is updated when the measurement sample for CE calculation is taken.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CE_SAMPLE_AMOUNT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CE_SAMPLE_AMOUNT (M1000C181)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_AMR">
    <formula>CELLRES.AVE_CE_USED_AMR</formula>
    <kpi_info>
      <title>AVE_CE_USED_AMR (M1000C182)</title>
      <use>The average number of used CE for AMR allocations. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_AMR*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_AMR (M1000C182)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_CS_CONV_64">
    <formula>CELLRES.AVE_CE_USED_CS_CONV_64</formula>
    <kpi_info>
      <title>AVE_CE_USED_CS_CONV_64 (M1000C183)</title>
      <use>The average number of used CE for Transparent 64 kbps CS Data Calls with Conversational class. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_CS_CONV_64*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_CS_CONV_64 (M1000C183)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_CS_STR_14_4">
    <formula>CELLRES.AVE_CE_USED_CS_STR_14_4</formula>
    <kpi_info>
      <title>AVE_CE_USED_CS_STR_14_4 (M1000C184)</title>
      <use>The average number of used CE for Non-Transparent 14.4 kbps CS Data Calls with Streaming class. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_CS_STR_14_4*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_CS_STR_14_4 (M1000C184)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_CS_STR_57_6">
    <formula>CELLRES.AVE_CE_USED_CS_STR_57_6</formula>
    <kpi_info>
      <title>AVE_CE_USED_CS_STR_57_6 (M1000C185)</title>
      <use>The average number of used CE for Non-Transparent 57.6 kbps CS Data Calls with Streaming class. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_CS_STR_57_6*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_CS_STR_57_6 (M1000C185)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_8_UL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_8_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_8_UL (M1000C186)</title>
      <use>The average number of used CE for 8 kbps PS call with Streaming class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_8_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_8_UL (M1000C186)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_16_UL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_16_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_16_UL (M1000C187)</title>
      <use>The average number of used CE for 16 kbps PS call with Streaming class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_16_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_16_UL (M1000C187)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_32_UL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_32_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_32_UL (M1000C188)</title>
      <use>The average number of used CE for 32 kbps PS call with Streaming class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_32_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_32_UL (M1000C188)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_64_UL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_64_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_64_UL (M1000C189)</title>
      <use>The average number of used CE for 64 kbps PS call with Streaming class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_64_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_64_UL (M1000C189)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_128_UL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_128_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_128_UL (M1000C190)</title>
      <use>The average number of used CE for 128 kbps PS call with Streaming class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_128_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_128_UL (M1000C190)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_8_DL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_8_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_8_DL (M1000C191)</title>
      <use>The average number of used CE for 8 kbps PS call with Streaming class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_8_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_8_DL (M1000C191)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_16_DL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_16_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_16_DL (M1000C192)</title>
      <use>The average number of used CE for 16 kbps PS call with Streaming class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_16_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_16_DL (M1000C192)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_32_DL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_32_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_32_DL (M1000C193)</title>
      <use>The average number of used CE for 32 kbps PS call with Streaming class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_32_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_32_DL (M1000C193)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_64_DL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_64_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_64_DL (M1000C194)</title>
      <use>The average number of used CE for 64 kbps PS call with Streaming class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_64_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_64_DL (M1000C194)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_128_DL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_128_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_128_DL (M1000C195)</title>
      <use>The average number of used CE for 128 kbps PS call with Streaming class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_128_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_128_DL (M1000C195)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_256_DL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_256_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_256_DL (M1000C196)</title>
      <use>The average number of used CE for 256 kbps PS call with Streaming class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_256_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_256_DL (M1000C196)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_STR_384_DL">
    <formula>CELLRES.AVE_CE_USED_PS_STR_384_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_STR_384_DL (M1000C197)</title>
      <use>Average number of used CE for 384 kbps PS call with Streaming class in DL. UPDATED:The counter is updated on the cycle of 20 seconds based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_STR_384_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_STR_384_DL (M1000C197)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_8_UL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_8_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_8_UL (M1000C198)</title>
      <use>The average number of used CE for 8 kbps PS call with Interactive class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_8_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_8_UL (M1000C198)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_16_UL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_16_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_16_UL (M1000C199)</title>
      <use>The average number of used CE for 16 kbps PS call with Interactive class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_16_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_16_UL (M1000C199)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_32_UL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_32_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_32_UL (M1000C200)</title>
      <use>The average number of used CE for 32 kbps PS call with Interactive class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_32_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_32_UL (M1000C200)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_64_UL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_64_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_64_UL (M1000C201)</title>
      <use>The average number of used CE for 64 kbps PS call with Interactive class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_64_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_64_UL (M1000C201)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_128_UL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_128_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_128_UL (M1000C202)</title>
      <use>The average number of used CE for 128 kbps PS call with Interactive class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_128_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_128_UL (M1000C202)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_256_UL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_256_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_256_UL (M1000C203)</title>
      <use>The average number of used CE for 256 kbps PS call with Interactive class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_256_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_256_UL (M1000C203)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_384_UL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_384_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_384_UL (M1000C204)</title>
      <use>The average number of used CE for 384 kbps PS call with Interactive class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_384_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_384_UL (M1000C204)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_8_DL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_8_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_8_DL (M1000C205)</title>
      <use>The average number of used CE for 8 kbps PS call with Interactive class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_8_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_8_DL (M1000C205)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_16_DL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_16_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_16_DL (M1000C206)</title>
      <use>The average number of used CE for 16 kbps PS call with Interactive class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_16_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_16_DL (M1000C206)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_32_DL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_32_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_32_DL (M1000C207)</title>
      <use>The average number of used CE for 32 kbps PS call with Interactive class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_32_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_32_DL (M1000C207)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_64_DL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_64_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_64_DL (M1000C208)</title>
      <use>The average number of used CE for 64 kbps PS call with Interactive class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_64_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_64_DL (M1000C208)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_128_DL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_128_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_128_DL (M1000C209)</title>
      <use>The average number of used CE for 128 kbps PS call with Interactive class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_128_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_128_DL (M1000C209)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_256_DL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_256_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_256_DL (M1000C210)</title>
      <use>The average number of used CE for 256 kbps PS call with Interactive class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_256_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_256_DL (M1000C210)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_INT_384_DL">
    <formula>CELLRES.AVE_CE_USED_PS_INT_384_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_INT_384_DL (M1000C211)</title>
      <use>The average number of used CE for 384 kbps PS call with Interactive class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_INT_384_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_INT_384_DL (M1000C211)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_8_UL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_8_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_8_UL (M1000C212)</title>
      <use>The average number of used CE for 8 kbps PS call with Background class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_8_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_8_UL (M1000C212)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_16_UL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_16_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_16_UL (M1000C213)</title>
      <use>The average number of used CE for 16 kbps PS call with Background class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_16_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_16_UL (M1000C213)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_32_UL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_32_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_32_UL (M1000C214)</title>
      <use>The average number of used CE for 32 kbps PS call with Background class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_32_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_32_UL (M1000C214)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_64_UL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_64_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_64_UL (M1000C215)</title>
      <use>The average number of used CE for 64 kbps PS call with Background class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_64_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_64_UL (M1000C215)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_128_UL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_128_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_128_UL (M1000C216)</title>
      <use>The average number of used CE for 128 kbps PS call with Background class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_128_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_128_UL (M1000C216)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_256_UL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_256_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_256_UL (M1000C217)</title>
      <use>The average number of used CE for 256 kbps PS call with Background class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_256_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_256_UL (M1000C217)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_384_UL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_384_UL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_384_UL (M1000C218)</title>
      <use>The average number of used CE for 384 kbps PS call with Background class in UL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_384_UL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_384_UL (M1000C218)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_8_DL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_8_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_8_DL (M1000C219)</title>
      <use>The average number of used CE for 8 kbps PS call with Background class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_8_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_8_DL (M1000C219)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_16_DL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_16_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_16_DL (M1000C220)</title>
      <use>The average number of used CE for 16 kbps PS call with Background class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_16_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_16_DL (M1000C220)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_32_DL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_32_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_32_DL (M1000C221)</title>
      <use>The average number of used CE for 32 kbps PS call with Background class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_32_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_32_DL (M1000C221)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_64_DL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_64_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_64_DL (M1000C222)</title>
      <use>The average number of used CE for 64 kbps PS call with Background class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_64_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_64_DL (M1000C222)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_128_DL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_128_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_128_DL (M1000C223)</title>
      <use>The average number of used CE for 128 kbps PS call with Background class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_128_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_128_DL (M1000C223)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_256_DL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_256_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_256_DL (M1000C224)</title>
      <use>The average number of used CE for 256 kbps PS call with Background class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_256_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_256_DL (M1000C224)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_CE_USED_PS_BGR_384_DL">
    <formula>CELLRES.AVE_CE_USED_PS_BGR_384_DL</formula>
    <kpi_info>
      <title>AVE_CE_USED_PS_BGR_384_DL (M1000C225)</title>
      <use>The average number of used CE for 384 kbps PS call with Background class in DL. UPDATED:The counter is updated at 20-second intervals based on the estimated usage of channel elements in the BTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(CE_SAMPLE_AMOUNT),0),0,0,SUM(AVE_CE_USED_PS_BGR_384_DL*CE_SAMPLE_AMOUNT)/SUM(CE_SAMPLE_AMOUNT)),3)</formula>
      <unit>Channel Element</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_CE_USED_PS_BGR_384_DL (M1000C225)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_THRPOPT">
    <formula>CELLRES.RB_DOWNGR_DUE_THRPOPT</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_THRPOPT (M1000C226)</title>
      <use>The number of radio bearer downgrades due to the Throughput Based Optimization of the PS algorithm. UPDATED:When the radio bearer is successfully downgraded.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_THRPOPT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_THRPOPT (M1000C226)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_THRPOPT">
    <formula>CELLRES.RB_RELEASE_DUE_THRPOPT</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_THRPOPT (M1000C227)</title>
      <use>The number of radio bearer releases due to the Throughput Based Optimization of the PS algorithm. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_THRPOPT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_THRPOPT (M1000C227)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MAXIMUM_PRXTOTAL">
    <formula>CELLRES.MAXIMUM_PRXTOTAL</formula>
    <kpi_info>
      <title>MAXIMUM_PRXTOTAL (M1000C228)</title>
      <use>The maximum Rel99 received uplink power value during the measurement period. UPDATED:When the PrxTotal value received from the BTS is larger than the previous maximum value of the measurement period. If HSUPA is enabled, this counter is based on the PrxNonEDPCH value estimated by the RNC from E-DCH load factors and PrxTotal.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(MAXIMUM_PRXTOTAL)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MAXIMUM_PRXTOTAL (M1000C228)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MINIMUM_PRXTOTAL">
    <formula>CELLRES.MINIMUM_PRXTOTAL</formula>
    <kpi_info>
      <title>MINIMUM_PRXTOTAL (M1000C229)</title>
      <use>The minimum Rel99 received uplink power value during the measurement period. UPDATED:When the PrxTotal value received from the BTS is smaller than the previous minimum value of the measurement period. If HSUPA is enabled, this counter is based on the PrxNonEDPCH value estimated by the RNC from E-DCH load factors and PrxTotal.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MIN(MINIMUM_PRXTOTAL)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MINIMUM_PRXTOTAL (M1000C229)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MAXIMUM_PTXTOTAL">
    <formula>CELLRES.MAXIMUM_PTXTOTAL</formula>
    <kpi_info>
      <title>MAXIMUM_PTXTOTAL (M1000C230)</title>
      <use>The maximum Rel99 downlink power value value during the measurement period. UPDATED:When the PtxTotal value received from the BTS is larger than the previous maximum value of the measurement period. If HSDPA is enabled in the cell, this counter is based on PtxNonHSDPA power. If HSUPA is enabled in the cell, this counter is based on PtxNonHSPA power.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(MAXIMUM_PTXTOTAL)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MAXIMUM_PTXTOTAL (M1000C230)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MINIMUM_PTXTOTAL">
    <formula>CELLRES.MINIMUM_PTXTOTAL</formula>
    <kpi_info>
      <title>MINIMUM_PTXTOTAL (M1000C231)</title>
      <use>The minimum Rel99 downlink power value during the measurement period. UPDATED:When the PtxTotal value received from the BTS is smaller than the previous minimum value of the measurement period. If HSDPA is enabled in the cell, this counter is based on PtxNonHSDPA power. If HSUPA is enabled in the cell, this counter is based on PtxNonHSPA power.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MIN(MINIMUM_PTXTOTAL)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MINIMUM_PTXTOTAL (M1000C231)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MIN_PTX_TARGET_PS">
    <formula>CELLRES.MIN_PTX_TARGET_PS</formula>
    <kpi_info>
      <title>MIN_PTX_TARGET_PS (M1000C232)</title>
      <use>The minimum target threshold PtxTargetPS value during the measurement period. The PtxTargetPS value is adjusted dynamically based on the measurement reports received from the BTS. UPDATED:When an RNC internal scheduling timer expires and there is at least one MAC-d flow allocated in the cell and HSDPA Dynamic Resource Allocation is enabled.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MIN(MIN_PTX_TARGET_PS)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MIN_PTX_TARGET_PS (M1000C232)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MAX_PTX_TARGET_PS">
    <formula>CELLRES.MAX_PTX_TARGET_PS</formula>
    <kpi_info>
      <title>MAX_PTX_TARGET_PS (M1000C233)</title>
      <use>The maximum target threshold PtxTargetPS value during the measurement period. The PtxTargetPS value is adjusted dynamically based on the measurement reports received from the BTS. UPDATED:When an RNC internal scheduling timer expires and there is at least one MAC-d flow allocated in the cell and HSDPA Dynamic Resource Allocation is enabled.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(MAX_PTX_TARGET_PS)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MAX_PTX_TARGET_PS (M1000C233)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_PTX_TARGET_PS">
    <formula>CELLRES.AVE_PTX_TARGET_PS</formula>
    <kpi_info>
      <title>AVE_PTX_TARGET_PS (M1000C234)</title>
      <use>The average target threshold PtxTargetPS value during the measurement period. The PtxTargetPS value is adjusted dynamically based on the measurement reports received from the BTS. UPDATED:When an RNC internal scheduling timer expires and there is at least one MAC-d flow allocated in the cell and HSDPA Dynamic Resource Allocation is enabled.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(PTX_TARGET_PS_DENOM),0),0,0,10*LOG(10,(SUM(PTX_TARGET_PS_DENOM*(POWER(10,(AVE_PTX_TARGET_PS/10))/1000))/SUM(PTX_TARGET_PS_DENOM))*1000)),3)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_PTX_TARGET_PS (M1000C234)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="PTX_TARGET_PS_DENOM">
    <formula>CELLRES.PTX_TARGET_PS_DENOM</formula>
    <kpi_info>
      <title>PTX_TARGET_PS_DENOM (M1000C235)</title>
      <use>The number of samples for the target threshold PtxTargetPS measurement. UPDATED:Incremented by value 1 when PtxTarget value is updated to counter M1000C234.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(PTX_TARGET_PS_DENOM)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>PTX_TARGET_PS_DENOM (M1000C235)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MIN_HSPA_DL_POWER">
    <formula>CELLRES.MIN_HSPA_DL_POWER</formula>
    <kpi_info>
      <title>MIN_HSPA_DL_POWER (M1000C236)</title>
      <use>The minimum used HSPA power during the measurement period. The used HSPA power is calculated from the difference between the Transmitted Carrier Power and PtxNonHSPA (or PtxNonHSDPA) values. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the HSPA DL power value is calculated based on the information of latest received non-HSPA power value in NBAP:PRIVATE:RADIO RESOURCE MEASUREMENT REPORT.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MIN(MIN_HSPA_DL_POWER)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MIN_HSPA_DL_POWER (M1000C236)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MAX_HSPA_DL_POWER">
    <formula>CELLRES.MAX_HSPA_DL_POWER</formula>
    <kpi_info>
      <title>MAX_HSPA_DL_POWER (M1000C237)</title>
      <use>The maximum used HSPA power during the measurement period. The used HSPA power is calculated from the difference between the Transmitted Carrier Power and PtxNonHSPA (or PtxNonHSDPA) values. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the HSPA DL power value is calculated based on the information of latest received non-HSPA power value in NBAP:PRIVATE:RADIO RESOURCE MEASUREMENT REPORT.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(MAX_HSPA_DL_POWER)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MAX_HSPA_DL_POWER (M1000C237)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_HSPA_DL_POWER">
    <formula>CELLRES.AVE_HSPA_DL_POWER</formula>
    <kpi_info>
      <title>AVE_HSPA_DL_POWER (M1000C238)</title>
      <use>The average used HSPA power during the measurement period. The used HSPA power is calculated from the difference between the Transmitted Carrier Power and PtxNonHSPA (or PtxNonHSDPA) values. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the HSPA DL power value is calculated based on the information of latest received non-HSPA power value in NBAP:PRIVATE:RADIO RESOURCE MEASUREMENT REPORT.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(HSPA_DL_POWER_SAMPLES),0),0,0,10*LOG(10,(SUM(HSPA_DL_POWER_SAMPLES*(POWER(10,(AVE_HSPA_DL_POWER/10))/1000))/SUM(HSPA_DL_POWER_SAMPLES))*1000)),3)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_HSPA_DL_POWER (M1000C238)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="HSPA_DL_POWER_SAMPLES">
    <formula>CELLRES.HSPA_DL_POWER_SAMPLES</formula>
    <kpi_info>
      <title>HSPA_DL_POWER_SAMPLES (M1000C239)</title>
      <use>The number of samples for the used HSPA power measurement. UPDATED:Incremented by value 1 when HSPA power value is updated to counter M1000C238.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(HSPA_DL_POWER_SAMPLES)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>HSPA_DL_POWER_SAMPLES (M1000C239)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_17_TO_20">
    <formula>CELLRES.DURA_HSDPA_USERS_17_TO_20</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_17_TO_20 (M1000C240)</title>
      <use>This counter indicates the amount of time that 17 to 20 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 17 to 20 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_17_TO_20)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_17_TO_20 (M1000C240)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_21_TO_24">
    <formula>CELLRES.DURA_HSDPA_USERS_21_TO_24</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_21_TO_24 (M1000C241)</title>
      <use>This counter indicates the amount of time that 21 to 24 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 21 to 24 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_21_TO_24)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_21_TO_24 (M1000C241)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_25_TO_28">
    <formula>CELLRES.DURA_HSDPA_USERS_25_TO_28</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_25_TO_28 (M1000C242)</title>
      <use>This counter indicates the amount of time that 25 to 28 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 25 to 28 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_25_TO_28)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_25_TO_28 (M1000C242)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_29_TO_32">
    <formula>CELLRES.DURA_HSDPA_USERS_29_TO_32</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_29_TO_32 (M1000C243)</title>
      <use>This counter indicates the amount of time that 29 to 32 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 29 to 32 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_29_TO_32)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_29_TO_32 (M1000C243)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_33_TO_36">
    <formula>CELLRES.DURA_HSDPA_USERS_33_TO_36</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_33_TO_36 (M1000C244)</title>
      <use>This counter indicates the amount of time that 33 to 36 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 33 to 36 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_33_TO_36)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_33_TO_36 (M1000C244)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_37_TO_40">
    <formula>CELLRES.DURA_HSDPA_USERS_37_TO_40</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_37_TO_40 (M1000C245)</title>
      <use>This counter indicates the amount of time that 37 to 40 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 37 to 40 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_37_TO_40)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_37_TO_40 (M1000C245)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_41_TO_44">
    <formula>CELLRES.DURA_HSDPA_USERS_41_TO_44</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_41_TO_44 (M1000C246)</title>
      <use>This counter indicates the amount of time that 41 to 44 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 41 to 44 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_41_TO_44)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_41_TO_44 (M1000C246)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_45_TO_48">
    <formula>CELLRES.DURA_HSDPA_USERS_45_TO_48</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_45_TO_48 (M1000C247)</title>
      <use>This counter indicates the amount of time that 45 to 48 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 45 to 48 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_45_TO_48)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_45_TO_48 (M1000C247)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_5_CODE">
    <formula>CELLRES.DURA_HSDPA_5_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_5_CODE (M1000C248)</title>
      <use>The counter indicates the amount of time that 5 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated by one at one-second intervals if 5 HSDPA codes are reserved in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_5_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_5_CODE (M1000C248)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_6_CODE">
    <formula>CELLRES.DURA_HSDPA_6_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_6_CODE (M1000C249)</title>
      <use>The counter indicates the amount of time that 6 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated at one-second intervals. The counter updating is started/stopped when the RNC receives an NBAP Physical shared Channel Reconfiguration Response message from the WBTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_6_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_6_CODE (M1000C249)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_7_CODE">
    <formula>CELLRES.DURA_HSDPA_7_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_7_CODE (M1000C250)</title>
      <use>The counter indicates the amount of time that 7 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated at one-second intervals. The counter updating is started/stopped when the RNC receives an NBAP Physical shared Channel Reconfiguration Response message
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_7_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_7_CODE (M1000C250)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_8_CODE">
    <formula>CELLRES.DURA_HSDPA_8_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_8_CODE (M1000C251)</title>
      <use>The counter indicates the amount of time that 8 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated at one-second intervals. The counter updating is started/stopped when the RNC receives an NBAP Physical shared Channel Reconfiguration Response message from the WBTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_8_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_8_CODE (M1000C251)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_9_CODE">
    <formula>CELLRES.DURA_HSDPA_9_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_9_CODE (M1000C252)</title>
      <use>The counter indicates the amount of time that 9 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated at one-second intervals. The counter updating is started/stopped when the RNC receives an NBAP Physical shared Channel Reconfiguration Response message from the WBTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_9_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_9_CODE (M1000C252)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_10_CODE">
    <formula>CELLRES.DURA_HSDPA_10_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_10_CODE (M1000C253)</title>
      <use>The counter indicates the amount of time that 10 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated at one-second intervals. The counter updating is started/stopped when the RNC receives an NBAP Physical shared Channel Reconfiguration Response message from the WBTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_10_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_10_CODE (M1000C253)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_11_CODE">
    <formula>CELLRES.DURA_HSDPA_11_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_11_CODE (M1000C254)</title>
      <use>The counter indicates the amount of time that 11 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated at one-second intervals. The counter updating is started/stopped when the RNC receives an NBAP Physical shared Channel Reconfiguration Response message from the WBTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_11_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_11_CODE (M1000C254)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_12_CODE">
    <formula>CELLRES.DURA_HSDPA_12_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_12_CODE (M1000C255)</title>
      <use>The counter indicates the amount of time that 12 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated at one-second intervals. The counter updating is started/stopped when the RNC receives an NBAP Physical shared Channel Reconfiguration Response message from the WBTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_12_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_12_CODE (M1000C255)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_13_CODE">
    <formula>CELLRES.DURA_HSDPA_13_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_13_CODE (M1000C256)</title>
      <use>The counter indicates the amount of time that 13 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated at one-second intervals. The counter updating is started/stopped when the RNC receives an NBAP Physical shared Channel Reconfiguration Response message from the WBTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_13_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_13_CODE (M1000C256)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_14_CODE">
    <formula>CELLRES.DURA_HSDPA_14_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_14_CODE (M1000C257)</title>
      <use>The counter indicates the amount of time that 14 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated at one-second intervals. The counter updating is started/stopped when the RNC receives an NBAP Physical shared Channel Reconfiguration Response message from the WBTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_14_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_14_CODE (M1000C257)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_15_CODE">
    <formula>CELLRES.DURA_HSDPA_15_CODE</formula>
    <kpi_info>
      <title>DURA_HSDPA_15_CODE (M1000C258)</title>
      <use>The counter indicates the amount of time that 15 channelisation codes are reserved for HSDPA during the measurement period. UPDATED:The counter is updated at one-second intervals. The counter updating is started/stopped when the RNC receives the NBAP Physical shared Channel Reconfiguration Response message from the WBTS.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_15_CODE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_15_CODE (M1000C258)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CHAN_CODE_SF4_REQUEST">
    <formula>CELLRES.CHAN_CODE_SF4_REQUEST</formula>
    <kpi_info>
      <title>CHAN_CODE_SF4_REQUEST (M1000C259)</title>
      <use>The counter indicates the number of times that the channelisation code for SF4 has been requested for. UPDATED:The counter is updated by one when the channelization code for SF4 is requested.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CHAN_CODE_SF4_REQUEST)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CHAN_CODE_SF4_REQUEST (M1000C259)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CHAN_CODE_SF8_REQUEST">
    <formula>CELLRES.CHAN_CODE_SF8_REQUEST</formula>
    <kpi_info>
      <title>CHAN_CODE_SF8_REQUEST (M1000C260)</title>
      <use>The counter indicates the number of times that the channelisation code for SF8 has been requested for. UPDATED:The counter is updated by one when the channelisation code for SF8 is requested.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CHAN_CODE_SF8_REQUEST)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CHAN_CODE_SF8_REQUEST (M1000C260)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CHAN_CODE_SF16_REQUEST">
    <formula>CELLRES.CHAN_CODE_SF16_REQUEST</formula>
    <kpi_info>
      <title>CHAN_CODE_SF16_REQUEST (M1000C261)</title>
      <use>The counter indicates the number of times that the channelisation code for SF16 has been requested for. UPDATED:The counter is updated by one when the channelisation code for SF16 is requested.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CHAN_CODE_SF16_REQUEST)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CHAN_CODE_SF16_REQUEST (M1000C261)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CHAN_CODE_SF32_REQUEST">
    <formula>CELLRES.CHAN_CODE_SF32_REQUEST</formula>
    <kpi_info>
      <title>CHAN_CODE_SF32_REQUEST (M1000C262)</title>
      <use>The counter indicates the number of times that the channelisation code for SF32 has been requested for. UPDATED:The counter is updated by one when the channelisation code for SF32 is requested.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CHAN_CODE_SF32_REQUEST)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CHAN_CODE_SF32_REQUEST (M1000C262)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CHAN_CODE_SF64_REQUEST">
    <formula>CELLRES.CHAN_CODE_SF64_REQUEST</formula>
    <kpi_info>
      <title>CHAN_CODE_SF64_REQUEST (M1000C263)</title>
      <use>The counter indicates the number of times that the channelisation code for SF64 has been requested for. UPDATED:The counter is updated by one when the channelisation code for SF64 is requested.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CHAN_CODE_SF64_REQUEST)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CHAN_CODE_SF64_REQUEST (M1000C263)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CHAN_CODE_SF128_REQUEST">
    <formula>CELLRES.CHAN_CODE_SF128_REQUEST</formula>
    <kpi_info>
      <title>CHAN_CODE_SF128_REQUEST (M1000C264)</title>
      <use>The counter indicates the number of times that the channelisation code for SF128 has been requested for. UPDATED:The counter is updated by one when the channelisation code for SF128 is requested.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CHAN_CODE_SF128_REQUEST)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CHAN_CODE_SF128_REQUEST (M1000C264)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CHAN_CODE_SF256_REQUEST">
    <formula>CELLRES.CHAN_CODE_SF256_REQUEST</formula>
    <kpi_info>
      <title>CHAN_CODE_SF256_REQUEST (M1000C265)</title>
      <use>The counter indicates the number of times that the channelisation code for SF256 has been requested for. UPDATED:The counter is updated by one when the channelisation code for SF256 is requested.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CHAN_CODE_SF256_REQUEST)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CHAN_CODE_SF256_REQUEST (M1000C265)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CH_CODE_DOWNG_RT">
    <formula>CELLRES.CH_CODE_DOWNG_RT</formula>
    <kpi_info>
      <title>CH_CODE_DOWNG_RT (M1000C266)</title>
      <use>The number of HSDPA channelisation code downgrades due to congestion of RT DCH requests. UPDATED:When the code downgrade is started due to a RT over HSDPA prioritisation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CH_CODE_DOWNG_RT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CH_CODE_DOWNG_RT (M1000C266)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CH_CODE_DOWNG_NRT_DCH">
    <formula>CELLRES.CH_CODE_DOWNG_NRT_DCH</formula>
    <kpi_info>
      <title>CH_CODE_DOWNG_NRT_DCH (M1000C267)</title>
      <use>The number of HSDPA channelisation code downgrades due to congestion of NRT DCH requests. UPDATED:When the code downgrade is started due to an NRT DCH over HSDPA prioritisation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CH_CODE_DOWNG_NRT_DCH)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CH_CODE_DOWNG_NRT_DCH (M1000C267)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="BTS_HSUPA_HW_NOT_LIMITED_DUR">
    <formula>CELLRES.BTS_HSUPA_HW_NOT_LIMITED_DUR</formula>
    <kpi_info>
      <title>BTS_HSUPA_HW_NOT_LIMITED_DUR (M1000C268)</title>
      <use>This counter indicates the amount of time that the BTS local cell group HW pool (where this cell belongs to) is in the HSUPA HW not-limited state during the measurement period. In this state, the BTS HW does not limit the HSUPA throughput. The same counter value is updated for all HSUPA enabled cells in the local cell group. UPDATED:The counter is updated by one at one-second intervals when the BTS reports with a RADIO RESOURCE MEASUREMENT REPORT message that it is in a state where the HW does not limit the usage of the E-DCH.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(BTS_HSUPA_HW_NOT_LIMITED_DUR)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>BTS_HSUPA_HW_NOT_LIMITED_DUR (M1000C268)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="BTS_HSUPA_HW_LIMITED_DUR">
    <formula>CELLRES.BTS_HSUPA_HW_LIMITED_DUR</formula>
    <kpi_info>
      <title>BTS_HSUPA_HW_LIMITED_DUR (M1000C269)</title>
      <use>This counter indicates the amount of time the BTS local cell group HW pool (where this cell belongs to) is in the HSUPA HW limited state during the measurement period. In this state, the RNC sets up the E-DCH but the BTS HW shortage may cause the throughput to be lower than expected. The same counter value is updated for all HSUPA enabled cells in the local cell group. UPDATED:The counter is updated by one at one-second intervals when the BTS reports with a RADIO RESOURCE MEASUREMENT REPORT message that it is in the HW limited state.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(BTS_HSUPA_HW_LIMITED_DUR)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>BTS_HSUPA_HW_LIMITED_DUR (M1000C269)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="BTS_HSUPA_NO_HW_CAPA_DUR">
    <formula>CELLRES.BTS_HSUPA_NO_HW_CAPA_DUR</formula>
    <kpi_info>
      <title>BTS_HSUPA_NO_HW_CAPA_DUR (M1000C270)</title>
      <use>This counter indicates the amount of time the BTS local cell group HW pool (where this cell belongs to) is in the HSUPA HW limited state during the measurement period. In this state, the RNC does not set up the E-DCH. The same counter value is updated for all HSUPA enabled cells in the local cell group. UPDATED:The counter is updated by one at one-second intervals when the BTS reports with a RADIO RESOURCE MEASUREMENT REPORT message that it is in a state where there is no capacity available for the E-DCH.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(BTS_HSUPA_NO_HW_CAPA_DUR)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>BTS_HSUPA_NO_HW_CAPA_DUR (M1000C270)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_NO_USERS">
    <formula>CELLRES.DUR_HSUPA_NO_USERS</formula>
    <kpi_info>
      <title>DUR_HSUPA_NO_USERS (M1000C271)</title>
      <use>This counter indicates the amount of time that there are no allocated HSUPA users during the measurement period. The counter is not updated if HSUPA is disabled for the cell. UPDATED:The counter is updated by one at one-second intervals if HSUPA is enabled in the cell but no HSUPA users are allocated.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_NO_USERS)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_NO_USERS (M1000C271)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_1_OR_2">
    <formula>CELLRES.DUR_HSUPA_USERS_1_OR_2</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_1_OR_2 (M1000C272)</title>
      <use>This counter indicates the amount of time that 1 or 2 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 1 or 2 active HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_1_OR_2)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_1_OR_2 (M1000C272)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_3_OR_4">
    <formula>CELLRES.DUR_HSUPA_USERS_3_OR_4</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_3_OR_4 (M1000C273)</title>
      <use>This counter indicates the amount of time that 3 or 4 active HSUPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 3 or 4 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_3_OR_4)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_3_OR_4 (M1000C273)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_5_OR_6">
    <formula>CELLRES.DUR_HSUPA_USERS_5_OR_6</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_5_OR_6 (M1000C274)</title>
      <use>This counter indicates the amount of time that 5 or 6 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 5 or 6 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_5_OR_6)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_5_OR_6 (M1000C274)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_7_OR_8">
    <formula>CELLRES.DUR_HSUPA_USERS_7_OR_8</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_7_OR_8 (M1000C275)</title>
      <use>This counter indicates the amount of time that 7 or 8 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 7 or 8 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_7_OR_8)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_7_OR_8 (M1000C275)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_9_OR_10">
    <formula>CELLRES.DUR_HSUPA_USERS_9_OR_10</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_9_OR_10 (M1000C276)</title>
      <use>This counter indicates the amount of time that 9 or 10 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 9 or 10 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_9_OR_10)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_9_OR_10 (M1000C276)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_11_OR_12">
    <formula>CELLRES.DUR_HSUPA_USERS_11_OR_12</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_11_OR_12 (M1000C277)</title>
      <use>This counter indicates the amount of time that 11 or 12 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 11 or 12 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_11_OR_12)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_11_OR_12 (M1000C277)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_13_OR_14">
    <formula>CELLRES.DUR_HSUPA_USERS_13_OR_14</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_13_OR_14 (M1000C278)</title>
      <use>This counter indicates the amount of time that 13 or 14 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 13 or 14 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_13_OR_14)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_13_OR_14 (M1000C278)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_15_OR_16">
    <formula>CELLRES.DUR_HSUPA_USERS_15_OR_16</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_15_OR_16 (M1000C279)</title>
      <use>This counter indicates the amount of time that 15 or 16 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 15 or 16 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_15_OR_16)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_15_OR_16 (M1000C279)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_17_OR_18">
    <formula>CELLRES.DUR_HSUPA_USERS_17_OR_18</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_17_OR_18 (M1000C280)</title>
      <use>This counter indicates the amount of time that 17 or 18 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 17 or 18 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_17_OR_18)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_17_OR_18 (M1000C280)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_19_OR_20">
    <formula>CELLRES.DUR_HSUPA_USERS_19_OR_20</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_19_OR_20 (M1000C281)</title>
      <use>This counter indicates the amount of time that 19 or 20 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 19 or 20 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_19_OR_20)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_19_OR_20 (M1000C281)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MAX_HSDPA_USERS_IN_CELL">
    <formula>CELLRES.MAX_HSDPA_USERS_IN_CELL</formula>
    <kpi_info>
      <title>MAX_HSDPA_USERS_IN_CELL (M1000C282)</title>
      <use>The maximum number of simultaneous HSDPA users per cell. HSDPA user is defined as a user with HS-DSCH allocated in the serving cell and either Rel99 DCH or E-DCH as the uplink channel type. DC-HSDPA users are counted only in the primary serving cell. UPDATED:The number of HSDPA users is sampled with one-second interval.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(MAX_HSDPA_USERS_IN_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MAX_HSDPA_USERS_IN_CELL (M1000C282)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MAX_HSUPA_USERS_IN_CELL">
    <formula>CELLRES.MAX_HSUPA_USERS_IN_CELL</formula>
    <kpi_info>
      <title>MAX_HSUPA_USERS_IN_CELL (M1000C283)</title>
      <use>The maximum number of simultaneous HSUPA users per cell. Includes both serving and non-serving E-DCH radio links. UPDATED:The number of HSUPA users is sampled with one-second interval.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(MAX_HSUPA_USERS_IN_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MAX_HSUPA_USERS_IN_CELL (M1000C283)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUM_HSDPA_USERS_IN_CELL">
    <formula>CELLRES.SUM_HSDPA_USERS_IN_CELL</formula>
    <kpi_info>
      <title>SUM_HSDPA_USERS_IN_CELL (M1000C284)</title>
      <use>The sum of sampled values for measuring the number of simultaneous HSDPA users in the cell. This counter, divided by the denominator M1000C285, provides the average number of HSDPA users in the cell. HSDPA user is defined as a user with HS-DSCH allocated in the serving cell and either Rel99 DCH or E-DCH as the uplink channel type. DC-HSDPA users are counted only in the primary serving cell. UPDATED:The number of HSDPA users is sampled with one-second interval and summed to this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUM_HSDPA_USERS_IN_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUM_HSDPA_USERS_IN_CELL (M1000C284)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_HSDPA_USERS_PER_CELL">
    <formula>CELLRES.DENOM_HSDPA_USERS_PER_CELL</formula>
    <kpi_info>
      <title>DENOM_HSDPA_USERS_PER_CELL (M1000C285)</title>
      <use>The number of samples taken for counter M1000C284, used as a denominator for average calculation. UPDATED: Updated by value 1 when the number of HSDPA users is summed to counter M1000C284.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_HSDPA_USERS_PER_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_HSDPA_USERS_PER_CELL (M1000C285)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUM_HSUPA_USERS_IN_CELL">
    <formula>CELLRES.SUM_HSUPA_USERS_IN_CELL</formula>
    <kpi_info>
      <title>SUM_HSUPA_USERS_IN_CELL (M1000C286)</title>
      <use>The sum of sampled values for measuring the number of simultaneous HSUPA users in the cell. This counter, divided by the denominator M1000C287, provides the average number of HSUPA users (E-DCH allocations) in the cell. Includes both serving and non-serving E-DCH radio links. UPDATED:The number of HSUPA users is sampled with one-second interval and summed to this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUM_HSUPA_USERS_IN_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUM_HSUPA_USERS_IN_CELL (M1000C286)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_HSUPA_USERS_PER_CELL">
    <formula>CELLRES.DENOM_HSUPA_USERS_PER_CELL</formula>
    <kpi_info>
      <title>DENOM_HSUPA_USERS_PER_CELL (M1000C287)</title>
      <use>The number of samples taken for counter M1000C286, used as a denominator for average calculation. UPDATED: Updated by value 1 when the number of HSUPA users is summed to counter M1000C286.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_HSUPA_USERS_PER_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_HSUPA_USERS_PER_CELL (M1000C287)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_TXPOW_LOAD_UNDERLOAD">
    <formula>CELLRES.AMR_TXPOW_LOAD_UNDERLOAD</formula>
    <kpi_info>
      <title>AMR_TXPOW_LOAD_UNDERLOAD (M1000C288)</title>
      <use>The number of times when (TxPower) &lt; (under load threshold). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_TXPOW_LOAD_UNDERLOAD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_TXPOW_LOAD_UNDERLOAD (M1000C288)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_TXPOW_LOAD_BELOW_TARGET">
    <formula>CELLRES.AMR_TXPOW_LOAD_BELOW_TARGET</formula>
    <kpi_info>
      <title>AMR_TXPOW_LOAD_BELOW_TARGET (M1000C289)</title>
      <use>The number of times when (TxPower) &lt; (target load threshold). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_TXPOW_LOAD_BELOW_TARGET)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_TXPOW_LOAD_BELOW_TARGET (M1000C289)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_TXPOW_LOAD_OVER_TARGET">
    <formula>CELLRES.AMR_TXPOW_LOAD_OVER_TARGET</formula>
    <kpi_info>
      <title>AMR_TXPOW_LOAD_OVER_TARGET (M1000C290)</title>
      <use>The number of times when (TxPower) &gt;= (target load threshold). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_TXPOW_LOAD_OVER_TARGET)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_TXPOW_LOAD_OVER_TARGET (M1000C290)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_TXPOW_LOAD_OVERLOAD">
    <formula>CELLRES.AMR_TXPOW_LOAD_OVERLOAD</formula>
    <kpi_info>
      <title>AMR_TXPOW_LOAD_OVERLOAD (M1000C291)</title>
      <use>The number of times when (TxPower) &gt;= (over load threshold). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_TXPOW_LOAD_OVERLOAD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_TXPOW_LOAD_OVERLOAD (M1000C291)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_CODE_LOAD_UNDERLOAD">
    <formula>CELLRES.AMR_CODE_LOAD_UNDERLOAD</formula>
    <kpi_info>
      <title>AMR_CODE_LOAD_UNDERLOAD (M1000C292)</title>
      <use>The number of times when (downlink spreading code load on SF128 level) &lt; (under load threshold AMRUnderSC). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_CODE_LOAD_UNDERLOAD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_CODE_LOAD_UNDERLOAD (M1000C292)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_CODE_LOAD_BELOW_TARGET">
    <formula>CELLRES.AMR_CODE_LOAD_BELOW_TARGET</formula>
    <kpi_info>
      <title>AMR_CODE_LOAD_BELOW_TARGET (M1000C293)</title>
      <use>The number of times when (downlink spreading code load on SF128 level) &lt; (target load threshold AMRTargetSC). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_CODE_LOAD_BELOW_TARGET)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_CODE_LOAD_BELOW_TARGET (M1000C293)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_CODE_LOAD_OVER_TARGET">
    <formula>CELLRES.AMR_CODE_LOAD_OVER_TARGET</formula>
    <kpi_info>
      <title>AMR_CODE_LOAD_OVER_TARGET (M1000C294)</title>
      <use>The number of times when (downlink spreading code load on SF128 level) &gt;= (target load threshold AMRTargetSC) . UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_CODE_LOAD_OVER_TARGET)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_CODE_LOAD_OVER_TARGET (M1000C294)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_CODE_LOAD_OVERLOAD">
    <formula>CELLRES.AMR_CODE_LOAD_OVERLOAD</formula>
    <kpi_info>
      <title>AMR_CODE_LOAD_OVERLOAD (M1000C295)</title>
      <use>The number of times when (downlink spreading code load on SF128 level) &gt;= (over load threshold AMROverSC). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_CODE_LOAD_OVERLOAD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_CODE_LOAD_OVERLOAD (M1000C295)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_TRANSM_LOAD_UNDERLOAD">
    <formula>CELLRES.AMR_TRANSM_LOAD_UNDERLOAD</formula>
    <kpi_info>
      <title>AMR_TRANSM_LOAD_UNDERLOAD (M1000C296)</title>
      <use>The number of times when (Iub downlink transmission load) &lt; (under load threshold AMRUnderTransmission). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_TRANSM_LOAD_UNDERLOAD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_TRANSM_LOAD_UNDERLOAD (M1000C296)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_TRANSM_LOAD_BELOW_TARGET">
    <formula>CELLRES.AMR_TRANSM_LOAD_BELOW_TARGET</formula>
    <kpi_info>
      <title>AMR_TRANSM_LOAD_BELOW_TARGET (M1000C297)</title>
      <use>The number of times when (Iub downlink transmission load) &lt; (target load threshold AMRTargetTransmission). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_TRANSM_LOAD_BELOW_TARGET)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_TRANSM_LOAD_BELOW_TARGET (M1000C297)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_TRANSM_LOAD_OVER_TARGET">
    <formula>CELLRES.AMR_TRANSM_LOAD_OVER_TARGET</formula>
    <kpi_info>
      <title>AMR_TRANSM_LOAD_OVER_TARGET (M1000C298)</title>
      <use>The number of times when (Iub downlink transmission load) &gt;= (target load threshold AMRTargetTransmission). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_TRANSM_LOAD_OVER_TARGET)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_TRANSM_LOAD_OVER_TARGET (M1000C298)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AMR_TRANSM_LOAD_OVERLOAD">
    <formula>CELLRES.AMR_TRANSM_LOAD_OVERLOAD</formula>
    <kpi_info>
      <title>AMR_TRANSM_LOAD_OVERLOAD (M1000C299)</title>
      <use>The number of times when (Iub downlink transmission load) &gt;= (over load threshold AMROverTransmission). UPDATED: The counters are updated periodically when the RNC checks the load situation.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AMR_TRANSM_LOAD_OVERLOAD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AMR_TRANSM_LOAD_OVERLOAD (M1000C299)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUM_HSDSCH_MACD_STREA">
    <formula>CELLRES.SUM_HSDSCH_MACD_STREA</formula>
    <kpi_info>
      <title>SUM_HSDSCH_MACD_STREA (M1000C300)</title>
      <use>Sum of samples for calculating average number of simultaneous HS-DSCH MAC-d flows per cell for streaming traffic class. This includes only user RAB related MAC-d flows, not signalling radio bearers. UPDATED:The number of HS-DSCH MAC-d flows for streaming is sampled with one-second interval and summed to this counter. The counter is updated only for serving HS-DSCH cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUM_HSDSCH_MACD_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUM_HSDSCH_MACD_STREA (M1000C300)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_HSDSCH_MACD_STREA">
    <formula>CELLRES.DENOM_HSDSCH_MACD_STREA</formula>
    <kpi_info>
      <title>DENOM_HSDSCH_MACD_STREA (M1000C301)</title>
      <use>The number of samples taken for counter M1000C300, used as a denominator for average calculation. UPDATED: Updated by value 1 when the number of HS-DSCH MAC-d flows is summed to counter M1000C300
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_HSDSCH_MACD_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_HSDSCH_MACD_STREA (M1000C301)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUM_HSDSCH_MACD_INTERA">
    <formula>CELLRES.SUM_HSDSCH_MACD_INTERA</formula>
    <kpi_info>
      <title>SUM_HSDSCH_MACD_INTERA (M1000C302)</title>
      <use>Sum of samples for calculating average number of simultaneous HS-DSCH MAC-d flows per cell for interactive traffic class. This includes only user RAB related MAC-d flows, not signalling radio bearers. UPDATED:The number of HS-DSCH MAC-d flows for interactive is sampled with one-second interval and summed to this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUM_HSDSCH_MACD_INTERA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUM_HSDSCH_MACD_INTERA (M1000C302)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_HSDSCH_MACD_INTERA">
    <formula>CELLRES.DENOM_HSDSCH_MACD_INTERA</formula>
    <kpi_info>
      <title>DENOM_HSDSCH_MACD_INTERA (M1000C303)</title>
      <use>The number of samples taken for counter M1000C302, used as a denominator for average calculation. UPDATED: Updated by value 1 when the number of HS-DSCH MAC-d flows is summed to counter M1000C302
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_HSDSCH_MACD_INTERA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_HSDSCH_MACD_INTERA (M1000C303)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUM_HSDSCH_MACD_BGR">
    <formula>CELLRES.SUM_HSDSCH_MACD_BGR</formula>
    <kpi_info>
      <title>SUM_HSDSCH_MACD_BGR (M1000C304)</title>
      <use>Sum of samples for calculating average number of simultaneous HS-DSCH MAC-d flows per cell for background traffic class. This includes only user RAB related MAC-d flows, not signalling radio bearers.UPDATED:The number of HS-DSCH MAC-d flows for background is sampled with one-second interval and summed to this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUM_HSDSCH_MACD_BGR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUM_HSDSCH_MACD_BGR (M1000C304)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_HSDSCH_MACD_BGR">
    <formula>CELLRES.DENOM_HSDSCH_MACD_BGR</formula>
    <kpi_info>
      <title>DENOM_HSDSCH_MACD_BGR (M1000C305)</title>
      <use>The number of samples taken for counter M1000C304, used as a denominator for average calculation. UPDATED: Updated by value 1 when the number of HS-DSCH MAC-d flows is summed to counter M1000C304
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_HSDSCH_MACD_BGR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_HSDSCH_MACD_BGR (M1000C305)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUM_EDCH_MACD_STREA">
    <formula>CELLRES.SUM_EDCH_MACD_STREA</formula>
    <kpi_info>
      <title>SUM_EDCH_MACD_STREA (M1000C306)</title>
      <use>Sum of samples for calculating average number of simultaneous E-DCH MAC-d flows per cell for streaming traffic class. This includes only user RAB related MAC-d flows, not signalling radio bearers.UPDATED:The number of E-DCH MAC-d flows for streaming is sampled with one-second interval and summed to this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUM_EDCH_MACD_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUM_EDCH_MACD_STREA (M1000C306)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_EDCH_MACD_STREA">
    <formula>CELLRES.DENOM_EDCH_MACD_STREA</formula>
    <kpi_info>
      <title>DENOM_EDCH_MACD_STREA (M1000C307)</title>
      <use>The number of samples taken for counter M1000C306, used as a denominator for average calculation. UPDATED: Updated by value 1 when the number of E-DCH MAC-d flows is summed to counter M1000C306
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_EDCH_MACD_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_EDCH_MACD_STREA (M1000C307)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUM_EDCH_MACD_INTERA">
    <formula>CELLRES.SUM_EDCH_MACD_INTERA</formula>
    <kpi_info>
      <title>SUM_EDCH_MACD_INTERA (M1000C308)</title>
      <use>Sum of samples for calculating average number of simultaneous E-DCH MAC-d flows per cell for interactive traffic class. This includes only user RAB related MAC-d flows, not signalling radio bearers.UPDATED:The number of E-DCH MAC-d flows for interactive is sampled with one-second interval and summed to this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUM_EDCH_MACD_INTERA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUM_EDCH_MACD_INTERA (M1000C308)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_EDCH_MACD_INTERA">
    <formula>CELLRES.DENOM_EDCH_MACD_INTERA</formula>
    <kpi_info>
      <title>DENOM_EDCH_MACD_INTERA (M1000C309)</title>
      <use>The number of samples taken for counter M1000C308, used as a denominator for average calculation. UPDATED: Updated by value 1 when the number of E-DCH MAC-d flows is summed to counter M1000C308
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_EDCH_MACD_INTERA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_EDCH_MACD_INTERA (M1000C309)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUM_EDCH_MACD_BGR">
    <formula>CELLRES.SUM_EDCH_MACD_BGR</formula>
    <kpi_info>
      <title>SUM_EDCH_MACD_BGR (M1000C310)</title>
      <use>Sum of samples for calculating average number of simultaneous E-DCH MAC-d flows per cell for background traffic class. This includes only user RAB related MAC-d flows, not signalling radio bearers.UPDATED:The number of E-DCH MAC-d flows for background is sampled with one-second interval and summed to this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUM_EDCH_MACD_BGR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUM_EDCH_MACD_BGR (M1000C310)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_EDCH_MACD_BGR">
    <formula>CELLRES.DENOM_EDCH_MACD_BGR</formula>
    <kpi_info>
      <title>DENOM_EDCH_MACD_BGR (M1000C311)</title>
      <use>The number of samples taken for counter M1000C310, used as a denominator for average calculation. UPDATED: Updated by value 1 when the number of E-DCH MAC-d flows is summed to counter M1000C310
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_EDCH_MACD_BGR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_EDCH_MACD_BGR (M1000C311)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_1">
    <formula>CELLRES.DURA_HSDPA_USERS_1</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_1 (M1000C312)</title>
      <use>This counter indicates the amount of time that 1 active HSDPA user is simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there is one HSDPA user in the cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_1)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_1 (M1000C312)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_3">
    <formula>CELLRES.DURA_HSDPA_USERS_3</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_3 (M1000C313)</title>
      <use>This counter indicates the amount of time that 3 active HSDPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 3 HSDPA users in the cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_3)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_3 (M1000C313)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_49_TO_52">
    <formula>CELLRES.DURA_HSDPA_USERS_49_TO_52</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_49_TO_52 (M1000C314)</title>
      <use>This counter indicates the amount of time that 49 to 52 active HSDPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 49 to 52 HSDPA users in the cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_49_TO_52)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_49_TO_52 (M1000C314)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_53_TO_56">
    <formula>CELLRES.DURA_HSDPA_USERS_53_TO_56</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_53_TO_56 (M1000C315)</title>
      <use>This counter indicates the amount of time that 53 to 56 active HSDPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 53 to 56 HSDPA users in the cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_53_TO_56)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_53_TO_56 (M1000C315)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_57_TO_60">
    <formula>CELLRES.DURA_HSDPA_USERS_57_TO_60</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_57_TO_60 (M1000C316)</title>
      <use>This counter indicates the amount of time that 57 to 60 active HSDPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 57 to 60 HSDPA users in the cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_57_TO_60)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_57_TO_60 (M1000C316)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_61_TO_64">
    <formula>CELLRES.DURA_HSDPA_USERS_61_TO_64</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_61_TO_64 (M1000C317)</title>
      <use>This counter indicates the amount of time that 61 to 64 active HSDPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 61 to 64 HSDPA users in the cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_61_TO_64)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_61_TO_64 (M1000C317)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_1">
    <formula>CELLRES.DUR_HSUPA_USERS_1</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_1 (M1000C318)</title>
      <use>This counter indicates the amount of time that 1 active HSUPA user is simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there is 1 active HSUPA user in the cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_1)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_1 (M1000C318)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DUR_HSUPA_USERS_3">
    <formula>CELLRES.DUR_HSUPA_USERS_3</formula>
    <kpi_info>
      <title>DUR_HSUPA_USERS_3 (M1000C319)</title>
      <use>This counter indicates the amount of time that 3 active HSUPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 3 active HSUPA users in the cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DUR_HSUPA_USERS_3)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DUR_HSUPA_USERS_3 (M1000C319)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_0">
    <formula>CELLRES.RTWP_CLASS_0</formula>
    <kpi_info>
      <title>RTWP_CLASS_0 (M1000C320)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 0 range (RTWP&lt; -108 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 0 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_0 (M1000C320)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_1">
    <formula>CELLRES.RTWP_CLASS_1</formula>
    <kpi_info>
      <title>RTWP_CLASS_1 (M1000C321)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 1 range (-108 dBm &lt;=RTWP&lt; -107 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 1 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_1 (M1000C321)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_2">
    <formula>CELLRES.RTWP_CLASS_2</formula>
    <kpi_info>
      <title>RTWP_CLASS_2 (M1000C322)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 2 range (-107 dBm &lt;=RTWP&lt; -106 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 2 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_2 (M1000C322)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_3">
    <formula>CELLRES.RTWP_CLASS_3</formula>
    <kpi_info>
      <title>RTWP_CLASS_3 (M1000C323)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 3 range (-106 dBm &lt;=RTWP&lt; -105). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 3 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_3 (M1000C323)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_4">
    <formula>CELLRES.RTWP_CLASS_4</formula>
    <kpi_info>
      <title>RTWP_CLASS_4 (M1000C324)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 4 range (-105 dBm &lt;=RTWP&lt; -104 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 4 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_4 (M1000C324)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_5">
    <formula>CELLRES.RTWP_CLASS_5</formula>
    <kpi_info>
      <title>RTWP_CLASS_5 (M1000C325)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 5 range (-104 dBm &lt;=RTWP&lt; -103 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 5 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_5)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_5 (M1000C325)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_6">
    <formula>CELLRES.RTWP_CLASS_6</formula>
    <kpi_info>
      <title>RTWP_CLASS_6 (M1000C326)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 6 range (-103 dBm &lt;=RTWP&lt; -102 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 6 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_6 (M1000C326)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_7">
    <formula>CELLRES.RTWP_CLASS_7</formula>
    <kpi_info>
      <title>RTWP_CLASS_7 (M1000C327)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 7 range (-102 dBm &lt;=RTWP&lt; -101 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 7 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_7)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_7 (M1000C327)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_8">
    <formula>CELLRES.RTWP_CLASS_8</formula>
    <kpi_info>
      <title>RTWP_CLASS_8 (M1000C328)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 8 range (-101 dBm &lt;=RTWP&lt; -100 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 8 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_8)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_8 (M1000C328)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_9">
    <formula>CELLRES.RTWP_CLASS_9</formula>
    <kpi_info>
      <title>RTWP_CLASS_9 (M1000C329)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 9 range (-100 dBm &lt;=RTWP&lt; -99 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 9 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_9)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_9 (M1000C329)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_10">
    <formula>CELLRES.RTWP_CLASS_10</formula>
    <kpi_info>
      <title>RTWP_CLASS_10 (M1000C330)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 10 range (-99 dBm &lt;=RTWP&lt; -98 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 10 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_10)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_10 (M1000C330)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_11">
    <formula>CELLRES.RTWP_CLASS_11</formula>
    <kpi_info>
      <title>RTWP_CLASS_11 (M1000C331)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 11 range (-98 dBm &lt;=RTWP&lt; -96 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 11 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_11)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_11 (M1000C331)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_12">
    <formula>CELLRES.RTWP_CLASS_12</formula>
    <kpi_info>
      <title>RTWP_CLASS_12 (M1000C332)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 12 range (-96 dBm &lt;=RTWP&lt; -94 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 12 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_12)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_12 (M1000C332)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_13">
    <formula>CELLRES.RTWP_CLASS_13</formula>
    <kpi_info>
      <title>RTWP_CLASS_13 (M1000C333)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 13 range (-94 dBm &lt;=RTWP&lt; -92 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 13 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_13)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_13 (M1000C333)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_14">
    <formula>CELLRES.RTWP_CLASS_14</formula>
    <kpi_info>
      <title>RTWP_CLASS_14 (M1000C334)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 14 range (-92 dBm &lt;=RTWP&lt; -89 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 14 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_14)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_14 (M1000C334)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_15">
    <formula>CELLRES.RTWP_CLASS_15</formula>
    <kpi_info>
      <title>RTWP_CLASS_15 (M1000C335)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 15 range (-89 dBm &lt;=RTWP&lt; -86 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 15 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_15)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_15 (M1000C335)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_16">
    <formula>CELLRES.RTWP_CLASS_16</formula>
    <kpi_info>
      <title>RTWP_CLASS_16 (M1000C336)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 16 range (-86 dBm &lt;=RTWP&lt; -83 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 16 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_16)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_16 (M1000C336)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_17">
    <formula>CELLRES.RTWP_CLASS_17</formula>
    <kpi_info>
      <title>RTWP_CLASS_17 (M1000C337)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 17 range (-83 dBm &lt;=RTWP&lt; -80 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 17 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_17)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_17 (M1000C337)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_18">
    <formula>CELLRES.RTWP_CLASS_18</formula>
    <kpi_info>
      <title>RTWP_CLASS_18 (M1000C338)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 18 range (-80 dBm &lt;=RTWP&lt; -75 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 18 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_18)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_18 (M1000C338)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_19">
    <formula>CELLRES.RTWP_CLASS_19</formula>
    <kpi_info>
      <title>RTWP_CLASS_19 (M1000C339)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 19 range (-75 dBm &lt;=RTWP&lt; -70 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 19 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_19)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_19 (M1000C339)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_20">
    <formula>CELLRES.RTWP_CLASS_20</formula>
    <kpi_info>
      <title>RTWP_CLASS_20 (M1000C340)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 20 range (-70 dBm &lt;=RTWP&lt; -65 dBm). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 20 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_20)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_20 (M1000C340)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_CLASS_21">
    <formula>CELLRES.RTWP_CLASS_21</formula>
    <kpi_info>
      <title>RTWP_CLASS_21 (M1000C341)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is inside Class 21 range (-65 dBm &lt;= RTWP). Note: All the received power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is inside Class 21 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_CLASS_21)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_CLASS_21 (M1000C341)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_0">
    <formula>CELLRES.TX_CR_PWR_CLASS_0</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_0 (M1000C342)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 0 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 0 &lt;=TxCrPwr&lt;10 dBm; 10 km range:0&lt;=TxCrPwr&lt;10; 20 km range: 0&lt;=TxCrPwr&lt;10; 60 km range: 0&lt;=TxCrPwr&lt;15; 180 km range: 0&lt;=TxCrPwr&lt;15. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 0 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_0 (M1000C342)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_1">
    <formula>CELLRES.TX_CR_PWR_CLASS_1</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_1 (M1000C343)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 1 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 10 &lt;=TxCrPwr&lt;14 dBm; 10 km range: 10&lt;=TxCrPwr&lt;14; 20 km range: 10&lt;=TxCrPwr&lt;15; 60 km range: 15&lt;=TxCrPwr&lt;20; 180 km range: 15&lt;=TxCrPwr&lt;20. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 1 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_1 (M1000C343)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_2">
    <formula>CELLRES.TX_CR_PWR_CLASS_2</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_2 (M1000C344)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 2 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 14 &lt;=TxCrPwr&lt;18 dBm; 10 km range: 14&lt;=TxCrPwr&lt;18; 20 km range: 15&lt;=TxCrPwr&lt;20; 60 km range: 20&lt;=TxCrPwr&lt;25; 180 km range: 20&lt;=TxCrPwr&lt;25. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 2 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_2 (M1000C344)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_3">
    <formula>CELLRES.TX_CR_PWR_CLASS_3</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_3 (M1000C345)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 3 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 18 &lt;=TxCrPwr&lt;22 dBm; 10 km range: 18&lt;=TxCrPwr&lt;22; 20 km range: 20&lt;=TxCrPwr&lt;24; 60 km range: 25&lt;=TxCrPwr&lt;29; 180 km range: 25&lt;=TxCrPwr&lt;29. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 3 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_3 (M1000C345)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_4">
    <formula>CELLRES.TX_CR_PWR_CLASS_4</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_4 (M1000C346)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 4 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 22 &lt;=TxCrPwr&lt;25 dBm; 10 km range: 22&lt;=TxCrPwr&lt;26; 20 km range: 24&lt;=TxCrPwr&lt;28; 60 km range: 29&lt;=TxCrPwr&lt;32; 180 km range: 29&lt;=TxCrPwr&lt;33. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 4 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_4 (M1000C346)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_5">
    <formula>CELLRES.TX_CR_PWR_CLASS_5</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_5 (M1000C347)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 5 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 25 &lt;=TxCrPwr&lt;28 dBm; 10 km range: 26&lt;=TxCrPwr&lt;29; 20 km range: 28&lt;=TxCrPwr&lt;32; 60 km range: 32&lt;=TxCrPwr&lt;35; 180 km range: 33&lt;=TxCrPwr&lt;37. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 5 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_5)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_5 (M1000C347)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_6">
    <formula>CELLRES.TX_CR_PWR_CLASS_6</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_6 (M1000C348)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 6 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 28 &lt;=TxCrPwr&lt;31 dBm; 10 km range: 29&lt;=TxCrPwr&lt;32; 20 km range: 32&lt;=TxCrPwr&lt;35; 60 km range: 35&lt;=TxCrPwr&lt;38; 180 km range: 37&lt;=TxCrPwr&lt;40. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 6 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_6 (M1000C348)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_7">
    <formula>CELLRES.TX_CR_PWR_CLASS_7</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_7 (M1000C349)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 7 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 31 &lt;=TxCrPwr&lt;34 dBm; 10 km range: 32&lt;=TxCrPwr&lt;35; 20 km range: 35&lt;=TxCrPwr&lt;38; 60 km range: 38&lt;=TxCrPwr&lt;41; 180 km range: 40&lt;=TxCrPwr&lt;43. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 7 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_7)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_7 (M1000C349)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_8">
    <formula>CELLRES.TX_CR_PWR_CLASS_8</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_8 (M1000C350)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 8 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 34 &lt;=TxCrPwr&lt;36 dBm; 10 km range: 35&lt;=TxCrPwr&lt;38; 20 km range: 38&lt;=TxCrPwr&lt;40; 60 km range: 41&lt;=TxCrPwr&lt;43; 180 km range: 43&lt;=TxCrPwr&lt;45. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 8 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_8)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_8 (M1000C350)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_9">
    <formula>CELLRES.TX_CR_PWR_CLASS_9</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_9 (M1000C351)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 9 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 36 &lt;=TxCrPwr&lt;38 dBm; 10 km range: 38&lt;=TxCrPwr&lt;40; 20 km range: 40&lt;=TxCrPwr&lt;42; 60 km range: 43&lt;=TxCrPwr&lt;45; 180 km range: 45&lt;=TxCrPwr&lt;47. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 9 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_9)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_9 (M1000C351)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CR_PWR_CLASS_10">
    <formula>CELLRES.TX_CR_PWR_CLASS_10</formula>
    <kpi_info>
      <title>TX_CR_PWR_CLASS_10 (M1000C352)</title>
      <use>The number of Transmitted Carrier Power (TxCrPwr) measurement report samples in which the power value is inside Class 10 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 38 dBm&lt;=TxCrPwr; 10 km range: 40 dBm&lt;=TxCrPwr; 20 km range: 42 dBm&lt;=TxCrPwr; 60 km range: 45 dBm&lt;=TxCrPwr; 180 km range: 47 dBm&lt;=TxCrPwr. Note: All the transmitted power is taken into account, not just Rel99. UPDATED: This counter is updated periodically according to the RNC internal timer whose period is defined by parameter WBTS-&gt;RRIndPeriod. When the timer expires, the Transmitted Carrier Power value is calculated based on the information of the latest received power value in an NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported Transmitted Carrier Power value is inside Class 10 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CR_PWR_CLASS_10)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CR_PWR_CLASS_10 (M1000C352)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CODE_PWR_CLASS_0">
    <formula>CELLRES.TX_CODE_PWR_CLASS_0</formula>
    <kpi_info>
      <title>TX_CODE_PWR_CLASS_0 (M1000C353)</title>
      <use>The number of received Dedicated Measurement Reports received from WBTS in which the Transmitted Code Power (TxCdPwr) value is inside the Class 0 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 0&lt;=TxCdPwr&lt;5 dBm; 10 km range: 0&lt;=TxCdPwr&lt;5 dBm; 20 km range: 0&lt;=TxCdPwr&lt;5 dBm; 60 km range: 0&lt;=TxCdPwr&lt;5 dBm; 180 km range: 0&lt;=TxCdPwr&lt;6 dBm. UPDATED: When an NBAP: DEDICATED MEASUREMENT REPORT message is received from the WBTS and the reported Transmitted Code Power value is inside Class 0 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CODE_PWR_CLASS_0)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CODE_PWR_CLASS_0 (M1000C353)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CODE_PWR_CLASS_1">
    <formula>CELLRES.TX_CODE_PWR_CLASS_1</formula>
    <kpi_info>
      <title>TX_CODE_PWR_CLASS_1 (M1000C354)</title>
      <use>The number of received Dedicated Measurement Reports received from WBTS in which the Transmitted Code Power (TxCdPwr) value is inside the Class 1 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 5&lt;=TxCdPwr&lt;10 dBm; 10 km range: 5&lt;=TxCdPwr&lt;10 dBm; 20 km range: 5&lt;=TxCdPwr&lt;10 dBm; 60 km range: 5&lt;=TxCdPwr&lt;10 dBm; 180 km range: 6&lt;=TxCdPwr&lt;12 dBm. UPDATED: When an NBAP: DEDICATED MEASUREMENT REPORT message is received from the WBTS and the reported Transmitted Code Power value is inside Class 1 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CODE_PWR_CLASS_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CODE_PWR_CLASS_1 (M1000C354)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CODE_PWR_CLASS_2">
    <formula>CELLRES.TX_CODE_PWR_CLASS_2</formula>
    <kpi_info>
      <title>TX_CODE_PWR_CLASS_2 (M1000C355)</title>
      <use>The number of received Dedicated Measurement Reports received from WBTS in which the Transmitted Code Power (TxCdPwr) value is inside the Class 2 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 10&lt;=TxCdPwr&lt;15 dBm; 10 km range: 10&lt;=TxCdPwr&lt;15 dBm; 20 km range: 10&lt;=TxCdPwr&lt;15 dBm; 60 km range: 10&lt;=TxCdPwr&lt;15 dBm; 180 km range: 12&lt;=TxCdPwr&lt;17 dBm. UPDATED: When an NBAP: DEDICATED MEASUREMENT REPORT message is received from the WBTS and the reported Transmitted Code Power value is inside Class 2 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CODE_PWR_CLASS_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CODE_PWR_CLASS_2 (M1000C355)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CODE_PWR_CLASS_3">
    <formula>CELLRES.TX_CODE_PWR_CLASS_3</formula>
    <kpi_info>
      <title>TX_CODE_PWR_CLASS_3 (M1000C356)</title>
      <use>The number of received Dedicated Measurement Reports received from WBTS in which the Transmitted Code Power (TxCdPwr) value is inside the Class 3 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 15&lt;=TxCdPwr&lt;19 dBm; 10 km range: 15&lt;=TxCdPwr&lt;19 dBm; 20 km range: 15&lt;=TxCdPwr&lt;20 dBm; 60 km range: 15&lt;=TxCdPwr&lt;20 dBm; 180 km range: 17&lt;=TxCdPwr&lt;22 dBm. UPDATED: When an NBAP: DEDICATED MEASUREMENT REPORT message is received from the WBTS and the reported Transmitted Code Power value is inside Class 3 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CODE_PWR_CLASS_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CODE_PWR_CLASS_3 (M1000C356)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CODE_PWR_CLASS_4">
    <formula>CELLRES.TX_CODE_PWR_CLASS_4</formula>
    <kpi_info>
      <title>TX_CODE_PWR_CLASS_4 (M1000C357)</title>
      <use>The number of received Dedicated Measurement Reports received from WBTS in which the Transmitted Code Power (TxCdPwr) value is inside the Class 4 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 19&lt;=TxCdPwr&lt;23 dBm; 10 km range: 19&lt;=TxCdPwr&lt;23 dBm; 20 km range: 20&lt;=TxCdPwr&lt;24 dBm; 60 km range: 20&lt;=TxCdPwr&lt;25 dBm; 180 km range: 22&lt;=TxCdPwr&lt;27 dBm. UPDATED: When an NBAP: DEDICATED MEASUREMENT REPORT message is received from the WBTS and the reported Transmitted Code Power value is inside Class 4 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CODE_PWR_CLASS_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CODE_PWR_CLASS_4 (M1000C357)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CODE_PWR_CLASS_5">
    <formula>CELLRES.TX_CODE_PWR_CLASS_5</formula>
    <kpi_info>
      <title>TX_CODE_PWR_CLASS_5 (M1000C358)</title>
      <use>The number of received Dedicated Measurement Reports received from WBTS in which the Transmitted Code Power (TxCdPwr) value is inside the Class 5 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 23&lt;=TxCdPwr&lt;27 dBm; 10 km range: 23&lt;=TxCdPwr&lt;27 dBm; 20 km range: 24&lt;=TxCdPwr&lt;28 dBm; 60 km range: 25&lt;=TxCdPwr&lt;30 dBm; 180 km range: 27&lt;=TxCdPwr&lt;32 dBm. UPDATED: When an NBAP: DEDICATED MEASUREMENT REPORT message is received from the WBTS and the reported Transmitted Code Power value is inside Class 5 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CODE_PWR_CLASS_5)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CODE_PWR_CLASS_5 (M1000C358)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CODE_PWR_CLASS_6">
    <formula>CELLRES.TX_CODE_PWR_CLASS_6</formula>
    <kpi_info>
      <title>TX_CODE_PWR_CLASS_6 (M1000C359)</title>
      <use>The number of received Dedicated Measurement Reports received from WBTS in which the Transmitted Code Power (TxCdPwr) value is inside the Class 6 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 27&lt;=TxCdPwr&lt;30 dBm; 10 km range: 27&lt;=TxCdPwr&lt;31 dBm; 20 km range: 28&lt;=TxCdPwr&lt;32 dBm; 60 km range: 30&lt;=TxCdPwr&lt;34 dBm; 180 km range: 32&lt;=TxCdPwr&lt;36 dBm. UPDATED: When an NBAP: DEDICATED MEASUREMENT REPORT message is received from the WBTS and the reported Transmitted Code Power value is inside Class 6 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CODE_PWR_CLASS_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CODE_PWR_CLASS_6 (M1000C359)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CODE_PWR_CLASS_7">
    <formula>CELLRES.TX_CODE_PWR_CLASS_7</formula>
    <kpi_info>
      <title>TX_CODE_PWR_CLASS_7 (M1000C360)</title>
      <use>The number of received Dedicated Measurement Reports received from WBTS in which the Transmitted Code Power (TxCdPwr) value is inside the Class 7 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 30&lt;=TxCdPwr&lt;33 dBm; 10 km range: 31&lt;=TxCdPwr&lt;35 dBm; 20 km range: 32&lt;=TxCdPwr&lt;36 dBm; 60 km range: 34&lt;=TxCdPwr&lt;38 dBm; 180 km range: 36&lt;=TxCdPwr&lt;40 dBm. UPDATED: When an NBAP: DEDICATED MEASUREMENT REPORT message is received from the WBTS and the reported Transmitted Code Power value is inside Class 7 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CODE_PWR_CLASS_7)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CODE_PWR_CLASS_7 (M1000C360)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CODE_PWR_CLASS_8">
    <formula>CELLRES.TX_CODE_PWR_CLASS_8</formula>
    <kpi_info>
      <title>TX_CODE_PWR_CLASS_8 (M1000C361)</title>
      <use>The number of received Dedicated Measurement Reports received from WBTS in which the Transmitted Code Power (TxCdPwr) value is inside the Class 8 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 33&lt;=TxCdPwr&lt;36 dBm; 10 km range: 35&lt;=TxCdPwr&lt;38 dBm; 20 km range: 36&lt;=TxCdPwr&lt;40 dBm; 60 km range: 38&lt;=TxCdPwr&lt;42 dBm; 180 km range: 40&lt;=TxCdPwr&lt;44 dBm. UPDATED: When an NBAP: DEDICATED MEASUREMENT REPORT message is received from the WBTS and the reported Transmitted Code Power value is inside Class 8 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CODE_PWR_CLASS_8)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CODE_PWR_CLASS_8 (M1000C361)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="TX_CODE_PWR_CLASS_9">
    <formula>CELLRES.TX_CODE_PWR_CLASS_9</formula>
    <kpi_info>
      <title>TX_CODE_PWR_CLASS_9 (M1000C362)</title>
      <use>The number of received Dedicated Measurement Reports received from WBTS in which the Transmitted Code Power (TxCdPwr) value is inside the Class 9 range. The mapping to power value depends on WCEL parameter PRACHDelayRange setting (5 km range): 36 dBm&lt;=TxCdPwr; 10 km range: 38 dBm&lt;=TxCdPwr; 20 km range: 40 dBm&lt;=TxCdPwr; 60 km range: 42 dBm&lt;=TxCdPwr; 180 km range: 44 dBm&lt;=TxCdPwr. UPDATED: When an NBAP: DEDICATED MEASUREMENT REPORT message is received from the WBTS and the reported Transmitted Code Power value is inside Class 9 range.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(TX_CODE_PWR_CLASS_9)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>TX_CODE_PWR_CLASS_9 (M1000C362)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_17_OR_18">
    <formula>CELLRES.DURA_HSDPA_USERS_17_OR_18</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_17_OR_18 (M1000C363)</title>
      <use>This counter indicates the amount of time that 17 or 18 active HSDPA users are simultaneously allocated during the measurement period. Also counter M1000C240 is updated along with this counter. UPDATED:The counter is updated by one at one-second intervals if there are 17 or 18 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_17_OR_18)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_17_OR_18 (M1000C363)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_65_TO_72">
    <formula>CELLRES.DURA_HSDPA_USERS_65_TO_72</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_65_TO_72 (M1000C364)</title>
      <use>This counter indicates the amount of time that 65 to 72 active HSDPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 65 to 72 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_65_TO_72)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_65_TO_72 (M1000C364)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_21_TO_24">
    <formula>CELLRES.DURA_HSUPA_USERS_21_TO_24</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_21_TO_24 (M1000C365)</title>
      <use>This counter indicates the amount of time that 21 to 24 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 21 to 24 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_21_TO_24)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_21_TO_24 (M1000C365)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_25_TO_28">
    <formula>CELLRES.DURA_HSUPA_USERS_25_TO_28</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_25_TO_28 (M1000C366)</title>
      <use>This counter indicates the amount of time that 25 to 28 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 25 to 28 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_25_TO_28)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_25_TO_28 (M1000C366)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_29_TO_32">
    <formula>CELLRES.DURA_HSUPA_USERS_29_TO_32</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_29_TO_32 (M1000C367)</title>
      <use>This counter indicates the amount of time that 29 to 32 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 29 to 32 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_29_TO_32)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_29_TO_32 (M1000C367)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_33_TO_36">
    <formula>CELLRES.DURA_HSUPA_USERS_33_TO_36</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_33_TO_36 (M1000C368)</title>
      <use>This counter indicates the amount of time that 33 to 36 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 33 to 36 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_33_TO_36)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_33_TO_36 (M1000C368)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_37_TO_40">
    <formula>CELLRES.DURA_HSUPA_USERS_37_TO_40</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_37_TO_40 (M1000C369)</title>
      <use>This counter indicates the amount of time that 37 to 40 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 37 to 40 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_37_TO_40)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_37_TO_40 (M1000C369)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_41_TO_44">
    <formula>CELLRES.DURA_HSUPA_USERS_41_TO_44</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_41_TO_44 (M1000C370)</title>
      <use>This counter indicates the amount of time that 41 to 44 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 41 to 44 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_41_TO_44)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_41_TO_44 (M1000C370)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_45_TO_48">
    <formula>CELLRES.DURA_HSUPA_USERS_45_TO_48</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_45_TO_48 (M1000C371)</title>
      <use>This counter indicates the amount of time that 45 to 48 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 45 to 48 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_45_TO_48)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_45_TO_48 (M1000C371)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_49_TO_52">
    <formula>CELLRES.DURA_HSUPA_USERS_49_TO_52</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_49_TO_52 (M1000C372)</title>
      <use>This counter indicates the amount of time that 49 to 52 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 49 to 52 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_49_TO_52)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_49_TO_52 (M1000C372)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_53_TO_56">
    <formula>CELLRES.DURA_HSUPA_USERS_53_TO_56</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_53_TO_56 (M1000C373)</title>
      <use>This counter indicates the amount of time that 53 to 56 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 53 to 56 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_53_TO_56)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_53_TO_56 (M1000C373)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_57_TO_60">
    <formula>CELLRES.DURA_HSUPA_USERS_57_TO_60</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_57_TO_60 (M1000C374)</title>
      <use>This counter indicates the amount of time that 57 to 60 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 57 to 60 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_57_TO_60)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_57_TO_60 (M1000C374)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_61_TO_64">
    <formula>CELLRES.DURA_HSUPA_USERS_61_TO_64</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_61_TO_64 (M1000C375)</title>
      <use>This counter indicates the amount of time that 61 to 64 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 61 to 64 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_61_TO_64)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_61_TO_64 (M1000C375)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_65_TO_72">
    <formula>CELLRES.DURA_HSUPA_USERS_65_TO_72</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_65_TO_72 (M1000C376)</title>
      <use>This counter indicates the amount of time that 65 to 72 active HSUPA users are simultaneously allocated during the measurement period. UPDATED:The counter is updated by one at one-second intervals if there are 65 to 72 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_65_TO_72)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_65_TO_72 (M1000C376)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="WCELL_POWER_SAVING_MODE_ACT">
    <formula>CELLRES.WCELL_POWER_SAVING_MODE_ACT</formula>
    <kpi_info>
      <title>WCELL_POWER_SAVING_MODE_ACT (M1000C377)</title>
      <use>The number of cell power saving mode activations. UPDATED:Updated when a WCEL enters the power saving mode, i.e., when the RNC receives NBAP: CELL DELETION RESPONSE from the BTS due to power save mode activation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(WCELL_POWER_SAVING_MODE_ACT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>WCELL_POWER_SAVING_MODE_ACT (M1000C377)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVAIL_WCELL_IN_POWER_SAVING">
    <formula>CELLRES.AVAIL_WCELL_IN_POWER_SAVING</formula>
    <kpi_info>
      <title>AVAIL_WCELL_IN_POWER_SAVING (M1000C378)</title>
      <use>The number of samples when WCEL is in power saving mode. Counters M1000C178 and M1000C180 are always updated along with this counter. UPDATED:The counter is updated with the value 1 once in approximately 5 seconds when the WCEL is in power saving mode state. It must be noted that due to limited timing accuracy the amount of samples per measurement interval does not always match with the nominal sampling rate. For example during 60 minute measurement interval there may be 719 samples instead of the nominal amount of 720 samples.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(AVAIL_WCELL_IN_POWER_SAVING)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVAIL_WCELL_IN_POWER_SAVING (M1000C378)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_DOWNGR_DUE_PBS_INTERF_UL">
    <formula>CELLRES.RB_DOWNGR_DUE_PBS_INTERF_UL</formula>
    <kpi_info>
      <title>RB_DOWNGR_DUE_PBS_INTERF_UL (M1000C379)</title>
      <use>The number of RB downgrades by priority-based scheduling (PBS) due to uplink interference reason. Also M1000C147 is updated along with this counter. UPDATED:When the radio bearer is successfully downgraded.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_DOWNGR_DUE_PBS_INTERF_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_DOWNGR_DUE_PBS_INTERF_UL (M1000C379)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_RELEASE_DUE_PBS_INTERF_UL">
    <formula>CELLRES.RB_RELEASE_DUE_PBS_INTERF_UL</formula>
    <kpi_info>
      <title>RB_RELEASE_DUE_PBS_INTERF_UL (M1000C380)</title>
      <use>The number of released radio bearers by priority-based scheduling (PBS) due to uplink interference reason. Also M1000C159 is updated along with this counter. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_RELEASE_DUE_PBS_INTERF_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_RELEASE_DUE_PBS_INTERF_UL (M1000C380)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RB_REL_DUE_PRE_EMP_INTF_UL">
    <formula>CELLRES.RB_REL_DUE_PRE_EMP_INTF_UL</formula>
    <kpi_info>
      <title>RB_REL_DUE_PRE_EMP_INTF_UL (M1000C381)</title>
      <use>The number of released radio bearers by pre-emption due to uplink interference congestion reason. Also M1000C164 is updated along with this counter. UPDATED:When the radio bearer is successfully released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RB_REL_DUE_PRE_EMP_INTF_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RB_REL_DUE_PRE_EMP_INTF_UL (M1000C381)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="AVE_RESID_UL_POWER">
    <formula>CELLRES.AVE_RESID_UL_POWER</formula>
    <kpi_info>
      <title>AVE_RESID_UL_POWER (M1000C382)</title>
      <use>The average residual received total wideband power value during the measurement period. The residual power is the received total power where part of the interference caused by HSUPA users is removed from the original signal power. UPDATED: This counter is updated periodically according to RNC internal timer whose period is RRIndPeriod. When the timer expires, the latest residual stream power received from the BTS is updated to the counter without window based averaging.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>ROUND(DECODE(NVL(SUM(RESID_UL_POWER_SAMPLES),0),0,0,10*LOG(10,(SUM(RESID_UL_POWER_SAMPLES*(POWER(10,(AVE_RESID_UL_POWER/10))/1000))/SUM(RESID_UL_POWER_SAMPLES))*1000)),3)</formula>
      <unit>dBm</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>AVE_RESID_UL_POWER (M1000C382)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RESID_UL_POWER_SAMPLES">
    <formula>CELLRES.RESID_UL_POWER_SAMPLES</formula>
    <kpi_info>
      <title>RESID_UL_POWER_SAMPLES (M1000C383)</title>
      <use>The number of samples for the residual uplink power measurement. UPDATED: Incremented by value 1 when the residual power value is updated to counter M1000C382.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RESID_UL_POWER_SAMPLES)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RESID_UL_POWER_SAMPLES (M1000C383)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_73_TO_80">
    <formula>CELLRES.DURA_HSUPA_USERS_73_TO_80</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_73_TO_80 (M1000C384)</title>
      <use>The counter indicates the amount of time that 73 to 80 active HSUPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 73 to 80 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_73_TO_80)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_73_TO_80 (M1000C384)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_81_TO_96">
    <formula>CELLRES.DURA_HSUPA_USERS_81_TO_96</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_81_TO_96 (M1000C385)</title>
      <use>The counter indicates the amount of time that 81 to 96 active HSUPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 81 to 96 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_81_TO_96)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_81_TO_96 (M1000C385)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_97_TO_112">
    <formula>CELLRES.DURA_HSUPA_USERS_97_TO_112</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_97_TO_112 (M1000C386)</title>
      <use>The counter indicates the amount of time that 97 to 112 active HSUPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 97 to 112 HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_97_TO_112)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_97_TO_112 (M1000C386)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSUPA_USERS_113_OR_MORE">
    <formula>CELLRES.DURA_HSUPA_USERS_113_OR_MORE</formula>
    <kpi_info>
      <title>DURA_HSUPA_USERS_113_OR_MORE (M1000C387)</title>
      <use>The counter indicates the amount of time that 113 or more active HSUPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 113 or more HSUPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSUPA_USERS_113_OR_MORE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSUPA_USERS_113_OR_MORE (M1000C387)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MAX_HSUPA_USERS_IN_SERV_CELL">
    <formula>CELLRES.MAX_HSUPA_USERS_IN_SERV_CELL</formula>
    <kpi_info>
      <title>MAX_HSUPA_USERS_IN_SERV_CELL (M1000C388)</title>
      <use>The maximum number of simultaneous HSUPA users in serving E-DCH cell. UPDATED: The number of HSUPA users is sampled with one-second interval. Only serving E-DCH radio links are counted.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(MAX_HSUPA_USERS_IN_SERV_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MAX_HSUPA_USERS_IN_SERV_CELL (M1000C388)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUM_HSUPA_USERS_IN_SERV_CELL">
    <formula>CELLRES.SUM_HSUPA_USERS_IN_SERV_CELL</formula>
    <kpi_info>
      <title>SUM_HSUPA_USERS_IN_SERV_CELL (M1000C389)</title>
      <use>The sum of sampled values for measuring the number of simultaneous HSUPA users in serving E-DCH cell. The counter, divided by the denominator M1000C287, provides the average number of HSUPA users (E-DCH allocations) in the serving E-DCH cell. UPDATED: The number of HSUPA users is sampled with one-second interval. Only serving E-DCH radio links are counted.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUM_HSUPA_USERS_IN_SERV_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUM_HSUPA_USERS_IN_SERV_CELL (M1000C389)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_73_TO_80">
    <formula>CELLRES.DURA_HSDPA_USERS_73_TO_80</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_73_TO_80 (M1000C390)</title>
      <use>The counter indicates the amount of time that 73 to 80 active HSDPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 73 to 80 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_73_TO_80)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_73_TO_80 (M1000C390)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_81_TO_96">
    <formula>CELLRES.DURA_HSDPA_USERS_81_TO_96</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_81_TO_96 (M1000C391)</title>
      <use>The counter indicates the amount of time that 81 to 96 active HSDPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 81 to 96 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_81_TO_96)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_81_TO_96 (M1000C391)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_97_TO_112">
    <formula>CELLRES.DURA_HSDPA_USERS_97_TO_112</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_97_TO_112 (M1000C392)</title>
      <use>The counter indicates the amount of time that 97 to 112 active HSDPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 97 to 112 HSDPA users in the cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_97_TO_112)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_97_TO_112 (M1000C392)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DURA_HSDPA_USERS_113_OR_MORE">
    <formula>CELLRES.DURA_HSDPA_USERS_113_OR_MORE</formula>
    <kpi_info>
      <title>DURA_HSDPA_USERS_113_OR_MORE (M1000C393)</title>
      <use>The counter indicates the amount of time that 113 or more active HSDPA users are simultaneously allocated during the measurement period. UPDATED: The counter is updated by one at one-second intervals if there are 113 or more HSDPA users in the cell
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DURA_HSDPA_USERS_113_OR_MORE)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DURA_HSDPA_USERS_113_OR_MORE (M1000C393)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CELL_RESOURCE_SPARE_5">
    <formula>CELLRES.CELL_RESOURCE_SPARE_5</formula>
    <kpi_info>
      <title>CELL_RESOURCE_SPARE_5 (M1000C394)</title>
      <use>This is a spare counter for future purposes. UPDATED: Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CELL_RESOURCE_SPARE_5)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CELL_RESOURCE_SPARE_5 (M1000C394)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CELL_RESOURCE_SPARE_6">
    <formula>CELLRES.CELL_RESOURCE_SPARE_6</formula>
    <kpi_info>
      <title>CELL_RESOURCE_SPARE_6 (M1000C395)</title>
      <use>This is a spare counter for future purposes. UPDATED: Never.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CELL_RESOURCE_SPARE_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CELL_RESOURCE_SPARE_6 (M1000C395)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MAX_AVAIL_R99_DL_CODE">
    <formula>CELLRES.MAX_AVAIL_R99_DL_CODE</formula>
    <kpi_info>
      <title>MAX_AVAIL_R99_DL_CODE (M1000C396)</title>
      <use>The maximum amount of spreading codes that would be possible to allocate for Rel99 downlink users. The amount of codes is represented by SF256 level so for example one SF128 code contributes to the counter by value 2, and one SF64 code by value 4. This counter is used when calculating a KPI about the Rel99 DL code utilization per operator. The counter is relevant only if feature "RAN2412 Inter Circle Roaming" is enabled. The value remains zero if the feature is disabled. The amount of codes is calculated as: Total number of SF256 codes in the code tree) - (Reserved SF256 codes) Where: Total number of SF256 codes in the code tree = 256 Reserved SF256 codes = Sum of all the codes used by common channels, HSPA control channels, minimum number of HS-PDSCH codes, F-DPCH codes, codes used by Iur users and codes used by SRB on DCH for which IMSI is not known. Minimum number of HS-PDSCH codes is lowest value in the HSPDSCHCodeSet parameter.UPDATED: The code utilization is sampled with 1-second intervals.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(MAX_AVAIL_R99_DL_CODE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MAX_AVAIL_R99_DL_CODE (M1000C396)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CHAN_CODE_SF16_HS_REQUEST">
    <formula>CELLRES.CHAN_CODE_SF16_HS_REQUEST</formula>
    <kpi_info>
      <title>CHAN_CODE_SF16_HS_REQUEST (M1000C397)</title>
      <use>The counter indicates the number of times that the channelisation code for SF16 for HS-DSCH use has been requested for. UPDATED: The counter is updated by one when the channelisation code for SF16 is requested for HS-DSCH use. Also M1000C261 is updated along with this counter.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CHAN_CODE_SF16_HS_REQUEST)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CHAN_CODE_SF16_HS_REQUEST (M1000C397)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RTWP_TOO_LOW">
    <formula>CELLRES.RTWP_TOO_LOW</formula>
    <kpi_info>
      <title>RTWP_TOO_LOW (M1000C398)</title>
      <use>The number of total uplink power (RTWP) measurement report samples in which the power value is less than -110 dBm. This counter can be used to detect possible antenna line failures. UPDATED: This counter is updated periodically according to the RNC internal timer whose period with WBTS is RRIndPeriod and with NBxxx the period is min(PrxTotalReportPeriod, PtxTotalPeriod). When the timer expires, the RTWP value is calculated based on the information of the latest received power value in an NBAP: COMMON MEASUREMENT REPORT or NBAP-PRIVATE: RADIO RESOURCE MEASUREMENT REPORT sent by the BTS, and the reported RTWP value is less than -110 dBm.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RTWP_TOO_LOW)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RTWP_TOO_LOW (M1000C398)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="BMC_DATA_REQUEST">
    <formula>CELLRES.BMC_DATA_REQUEST</formula>
    <kpi_info>
      <title>BMC_DATA_REQUEST (M1000C399)</title>
      <use>The number of requests to broadcast BMC messages in a cell. UPDATED: When the cell specific BMC entity receives a request to start broadcasting a message.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(BMC_DATA_REQUEST)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>BMC_DATA_REQUEST (M1000C399)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="BMC_DATA_INDICATION">
    <formula>CELLRES.BMC_DATA_INDICATION</formula>
    <kpi_info>
      <title>BMC_DATA_INDICATION (M1000C400)</title>
      <use>The number of acknowledgements from cell specific BMC entity as a response for broadcast request. UPDATED: When the cell specific BMC entity acknowledges broadcast request.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(BMC_DATA_INDICATION)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>BMC_DATA_INDICATION (M1000C400)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="BMC_DATA_CONFIRMATION">
    <formula>CELLRES.BMC_DATA_CONFIRMATION</formula>
    <kpi_info>
      <title>BMC_DATA_CONFIRMATION (M1000C401)</title>
      <use>The number of BMC message scheduling complete indications from the cell specific BMC entity. UPDATED: When the cell specific BMC entity has completed the broadcasting of a message.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(BMC_DATA_CONFIRMATION)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>BMC_DATA_CONFIRMATION (M1000C401)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CTCH_BLK_SCHEDULED">
    <formula>CELLRES.CTCH_BLK_SCHEDULED</formula>
    <kpi_info>
      <title>CTCH_BLK_SCHEDULED (M1000C402)</title>
      <use>The number of CTCH blocks containing cell broadcast data scheduled for transmission over Iub. UPDATED: When CTCH transport block containing cell broadcast data is scheduled to FACH-s buffer.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CTCH_BLK_SCHEDULED)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CTCH_BLK_SCHEDULED (M1000C402)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CTCH_BLK_FACH_DISCARD">
    <formula>CELLRES.CTCH_BLK_FACH_DISCARD</formula>
    <kpi_info>
      <title>CTCH_BLK_FACH_DISCARD (M1000C403)</title>
      <use>The number of CTCH blocks containing cell broadcast data that could not be transmitted over IuB due to FACH discard. UPDATED: When CTCH transport block containing cell broadcast data cannot be scheduled to FACH-s buffer.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CTCH_BLK_FACH_DISCARD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CTCH_BLK_FACH_DISCARD (M1000C403)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_RESTR_ACTIVE_SAMPLES">
    <formula>CELLRES.ACCESS_RESTR_ACTIVE_SAMPLES</formula>
    <kpi_info>
      <title>ACCESS_RESTR_ACTIVE_SAMPLES (M1000C404)</title>
      <use>The number of samples when access class restriction is active. UPDATED: The counter is incremented by value 1 when at least one access class is found as blocked during the 30 second periodic checking cycle.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_RESTR_ACTIVE_SAMPLES)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_RESTR_ACTIVE_SAMPLES (M1000C404)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_CLASSES_BLOCKED">
    <formula>CELLRES.ACCESS_CLASSES_BLOCKED</formula>
    <kpi_info>
      <title>ACCESS_CLASSES_BLOCKED (M1000C405)</title>
      <use>The number of access classes blocked due to access class restriction functionality. This counter divided by M1000C404 provides the average number of blocked access classes calculated over time when restriction has been active. UPDATED: The counter is incremented by the number of access classes found as blocked during the 30 second periodic checking cycle. If for example two classes are blocked for three minutes duration, the counter gets value 12 because there are 6 samples during three minutes.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_CLASSES_BLOCKED)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_CLASSES_BLOCKED (M1000C405)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MEH_ACTIVE_DURATION">
    <formula>CELLRES.MEH_ACTIVE_DURATION</formula>
    <kpi_info>
      <title>MEH_ACTIVE_DURATION (M1000C406)</title>
      <use>The duration of Mass Event Handler load state being active in a cell. This state means that the length of NRT scheduling queue has exceeded a threshold defined by WCEL-MEHQueueThreshold and WCEL-MEHLoadStateTtT. In this state, longer Traffic Volume Pending time, temporary maximum bitrate for UL DCH, and temporarily limited maximum number of HSUPA users may be active depending on what functions are enabled with parameter WCEL-MassEventHandler. The impact of MEH activation can be checked with M1006C301, M1002C685 and M1002C686.UPDATED: The state of Mass Event Handler is sampled once per second and if the state is active, the counter is incremented by value 1.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(MEH_ACTIVE_DURATION)</formula>
      <unit>Seconds</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MEH_ACTIVE_DURATION (M1000C406)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="MEH_ACTIVATIONS">
    <formula>CELLRES.MEH_ACTIVATIONS</formula>
    <kpi_info>
      <title>MEH_ACTIVATIONS (M1000C407)</title>
      <use>The number of times when Mass Event Handler load state is activated in a cell. This state means that the length of NRT scheduling queue has exceeded a threshold defined by WCEL-MEHQueueThreshold and WCEL-MEHLoadStateTtT. In this state, longer Traffic Volume Pending time, temporary maximum bitrate for UL DCH, and temporarily limited maximum number of HSUPA users may be active depending on what functions are enabled with parameter WCEL-MassEventHandler. The impact of MEH activation can be checked with M1006C301, M1002C685 and M1002C686. UPDATED: This counter is updated when the state of Mass Event Handler restriction changes from inactive to active.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(MEH_ACTIVATIONS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MEH_ACTIVATIONS (M1000C407)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_RESTR_ACT_BTS_SAMPLES">
    <formula>CELLRES.ACCESS_RESTR_ACT_BTS_SAMPLES</formula>
    <kpi_info>
      <title>ACCESS_RESTR_ACT_BTS_SAMPLES (M1000C408)</title>
      <use>The number of samples when access class restriction is active with BTS overload detected. This counter does not indicate that the final access class restriction decision was done based on BTS overload alone, but as well admission control overload could have existed. Also M1000C404 is updated along with this counter, as it indicates the total time when access class restriction has been active. UPDATED: The counter is incremented by value 1 when at least one access class is found as blocked during the 30 second periodic checking cycle, and during that time BTS overload was detected.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_RESTR_ACT_BTS_SAMPLES)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_RESTR_ACT_BTS_SAMPLES (M1000C408)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="period_duration_sum">
    <formula>CELLRES.period_duration_sum</formula>
    <kpi_info>
      <title>period_duration_sum (period_duration_sum)</title>
      <use>
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(period_duration_sum)</formula>
      <unit>min</unit>
      <tables>nokrww_ps_cellres_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>period_duration_sum (period_duration_sum)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
</conf_file>
