<?xml version="1.0" encoding="UTF-8"?>
<conf_file>
  <info>
    <release number="jflx"/>
    <dst/>
    <implementation/>
    <min_obj_agg/>
    <maxrows>100</maxrows>
    <header>SERVLEV (Service Level)</header>
    <csv_title>SERVLEV (Service Level)</csv_title>
    <report-description>Service Level</report-description>
    <obj_number>20</obj_number>
    <csv_rule>reuse</csv_rule>
    <addon_sorting/>
    <wrap_header>off</wrap_header>
    <help_file>about_kpi_help.htm</help_file>
    <nokia_counter_id_help_file/>
    <nokia_counter_db_help_file/>
    <external_kpi_help_file/>
  </info>
  <column_order>
    <period_duration/>
    <rrc_conn_stp_att/>
    <rrc_conn_stp_comp/>
    <rrc_conn_stp_fail_hc/>
    <rrc_conn_stp_fail_ac/>
    <rrc_conn_stp_fail_bts/>
    <rrc_conn_stp_fail_trans/>
    <rrc_conn_stp_fail_rnc/>
    <rrc_conn_stp_fail_frozbs/>
    <rrc_conn_acc_comp/>
    <rrc_conn_acc_fail_radio/>
    <rrc_conn_acc_fail_ms/>
    <rrc_conn_acc_fail_rnc/>
    <rrc_conn_act_comp/>
    <rrc_conn_act_rel_srnc/>
    <rrc_conn_act_rel_p_emp/>
    <rrc_conn_act_fail_iu/>
    <rrc_conn_act_fail_radio/>
    <rrc_conn_act_fail_bts/>
    <rrc_conn_act_fail_iur/>
    <rrc_conn_act_fail_ciph/>
    <rrc_conn_act_fail_i_chk/>
    <rrc_conn_act_fail_rnc/>
    <moc_conv_call_atts/>
    <moc_conv_call_fails/>
    <moc_strea_call_atts/>
    <moc_strea_call_fails/>
    <moc_inter_call_atts/>
    <moc_inter_call_fails/>
    <moc_backg_call_atts/>
    <moc_backg_call_fails/>
    <moc_subsc_traf_call_atts/>
    <moc_subsc_traf_call_fails/>
    <mtc_conv_call_atts/>
    <mtc_conv_call_fails/>
    <mtc_strea_call_atts/>
    <mtc_strea_call_fails/>
    <mtc_inter_call_atts/>
    <mtc_inter_call_fails/>
    <mtc_backg_call_atts/>
    <mtc_backg_call_fails/>
    <emergency_call_atts/>
    <emergency_call_fails/>
    <intr_rat_cell_re_sel_atts/>
    <intr_rat_cell_re_sel_fails/>
    <cell_chng_ord_atts/>
    <cell_chng_ord_fails/>
    <registration_atts/>
    <registration_fails/>
    <detach_atts/>
    <detach_fails/>
    <moc_high_prior_sign_atts/>
    <moc_high_prior_sign_fails/>
    <mtc_high_prior_sign_atts/>
    <mtc_high_prior_sign_fails/>
    <moc_low_prior_sign_atts/>
    <moc_low_prior_sign_fails/>
    <mtc_low_prior_sign_atts/>
    <mtc_low_prior_sign_fails/>
    <call_re_estab_atts/>
    <call_re_estab_fails/>
    <mtc_cause_unknown_atts/>
    <mtc_cause_unknown_fails/>
    <srnc_reloc_atts/>
    <srnc_reloc_fails/>
    <intra_freq_hho_atts/>
    <intra_freq_hho_fails/>
    <rab_stp_att_cs_voice/>
    <rab_stp_att_cs_conv/>
    <rab_stp_att_cs_strea/>
    <rab_stp_att_ps_conv/>
    <RAB_STP_ATT_PS_STREA/>
    <rab_stp_att_ps_inter/>
    <RAB_STP_ATT_PS_BACKG/>
    <rab_stp_comp_cs_voice/>
    <rab_stp_comp_cs_conv/>
    <RAB_STP_COMP_CS_STREA/>
    <rab_stp_comp_ps_conv/>
    <rab_stp_comp_ps_strea/>
    <rab_stp_comp_ps_inter/>
    <rab_stp_comp_ps_backg/>
    <rab_stp_fail_cs_voice_ac/>
    <rab_stp_fail_cs_voice_bts/>
    <rab_stp_fail_cs_voice_trans/>
    <rab_stp_fail_cs_voice_rnc/>
    <rab_stp_fail_cs_voice_frozbs/>
    <rab_stp_fail_cs_conv_ac/>
    <rab_stp_fail_cs_conv_bts/>
    <rab_stp_fail_cs_conv_trans/>
    <rab_stp_fail_cs_conv_rnc/>
    <rab_stp_fail_cs_conv_frozbs/>
    <rab_stp_fail_cs_strea_ac/>
    <rab_stp_fail_cs_strea_bts/>
    <rab_stp_fail_cs_strea_trans/>
    <rab_stp_fail_cs_strea_rnc/>
    <rab_stp_fail_cs_strea_frozbs/>
    <rab_stp_fail_ps_conv_ac/>
    <rab_stp_fail_ps_conv_bts/>
    <rab_stp_fail_ps_conv_trans/>
    <rab_stp_fail_ps_conv_rnc/>
    <rab_stp_fail_ps_conv_frozbs/>
    <rab_stp_fail_ps_strea_ac/>
    <rab_stp_fail_ps_strea_bts/>
    <rab_stp_fail_ps_strea_trans/>
    <rab_stp_fail_ps_strea_rnc/>
    <rab_stp_fail_ps_strea_frozbs/>
    <rab_stp_fail_ps_inter_ac/>
    <rab_stp_fail_ps_inter_trans/>
    <rab_stp_fail_ps_inter_rnc/>
    <rab_stp_fail_ps_inter_anch/>
    <rab_stp_fail_ps_inter_frozbs/>
    <rab_stp_fail_ps_backg_ac/>
    <rab_stp_fail_ps_backg_trans/>
    <rab_stp_fail_ps_backg_rnc/>
    <rab_stp_fail_ps_backg_anch/>
    <rab_stp_fail_ps_backg_frozbs/>
    <rab_acc_comp_cs_voice/>
    <rab_acc_comp_cs_conv/>
    <rab_acc_comp_cs_strea/>
    <rab_acc_comp_ps_conv/>
    <rab_acc_comp_ps_strea/>
    <rab_acc_comp_ps_inter/>
    <rab_acc_comp_ps_backg/>
    <rab_acc_fail_cs_voice_ms/>
    <rab_acc_fail_cs_voice_rnc/>
    <rab_acc_fail_cs_conv_ms/>
    <rab_acc_fail_cs_conv_rnc/>
    <rab_acc_fail_cs_strea_ms/>
    <rab_acc_fail_cs_strea_rnc/>
    <rab_acc_fail_ps_conv_ms/>
    <rab_acc_fail_ps_conv_rnc/>
    <rab_acc_fail_ps_strea_ms/>
    <rab_acc_fail_ps_strea_rnc/>
    <rab_acc_fail_ps_inter_ms/>
    <rab_acc_fail_ps_inter_rnc/>
    <rab_acc_fail_ps_backg_ms/>
    <rab_acc_fail_ps_backg_rnc/>
    <rab_act_comp_cs_voice/>
    <rab_act_comp_cs_conv/>
    <rab_act_comp_cs_strea/>
    <rab_act_comp_ps_conv/>
    <rab_act_comp_ps_strea/>
    <rab_act_comp_ps_inter/>
    <rab_act_comp_ps_backg/>
    <rab_act_rel_cs_voice_srnc/>
    <rab_act_rel_cs_voice_p_emp/>
    <rab_act_fail_cs_voice_iu/>
    <rab_act_fail_cs_voice_radio/>
    <rab_act_fail_cs_voice_bts/>
    <rab_act_fail_cs_voice_iur/>
    <rab_act_fail_cs_voice_i_chk/>
    <rab_act_fail_cs_voice_rnc/>
    <rab_act_rel_cs_conv_srnc/>
    <rab_act_rel_cs_conv_p_emp/>
    <rab_act_rel_cs_strea_srnc/>
    <rab_act_rel_cs_strea_p_emp/>
    <rab_act_fail_cs_conv_iu/>
    <rab_act_fail_cs_conv_radio/>
    <rab_act_fail_cs_conv_bts/>
    <rab_act_fail_cs_conv_iur/>
    <rab_act_fail_cs_conv_i_chk/>
    <rab_act_fail_cs_conv_rnc/>
    <rab_act_fail_cs_strea_iu/>
    <rab_act_fail_cs_strea_radio/>
    <rab_act_fail_cs_strea_bts/>
    <rab_act_fail_cs_strea_iur/>
    <rab_act_fail_cs_strea_i_chk/>
    <rab_act_fail_cs_strea_rnc/>
    <rab_act_rel_ps_conv_srnc/>
    <rab_act_rel_ps_conv_p_emp/>
    <rab_act_rel_ps_strea_srnc/>
    <rab_act_rel_ps_strea_p_emp/>
    <rab_act_rel_ps_inter_srnc/>
    <rab_act_rel_ps_backg_srnc/>
    <rab_act_fail_ps_conv_iu/>
    <rab_act_fail_ps_conv_radio/>
    <rab_act_fail_ps_conv_bts/>
    <rab_act_fail_ps_conv_iur/>
    <rab_act_fail_ps_conv_i_chk/>
    <rab_act_fail_ps_conv_rnc/>
    <rab_act_fail_ps_strea_iu/>
    <rab_act_fail_ps_strea_radio/>
    <rab_act_fail_ps_strea_bts/>
    <rab_act_fail_ps_strea_iur/>
    <rab_act_fail_ps_strea_i_chk/>
    <rab_act_fail_ps_strea_rnc/>
    <rab_act_fail_ps_inter_iu/>
    <rab_act_fail_ps_inter_radio/>
    <rab_act_fail_ps_inter_bts/>
    <rab_act_fail_ps_inter_iur/>
    <rab_act_fail_ps_inter_i_chk/>
    <rab_act_fail_ps_inter_rnc/>
    <rab_act_fail_ps_backg_iu/>
    <rab_act_fail_ps_backg_radio/>
    <rab_act_fail_ps_backg_bts/>
    <rab_act_fail_ps_backg_iur/>
    <rab_act_fail_ps_backg_i_chk/>
    <rab_act_fail_ps_backg_rnc/>
    <rab_reconf_att/>
    <rab_reconf_fail/>
    <avg_rab_hld_tm_cs_voice/>
    <denom_rab_hld_tm_cs_voice/>
    <avg_rab_hld_tm_cs_conv/>
    <denom_rab_hld_tm_cs_conv/>
    <avg_rab_hld_tm_cs_strea/>
    <denom_rab_hld_tm_cs_strea/>
    <avg_rab_hld_tm_ps_conv/>
    <denom_rab_hld_tm_ps_conv/>
    <avg_rab_hld_tm_ps_strea/>
    <denom_rab_hld_tm_ps_strea/>
    <avg_rab_hld_tm_ps_inter/>
    <denom_rab_hld_tm_ps_inter/>
    <avg_rab_hld_tm_ps_backg/>
    <denom_rab_hld_tm_ps_backg/>
    <avg_dch_hld_tm_ps_inter/>
    <denom_dch_hld_tm_ps_inter/>
    <avg_dch_hld_tm_ps_backg/>
    <denom_dch_hld_tm_ps_backg/>
    <inter_freq_hho_atts/>
    <inter_freq_hho_fails/>
    <inter_sys_hho_atts/>
    <inter_system_hho_fails/>
    <avg_rrc_setup_tm/>
    <denom_rrc_setup_tm/>
    <avg_rab_setup_tm_cs_voice/>
    <denom_rab_setup_tm_cs_voice/>
    <avg_rab_setup_tm_cs_conv/>
    <denom_rab_setup_tm_cs_conv/>
    <avg_rab_setup_tm_cs_strea/>
    <denom_rab_setup_tm_cs_strea/>
    <avg_rab_setup_tm_ps_conv/>
    <denom_rab_setup_tm_ps_conv/>
    <avg_rab_setup_tm_ps_strea/>
    <denom_rab_setup_tm_ps_strea/>
    <avg_rab_setup_tm_ps_inter/>
    <denom_rab_setup_tm_ps_inter/>
    <avg_rab_setup_tm_ps_backg/>
    <denom_rab_setup_tm_ps_backg/>
    <rab_act_fail_multi_amr_nrt/>
    <rab_act_fail_multi_amr_conv/>
    <rab_act_fail_multi_amr_stre/>
    <rab_act_fail_multi_nrt/>
    <RRC_CONN_ACC_REL_CELL_RESEL/>
    <RRC_CONN_SETUP_ATT_REPEAT/>
    <RAB_ACT_COMP_PS_IPHC_CONV/>
    <RAB_ACT_COMP_PS_IPHC_STREA/>
    <RAB_ACT_COMP_PS_ROHC_CONV/>
    <RAB_ACT_COMP_PS_ROHC_STREA/>
    <RRC_CONN_STP_FAIL_RNTI_ALLO/>
    <RAB_ACT_COMP_CS_VOICE_SAMECE/>
    <RAB_ACT_COMP_CS_CONV_SAMECE/>
    <RAB_ACT_COMP_CS_STREA_SAMECE/>
    <RAB_ACT_COMP_PS_CONV_SAMECE/>
    <RAB_ACT_COMP_PS_STREA_SAMECE/>
    <RAB_ACT_COMP_PS_INTER_SAMECE/>
    <RAB_ACT_COMP_PS_BACKG_SAMECE/>
    <RAB_STP_FAIL_CS_NOT_SUPP_PAR/>
    <RAB_STP_FAIL_CS_UE_CAPA/>
    <RAB_STP_FAIL_PS_NOT_SUPP_PAR/>
    <RAB_STP_FAIL_PS_UE_CAPA/>
    <RRC_CONN_SETUP_COMP_AFT_DIR/>
    <RRC_CON_SETUP_COMP_DIRECTED/>
    <RAB_SETUP_ATT_CS_AMR_MULTIM/>
    <RAB_ACC_COMP_CS_AMR_MULTIM/>
    <RAB_SETUP_ATT_CS_CONV_64/>
    <RAB_ACC_COMP_CS_CONV_64/>
    <RAB_SETUP_ATT_CS_STREAM_14_4/>
    <RAB_ACC_COMP_CS_STREAM_14_4/>
    <RAB_SETUP_ATT_CS_STREA_57_6/>
    <RAB_ACC_COMP_CS_STREA_57_6/>
    <RAB_SET_A_PS_S_16_64_G_16_64/>
    <RAB_ACC_C_PS_S_16_64_G_16_64/>
    <RAB_SET_A_PS_S_16_64_G_8_32/>
    <RAB_ACC_C_PS_S_16_64_G_8_32/>
    <RAB_SETUP_ATT_PS_NRT_64_64/>
    <RAB_SETUP_ATT_PS_NRT_64_128/>
    <RAB_SETUP_ATT_PS_NRT_64_256/>
    <RAB_SETUP_ATT_PS_NRT_64_384/>
    <RAB_ACC_COMP_PS_NRT_64_64/>
    <RAB_ACC_COMP_PS_NRT_64_128/>
    <RAB_ACC_COMP_PS_NRT_64_256/>
    <RAB_ACC_COMP_PS_NRT_64_384/>
    <RAB_S_A_CS_12_2_1PSNRT64_64/>
    <RAB_S_A_CS_12_2_1PSNRT64_128/>
    <RAB_S_A_CS_12_2_2PSNRT_I_I/>
    <RAB_S_A_CS_12_2_2PSNRT_I_B/>
    <RAB_S_A_CS_12_2_2PSNRT_B_B/>
    <RAB_S_A_CS_12_2_3PSNRT/>
    <RAB_ACCC_CS12_2_1PSNRT64_64/>
    <RAB_ACCC_CS12_2_1PSNRT64_128/>
    <RAB_ACCC_CS12_2_2PSNRT_I_I/>
    <RAB_ACCC_CS12_2_2PSNRT_I_B/>
    <RAB_ACCC_CS12_2_2PSNRT_B_B/>
    <RAB_ACCC_CS12_2_3PSNRT/>
    <RAB_S_A_CS_AMM_1PSNRT64_64/>
    <RAB_S_A_CS_AMM_1PSNRT64_128/>
    <RAB_S_A_CS_AMM_2PSNRT_I_I/>
    <RAB_S_A_CS_AMM_2PSNRT_I_B/>
    <RAB_S_A_CS_AMM_2PSNRT_B_B/>
    <RAB_S_A_CS_AMM_3PSNRT/>
    <RAB_ACCC_CS_AMM_1PSNRT64_64/>
    <RAB_ACCC_CS_AMM_1PSNRT64_128/>
    <RAB_ACCC_CS_AMM_2PSNRT_I_I/>
    <RAB_ACCC_CS_AMM_2PSNRT_I_B/>
    <RAB_ACCC_CS_AMM_2PSNRT_B_B/>
    <RAB_ACCC_CS_AMM_3PSNRT/>
    <RAB_SETUP_ATT_2PSNRT_I_I/>
    <RAB_SETUP_ATT_2PSNRT_I_B/>
    <RAB_SETUP_ATT_2PSNRT_B_B/>
    <RAB_ACC_COMPL_2PSNRT_I_I/>
    <RAB_ACC_COMPL_2PSNRT_I_B/>
    <RAB_ACC_COMPL_2PSNRT_B_B/>
    <RAB_SETUP_ATT_3PSNRT/>
    <RAB_ACC_COMPL_3PSNRT/>
    <RAB_S_A_PSS_GEM_1PSNRT64_64/>
    <RAB_S_A_PSS_GEM_1PSNRT64_128/>
    <RAB_S_A_PSS_GEM_1PSNRT64_384/>
    <RAB_S_A_PSS_GLM_1PSNRT64_64/>
    <RAB_S_A_PSS_GLM_1PSNRT64_128/>
    <RAB_S_A_PSS_GLM_1PSNRT64_384/>
    <RAB_ACC_PSS_GEM_1PSNRT64_64/>
    <RAB_ACC_PSS_GEM_1PSNRT64_128/>
    <RAB_ACC_PSS_GEM_1PSNRT64_384/>
    <RAB_ACC_PSS_GLM_1PSNRT64_64/>
    <RAB_ACC_PSS_GLM_1PSNRT64_128/>
    <RAB_ACC_PSS_GLM_1PSNRT64_384/>
    <RAB_S_A_CS_CONV_1PSNRT64_64/>
    <RAB_S_A_CS_CONV_1PSNRT64_128/>
    <RAB_S_A_CS_CONV_1PSNRT64_384/>
    <RAB_ACC_CS_CONV_1PSNRT64_64/>
    <RAB_ACC_CS_CONV_1PSNRT64_128/>
    <RAB_ACC_CS_CONV_1PSNRT64_384/>
    <RAB_ACT_COMPL_CS_AMR_MULTIM/>
    <RAB_ACT_COMPL_CS_CONV_64/>
    <RAB_ACT_COMPL_CS_STREAM_14_4/>
    <RAB_ACT_COMPL_CS_STREAM_57_6/>
    <RAB_ACT_C_PS_S_16_64_G_16_64/>
    <RAB_ACT_C_PS_S_16_64_G_8_32/>
    <RAB_ACT_COMP_PS_NRT_64_64/>
    <RAB_ACT_COMP_PS_NRT_64_128/>
    <RAB_ACT_COMP_PS_NRT_64_256/>
    <RAB_ACT_COMP_PS_NRT_64_384/>
    <RAB_ACTC_CS12_2_1PSNRT64_64/>
    <RAB_ACTC_CS12_2_1PSNRT64_128/>
    <RAB_ACTC_CS12_2_2PSNRT_I_I/>
    <RAB_ACTC_CS12_2_2PSNRT_I_B/>
    <RAB_ACTC_CS12_2_2PSNRT_B_B/>
    <RAB_ACTC_CS12_2_3PSNRT/>
    <RAB_ACTC_CS_AMM_1PSNRT64_64/>
    <RAB_ACTC_CS_AMM_1PSNRT64_128/>
    <RAB_ACTC_CS_AMM_2PSNRT_I_I/>
    <RAB_ACTC_CS_AMM_2PSNRT_I_B/>
    <RAB_ACTC_CS_AMM_2PSNRT_B_B/>
    <RAB_ACTC_CS_AMM_3PSNRT/>
    <RAB_ACT_COMPL_2PSNRT_I_I/>
    <RAB_ACT_COMPL_2PSNRT_I_B/>
    <RAB_ACT_COMPL_2PSNRT_B_B/>
    <RAB_ACT_COMPL_3PSNRT/>
    <RAB_ACT_PSS_GEM_1PSNRT64_64/>
    <RAB_ACT_PSS_GEM_1PSNRT64_128/>
    <RAB_ACT_PSS_GEM_1PSNRT64_384/>
    <RAB_ACT_PSS_GLM_1PSNRT64_64/>
    <RAB_ACT_PSS_GLM_1PSNRT64_128/>
    <RAB_ACT_PSS_GLM_1PSNRT64_384/>
    <RAB_ACT_CS_CONV_1PSNRT64_64/>
    <RAB_ACT_CS_CONV_1PSNRT64_128/>
    <RAB_ACT_CS_CONV_1PSNRT64_384/>
    <RAB_HOLD_TIME_CS_AMR_MULTIM/>
    <DENOM_FOR_CS_AMR_MULTIM/>
    <RAB_HOLD_TIME_CS_CONV_64/>
    <DENOM_FOR_CS_CONV_64/>
    <RAB_HOLD_TIME_CS_STREAM_14_4/>
    <DENOM_FOR_CS_STREAM_14_4/>
    <RAB_HOLD_TIME_CS_STREAM_57_6/>
    <DENOM_FOR_CS_STREAM_57_6/>
    <RAB_SETUP_ATT_PS_NRT_128_64/>
    <RAB_SETUP_ATT_PS_NRT_128_128/>
    <RAB_SETUP_ATT_PS_NRT_128_384/>
    <RAB_SETUP_ATT_PS_NRT_384_384/>
    <RAB_SETUP_ATT_PS_NRT_384_64/>
    <RAB_ACC_COMP_PS_NRT_128_64/>
    <RAB_ACC_COMP_PS_NRT_128_128/>
    <RAB_ACC_COMP_PS_NRT_128_384/>
    <RAB_ACC_COMP_PS_NRT_384_384/>
    <RAB_ACC_COMP_PS_NRT_384_64/>
    <RAB_ACT_COMP_PS_NRT_128_64/>
    <RAB_ACT_COMP_PS_NRT_128_128/>
    <RAB_ACT_COMP_PS_NRT_128_384/>
    <RAB_ACT_COMP_PS_NRT_384_384/>
    <RAB_ACT_COMP_PS_NRT_384_64/>
    <UE_SUPPORT_FOR_IPHC/>
    <UE_SUPPORT_FOR_ROHC/>
    <RRC_CONN_ACT_FAIL_UE/>
    <RAB_ACT_FAIL_CS_VOICE_UE/>
    <RAB_ACT_FAIL_CS_CONV_UE/>
    <RAB_ACT_FAIL_CS_STREA_UE/>
    <RAB_ACT_FAIL_PS_CONV_UE/>
    <RAB_ACT_FAIL_PS_STREA_UE/>
    <RAB_ACT_FAIL_PS_INTER_UE/>
    <RAB_ACT_FAIL_PS_BACKG_UE/>
    <SPARE_1_SERVICELEVEL/>
    <SPARE_2_SERVICELEVEL/>
    <SPARE_3_SERVICELEVEL/>
    <SPARE_4_SERVICELEVEL/>
    <SPARE_5_SERVICELEVEL/>
    <ACCESS_STRATUM_REL_IND_4/>
    <ACCESS_STRATUM_REL_IND_99/>
    <UE_SUPPORT_GSM/>
    <UE_SUPPORT_MULTICARRIER_CDMA/>
    <UE_RXTX_POSITION_CAPAB_2/>
    <RAB_STP_COMP_PS_STRE_GUAR_UL/>
    <RAB_STP_COMP_PS_STRE_GUAR_DL/>
    <RAB_STP_COMP_CS_STRE_GUAR_UL/>
    <RAB_STP_COMP_CS_STRE_GUAR_DL/>
    <RAB_ACC_COMP_CS_STRE_GUAR_UL/>
    <RAB_ACC_COMP_CS_STRE_GUAR_DL/>
    <RAB_ACC_COMP_PS_STRE_GUAR_UL/>
    <RAB_ACC_COMP_PS_STRE_GUAR_DL/>
    <RAB_ACT_COMP_CS_STRE_GUAR_UL/>
    <RAB_ACT_COMP_CS_STRE_GUAR_DL/>
    <RAB_ACT_COMP_PS_STRE_GUAR_UL/>
    <RAB_ACT_COMP_PS_STRE_GUAR_DL/>
    <RRC_CONN_ACT_REL_UNSPEC_CN/>
    <RAB_ACT_REL_CS_V_UNSPE_ER_CN/>
    <RAB_ACT_REL_CS_C_UNSPE_ER_CN/>
    <RAB_ACT_REL_CS_S_UNSPE_ER_CN/>
    <RAB_ACT_REL_CS_S_GUL_UNSP_CN/>
    <RAB_ACT_REL_CS_S_GDL_UNSP_CN/>
    <RAB_ACT_REL_CS_S_GU_UL_SRNC/>
    <RAB_ACT_REL_CS_S_GU_DL_SRNC/>
    <RAB_ACT_REL_CS_S_GUL_PRE_EMP/>
    <RAB_ACT_REL_CS_S_GDL_PRE_EMP/>
    <RAB_ACT_REL_PS_S_UNSPE_ER_CN/>
    <RAB_ACT_REL_PS_I_UNSPE_ER_CN/>
    <RAB_ACT_REL_PS_B_UNSPE_ER_CN/>
    <RAB_ACT_REL_PS_S_GUL_UNSP_CN/>
    <RAB_ACT_REL_PS_S_GDL_UNSP_CN/>
    <RAB_ACT_REL_PS_S_GUL_SRNC/>
    <RAB_ACT_REL_PS_S_GDL_SRNC/>
    <RAB_ACT_REL_PS_S_GUL_PRE_EMP/>
    <RAB_ACT_REL_PS_S_GDL_PRE_EMP/>
    <RAB_S_A_CS_12_2_1PSNRT64_384/>
    <RAB_ACCC_CS12_2_1PSNRT64_384/>
    <RAB_ACTC_CS12_2_1PSNRT64_384/>
    <RRC_CONN_OUT_REF_CELL/>
    <RAB_CS_VOICE_OUT_REF_CELL/>
    <RAB_CS_CONV_OUT_REF_CELL/>
    <RAB_CS_STR_OUT_REF_CELL/>
    <RAB_PS_CONV_OUT_REF_CELL/>
    <RAB_PS_STR_OUT_REF_CELL/>
    <RAB_PS_INTR_OUT_REF_CELL/>
    <RAB_PS_BGR_OUT_REF_CELL/>
    <RAB_CS_AMR122_OUT_REF_CELL/>
    <RAB_CS_CONV_64_OUT_REF_CELL/>
    <RAB_CS_STR_144_OUT_REF_CELL/>
    <RAB_CS_STR_576_OUT_REF_CELL/>
    <PS_STR_1664_G_1664_OUT_REF_C/>
    <PS_STR_1664_G_832_OUT_REF_C/>
    <RAB_PS_NRT_6464_OUT_REF_C/>
    <RAB_PS_NRT_64128_OUT_REF_C/>
    <RAB_PS_NRT_64256_OUT_REF_C/>
    <RAB_PS_NRT_64384_OUT_REF_C/>
    <RAB_PS_NRT_12864_OUT_REF_C/>
    <RAB_PS_NRT_128128_OUT_REF_C/>
    <RAB_PS_NRT_128384_OUT_REF_C/>
    <RAB_PS_NRT_384384_OUT_REF_C/>
    <RAB_PS_NRT_38464_OUT_REF_C/>
    <RRC_CONN_IN_REF_CELL/>
    <RAB_CS_VOICE_IN_REF_CELL/>
    <RAB_CS_CONV_IN_REF_CELL/>
    <RAB_CS_STR_IN_REF_CELL/>
    <RAB_PS_CONV_IN_REF_CELL/>
    <RAB_PS_STR_IN_REF_CELL/>
    <RAB_PS_INTR_IN_REF_CELL/>
    <RAB_PS_BGR_IN_REF_CELL/>
    <RAB_CS_AMR122_IN_REF_CELL/>
    <RAB_CS_CONV_64_IN_REF_CELL/>
    <RAB_CS_STR_144_IN_REF_CELL/>
    <RAB_CS_STR_576_IN_REF_CELL/>
    <PS_STR_1664_G_1664_IN_REF_C/>
    <PS_STR_1664_G_832_IN_REF_C/>
    <RAB_PS_NRT_6464_IN_REF_C/>
    <RAB_PS_NRT_64128_IN_REF_C/>
    <RAB_PS_NRT_64256_IN_REF_C/>
    <RAB_PS_NRT_64384_IN_REF_C/>
    <RAB_PS_NRT_12864_IN_REF_C/>
    <RAB_PS_NRT_128128_IN_REF_C/>
    <RAB_PS_NRT_128384_IN_REF_C/>
    <RAB_PS_NRT_384384_IN_REF_C/>
    <RAB_PS_NRT_38464_IN_REF_C/>
    <RAB_CS_V_HLD_TM_REF_CELL/>
    <DENOM_CS_V_HLD_TM_REF_CELL/>
    <RAB_CS_CONV_HLD_TM_REF_CELL/>
    <DENOM_CS_CONV_HLD_TM_REF_C/>
    <RAB_CS_STR_HLD_TM_REF_CELL/>
    <DENOM_CS_STR_HLD_TM_REF_C/>
    <RAB_AMR122_HLD_TM_REF_CELL/>
    <DENOM_AMR122_HLD_TM_REF_C/>
    <RAB_CS_CONV64_TM_REF_CELL/>
    <DENOM_CS_CONV64_HLD_TM_REF_C/>
    <RAB_CS_STR144_HLD_TM_REF_C/>
    <DENOM_CS_STR144_HLD_TM_REF_C/>
    <RAB_CS_STR576_HLD_TM_REF_C/>
    <DENOM_CS_STR576_HLD_TM_REF_C/>
    <RAB_FAIL_AMR122_PSNRT6464/>
    <RAB_FAIL_AMR122_PSNRT64128/>
    <RAB_FAIL_AMR122_PSNRT64384/>
    <RAB_FAIL_AMR122_2PSNRTI/>
    <RAB_FAIL_AMR122_PSNRT_I_B/>
    <RAB_FAIL_AMR122_2PSNRTB/>
    <RAB_FAIL_AMR122_3PSNRT/>
    <RAB_FAIL_AMRMM_PSNRT6464/>
    <RAB_FAIL_AMRMM_PSNRT64128/>
    <RAB_FAIL_AMRMM_PSNRT64384/>
    <RAB_FAIL_AMRMM_2PSNRTI/>
    <RAB_FAIL_AMRMM_PSNRT_I_B/>
    <RAB_FAIL_AMRMM_2PSNRTB/>
    <RAB_FAIL_AMRMM_3PSNRT/>
    <RAB_FAIL_CSCONV_PSNRT6464/>
    <RAB_FAIL_CSCONV_PSNRT64128/>
    <RAB_FAIL_CSCONV_PSNRT64384/>
    <RAB_FAIL_PSS_GEM_PSNRT6464/>
    <RAB_FAIL_PSS_GEM_PSNRT64128/>
    <RAB_FAIL_PSS_GEM_PSNRT64384/>
    <RAB_FAIL_PSS_GLM_PSNRT6464/>
    <RAB_FAIL_PSS_GLM_PSNRT64128/>
    <RAB_FAIL_PSS_GLM_PSNRT64384/>
    <RAB_ACT_FAIL_2PSNRTI/>
    <RAB_ACT_FAIL_PSNRT_I_B/>
    <RAB_ACT_FAIL_2PSNRTB/>
    <RAB_ACT_FAIL_3PSNRT/>
    <RRC_CONN_STP_FAIL_IUB_AAL2/>
    <RAB_STP_FAIL_CS_V_IUB_AAL2/>
    <RAB_STP_FAIL_CS_CO_IUB_AAL2/>
    <RAB_STP_FAIL_CS_ST_IUB_AAL2/>
    <RAB_STP_FAIL_PS_ST_IUB_AAL2/>
    <RAB_STP_FAIL_CS_V_IUR_AAL2/>
    <RAB_STP_FAIL_CS_CO_IUR_AAL2/>
    <RAB_STP_FAIL_CS_ST_IUR_AAL2/>
    <RAB_STP_FAIL_PS_ST_IUR_AAL2/>
    <RAB_STP_FAIL_CS_V_IU_AAL2/>
    <RAB_STP_FAIL_CS_CO_IU_AAL2/>
    <RAB_STP_FAIL_CS_ST_IU_AAL2/>
    <DCH_HOLD_TM_PS_INTER_THP1/>
    <DCH_HOLD_TM_PS_INTER_THP2/>
    <DCH_HOLD_TM_PS_INTER_THP3/>
    <DENOM_DCH_H_TM_PS_INTER_THP1/>
    <DENOM_DCH_H_TM_PS_INTER_THP2/>
    <DENOM_DCH_H_TM_PS_INTER_THP3/>
    <UE_SUPP_HSDSCH_CLASS_1_6/>
    <UE_SUPP_HSDSCH_CLASS_7_8/>
    <UE_SUPP_HSDSCH_CLASS_9_10/>
    <UE_SUPP_HSDSCH_CLASS_11_12/>
    <ACCESS_STRATUM_REL_IND_5/>
    <RRC_ACC_REL_MO_CONV/>
    <RRC_ACC_REL_MO_STREAMING/>
    <RRC_ACC_REL_MO_INTERACTIVE/>
    <RRC_ACC_REL_MO_BACKGROUND/>
    <RRC_ACC_REL_MO_SUBSCRIBED/>
    <RRC_ACC_REL_MT_CONV/>
    <RRC_ACC_REL_MT_STREAMING/>
    <RRC_ACC_REL_INTERACTIVE/>
    <RRC_ACC_REL_MT_BACKGROUND/>
    <RRC_ACC_REL_EMERGENCY/>
    <RRC_ACC_REL_INTER_RAT_RESEL/>
    <RRC_ACC_REL_INTER_RAT_CCO/>
    <RRC_ACC_REL_REGISTRATION/>
    <RRC_ACC_REL_DETACH/>
    <RRC_ACC_REL_MO_HIGH_PR_SIGN/>
    <RRC_ACC_REL_MO_LOW_PR_SIGN/>
    <RRC_ACC_REL_CALL_RE_ESTAB/>
    <RRC_ACC_REL_MT_HIGH_PR_SIGN/>
    <RRC_ACC_REL_MT_LOW_PR_SIGN/>
    <RRC_ACC_REL_MT_CAUSE_UNKNOWN/>
    <RRC_ATT_REP_MO_CONV/>
    <RRC_ATT_REP_MO_STREAMING/>
    <RRC_ATT_REP_MO_INTERACTIVE/>
    <RRC_ATT_REP_MO_BACKGROUND/>
    <RRC_ATT_REP_MO_SUBSCRIBED/>
    <RRC_ATT_REP_MT_CONV/>
    <RRC_ATT_REP_MT_STREAMING/>
    <RRC_ATT_REP_INTERACTIVE/>
    <RRC_ATT_REP_MT_BACKGROUND/>
    <RRC_ATT_REP_EMERGENCY/>
    <RRC_ATT_REP_INTER_RAT_RESEL/>
    <RRC_ATT_REP_INTER_RAT_CCO/>
    <RRC_ATT_REP_REGISTRATION/>
    <RRC_ATT_REP_DETACH/>
    <RRC_ATT_REP_MO_HIGH_PR_SIGN/>
    <RRC_ATT_REP_MO_LOW_PR_SIGN/>
    <RRC_ATT_REP_CALL_RE_ESTAB/>
    <RRC_ATT_REP_MT_HIGH_PR_SIGN/>
    <RRC_ATT_REP_MT_LOW_PR_SIGN/>
    <RRC_ATT_REP_MT_CAUSE_UNKNOWN/>
    <RAB_ACT_FAIL_PS_INT_PCH/>
    <RAB_ACT_FAIL_PS_BACKG_PCH/>
    <UE_SUPPORT_NW_AGPS/>
    <RAB_SETUP_ATT_PS_NRT_128_256/>
    <RAB_ACC_COMP_PS_NRT_128_256/>
    <RAB_ACT_COMP_PS_NRT_128_256/>
    <RAB_STP_ATT_CS_VOICE_WPS/>
    <RAB_STP_COMP_CS_VOICE_WPS/>
    <RAB_STP_FAIL_CS_VOICE_WPS/>
    <RAB_ACC_COMP_CS_VOICE_WPS/>
    <RRC_SETUP_TIME_MAX/>
    <RAB_SETUP_TIME_MAX_CS_VOICE/>
    <RAB_SETUP_TIME_MAX_CS_CONV/>
    <RAB_SETUP_TIME_MAX_CS_STR/>
    <RAB_SETUP_TIME_MAX_PS_STR/>
    <RAB_SETUP_TIME_MAX_PS_INT/>
    <RAB_SETUP_TIME_MAX_PS_BACKG/>
    <UE_SUPP_EDCH_CATEGORY_1/>
    <UE_SUPP_EDCH_CATEGORY_2/>
    <UE_SUPP_EDCH_CATEGORY_3/>
    <UE_SUPP_EDCH_CATEGORY_4/>
    <UE_SUPP_EDCH_CATEGORY_5/>
    <UE_SUPP_EDCH_CATEGORY_6/>
    <ACCESS_STRATUM_REL_IND_6/>
    <RRC_CONN_STP_REJ_EMERG_CALL/>
    <RRC_CONN_STP_FAIL_ICSU_OVERL/>
    <RAB_STP_FAIL_CS_VOICE_LIC/>
    <RAB_ACT_REL_CS_VOICE_PRE_LIC/>
    <RAB_STP_FAIL_CS_VOICE_IUR_TR/>
    <RAB_STP_FAIL_CS_CONV_IUR_TR/>
    <RAB_STP_FAIL_CS_STRE_IUR_TR/>
    <RAB_STP_FAIL_PS_STRE_IUR_TR/>
    <RAB_STP_FAIL_CS_VOICE_IU_CS/>
    <RAB_STP_FAIL_CS_CONV_IU_CS/>
    <RAB_STP_FAIL_CS_STRE_IU_CS/>
    <RRC_CONN_REL_DUE_INACTIVITY/>
    <RRC_CONN_REL_DUE_HW_RES/>
    <SUCC_RRC_SETUP_CONV/>
    <SUCC_RRC_SETUP_STREA/>
    <SUCC_RRC_SETUP_INTERA/>
    <SUCC_RRC_SETUP_BACKG/>
    <SUCC_RRC_SETUP_OTHER/>
    <SRB_ACT_FAIL_CONV/>
    <SRB_ACT_FAIL_STREA/>
    <SRB_ACT_FAIL_INTERA/>
    <SRB_ACT_FAIL_BACKG/>
    <SRB_ACT_FAIL_OTHER/>
    <RRC_ACT_REL_DIRECTED_RETRY/>
    <UE_SUPPORT_GANHO/>
    <RRC_CONN_ACT_REL_INTRA_HHO/>
    <RRC_CONN_ACT_REL_GANHO/>
    <RRC_CONN_ACT_REL_HHO/>
    <RRC_CONN_ACT_REL_ISHO/>
    <RAB_ACT_REL_CS_VOICE_HHO/>
    <RAB_ACT_REL_CS_CONV_HHO/>
    <RAB_ACT_REL_CS_STREA_HHO/>
    <RAB_ACT_REL_CS_VOICE_ISHO/>
    <RAB_ACT_REL_CS_CONV_ISHO/>
    <RAB_ACT_REL_CS_STREA_ISHO/>
    <RAB_ACT_REL_CS_VOICE_GANHO/>
    <RAB_RELOC_STP_ATT_PS_STREA/>
    <RAB_RELOC_ACC_COMP_PS_STREA/>
    <RAB_RELOC_STP_ATT_CS_VOICE/>
    <RAB_RELOC_ACC_COMP_CS_VOICE/>
    <RAB_RELOC_STP_ATT_CS_CONV/>
    <RAB_RELOC_ACC_COMP_CS_CONV/>
    <RAB_RELOC_STP_ATT_CS_STREA/>
    <RAB_RELOC_ACC_COMP_CS_STREA/>
    <RAB_STP_ATT_BR_CLASS_1_DL/>
    <RAB_STP_ATT_BR_CLASS_2_DL/>
    <RAB_STP_ATT_BR_CLASS_3_DL/>
    <RAB_STP_ATT_BR_CLASS_4_DL/>
    <RAB_STP_ATT_BR_CLASS_5_DL/>
    <RAB_STP_ATT_BR_CLASS_6_DL/>
    <RAB_STP_ATT_BR_CLASS_7_DL/>
    <RAB_STP_ATT_BR_CLASS_1_UL/>
    <RAB_STP_ATT_BR_CLASS_2_UL/>
    <RAB_STP_ATT_BR_CLASS_3_UL/>
    <RAB_STP_ATT_BR_CLASS_4_UL/>
    <RAB_STP_ATT_BR_CLASS_5_UL/>
    <UE_SUPP_CS_VOICE_OVER_HSPA/>
    <UE_SUPP_HSDSCH_CLASS_13_14/>
    <UE_SUPP_HSDSCH_CLASS_15_16/>
    <UE_SUPP_HSDSCH_CLASS_17_18/>
    <ACCESS_STRATUM_REL_IND_7/>
    <UE_SUPP_EDCH_CATEGORY_7/>
    <UE_SUPP_CPC/>
    <RRC_CONN_STP_ATT_CCH/>
    <RRC_CONN_ACC_COMP_CCH/>
    <RRC_CONN_ACC_REL_RESEL_CCH/>
    <RRC_CONN_STP_ATT_REPEAT_CCH/>
    <SPARE_6_SERVICELEVEL/>
    <SPARE_7_SERVICELEVEL/>
    <SPARE_8_SERVICELEVEL/>
    <SPARE_9_SERVICELEVEL/>
    <SPARE_10_SERVICELEVEL/>
    <RRC_CONN_ACT_FAIL_TRANS/>
    <RAB_ACT_FAIL_CS_VOICE_TRANS/>
    <RAB_ACT_FAIL_CS_CONV_TRANS/>
    <RAB_ACT_FAIL_CS_STREA_TRANS/>
    <RAB_ACT_FAIL_PS_STREA_TRANS/>
    <RAB_ACT_FAIL_PS_INTER_TRANS/>
    <RAB_ACT_FAIL_PS_BACKG_TRANS/>
    <UE_SUPP_HSDSCH_CLASS_19_20/>
    <UE_SUPP_HSDSCH_CLASS_21_22/>
    <UE_SUPP_HSDSCH_CLASS_23_24/>
    <ACCESS_STRATUM_REL_IND_8/>
    <RAB_STP_ATT_AMR_PSNRT/>
    <RAB_ACC_COMP_AMR_PSNRT/>
    <RAB_ACT_COMP_AMR_PSNRT/>
    <RAB_ACT_FAIL_AMR_PSNRT/>
    <INTER_SYS_LTE_HHO_FAIL_CONF/>
    <UE_SUPP_HS_CELL_FACH/>
    <UE_SUPP_FLEX_RLC_UL/>
    <UE_SUPP_HSDSCH_CLASS_25_26/>
    <UE_SUPP_HSDSCH_CLASS_27_28/>
    <ACCESS_STRATUM_REL_IND_9/>
    <UE_SUPP_EDCH_CATEGORY_8/>
    <UE_SUPP_EDCH_CATEGORY_9/>
    <UE_SUPP_HS_CELL_FACH_UL/>
    <CS_VOICE_DRP_AFT_MISSING_ADJ/>
    <EUTRA_CAPABILITY_FDD/>
    <EUTRA_CAPABILITY_TDD/>
    <UE_SUPP_UMTS_850/>
    <UE_SUPP_UMTS_900/>
    <UE_SUPP_UMTS_1500/>
    <UE_SUPP_UMTS_1700/>
    <UE_SUPP_UMTS_1900/>
    <UE_SUPP_UMTS_2100/>
    <UE_SUPP_DBHSDPA_9_1/>
    <UE_SUPP_DBHSDPA_9_2/>
    <UE_SUPP_DBHSDPA_9_3/>
    <RRC_CONN_STP_FAIL_AC_UL/>
    <RRC_CONN_STP_FAIL_AC_DL/>
    <RRC_CONN_STP_FAIL_AC_COD/>
    <RAB_STP_FAIL_CS_VOICE_AC_UL/>
    <RAB_STP_FAIL_CS_VOICE_AC_DL/>
    <RAB_STP_FAIL_CS_VOICE_AC_COD/>
    <RAB_STP_ATT_PTT/>
    <RAB_ACC_COMP_PTT/>
    <RAB_ACT_COMP_PTT/>
    <RAB_STP_ACC_FAIL_PTT/>
    <RAB_ACT_FAIL_PTT/>
    <RAB_HLD_TM_PTT/>
    <ACCESS_STRATUM_REL_IND_10/>
    <ACCESS_STRATUM_REL_IND_11/>
    <UE_SUPP_HSDSCH_CLASS_29_30/>
    <UE_SUPP_HSDSCH_CLASS_31_32/>
    <RRC_CONN_STP_ATT_CSFB/>
    <RRC_STP_ACC_FAIL_CSFB/>
    <RRC_ACC_REL_CSFB/>
    <RRC_ATT_REP_CSFB/>
    <RAB_ACT_REL_PS_INTER_HHO/>
    <RAB_ACT_REL_PS_BACKG_HHO/>
    <RAB_ACT_REL_PS_INTER_ISHO/>
    <RAB_ACT_REL_PS_BGR_ISHO/>
    <RAB_ACT_REL_PS_STREA_HHO/>
    <RAB_ACT_REL_PS_STREA_ISHO/>
    <RRC_RELOC_STP_ATT/>
    <RRC_RELOC_ACC_COMP/>
    <RAB_RELOC_STP_ATT_PS_INT/>
    <RAB_RELOC_ACC_COMP_PS_INT/>
    <RAB_RELOC_STP_ATT_PS_BGR/>
    <RAB_RELOC_ACC_COMP_PS_BGR/>
    <period_duration_sum/>
  </column_order>
  <temp_table name="SERVLEV" omes_name="Service_Level" meas_level="PLMN/RSRAN-RNC/RSRAN-WBTS/RSRAN-WCEL/RSRAN-MCC/RSRAN-MNC" type="PM" master="yes" pragma="RSRAN" create="yes">
    <koala_meas_id>SERVLEV</koala_meas_id>
	<last_mo_level>RSRAN-WCEL</last_mo_level>
    <counters>
          <counter alias="period_duration" time-alias="period_duration" time-formula="SUM(period_duration)" object-formula="AVG(period_duration)">SUM(period_duration)</counter>
          <counter alias="rrc_conn_stp_att" symmetrical="true">SUM(rrc_conn_stp_att)</counter>
          <counter alias="rrc_conn_stp_comp" symmetrical="true">SUM(rrc_conn_stp_comp)</counter>
          <counter alias="rrc_conn_stp_fail_hc" symmetrical="true">SUM(rrc_conn_stp_fail_hc)</counter>
          <counter alias="rrc_conn_stp_fail_ac" symmetrical="true">SUM(rrc_conn_stp_fail_ac)</counter>
          <counter alias="rrc_conn_stp_fail_bts" symmetrical="true">SUM(rrc_conn_stp_fail_bts)</counter>
          <counter alias="rrc_conn_stp_fail_trans" symmetrical="true">SUM(rrc_conn_stp_fail_trans)</counter>
          <counter alias="rrc_conn_stp_fail_rnc" symmetrical="true">SUM(rrc_conn_stp_fail_rnc)</counter>
          <counter alias="rrc_conn_stp_fail_frozbs" symmetrical="true">SUM(rrc_conn_stp_fail_frozbs)</counter>
          <counter alias="rrc_conn_acc_comp" symmetrical="true">SUM(rrc_conn_acc_comp)</counter>
          <counter alias="rrc_conn_acc_fail_radio" symmetrical="true">SUM(rrc_conn_acc_fail_radio)</counter>
          <counter alias="rrc_conn_acc_fail_ms" symmetrical="true">SUM(rrc_conn_acc_fail_ms)</counter>
          <counter alias="rrc_conn_acc_fail_rnc" symmetrical="true">SUM(rrc_conn_acc_fail_rnc)</counter>
          <counter alias="rrc_conn_act_comp" symmetrical="true">SUM(rrc_conn_act_comp)</counter>
          <counter alias="rrc_conn_act_rel_srnc" symmetrical="true">SUM(rrc_conn_act_rel_srnc)</counter>
          <counter alias="rrc_conn_act_rel_p_emp" symmetrical="true">SUM(rrc_conn_act_rel_p_emp)</counter>
          <counter alias="rrc_conn_act_fail_iu" symmetrical="true">SUM(rrc_conn_act_fail_iu)</counter>
          <counter alias="rrc_conn_act_fail_radio" symmetrical="true">SUM(rrc_conn_act_fail_radio)</counter>
          <counter alias="rrc_conn_act_fail_bts" symmetrical="true">SUM(rrc_conn_act_fail_bts)</counter>
          <counter alias="rrc_conn_act_fail_iur" symmetrical="true">SUM(rrc_conn_act_fail_iur)</counter>
          <counter alias="rrc_conn_act_fail_ciph" symmetrical="true">SUM(rrc_conn_act_fail_ciph)</counter>
          <counter alias="rrc_conn_act_fail_i_chk" symmetrical="true">SUM(rrc_conn_act_fail_i_chk)</counter>
          <counter alias="rrc_conn_act_fail_rnc" symmetrical="true">SUM(rrc_conn_act_fail_rnc)</counter>
          <counter alias="moc_conv_call_atts" symmetrical="true">SUM(moc_conv_call_atts)</counter>
          <counter alias="moc_conv_call_fails" symmetrical="true">SUM(moc_conv_call_fails)</counter>
          <counter alias="moc_strea_call_atts" symmetrical="true">SUM(moc_strea_call_atts)</counter>
          <counter alias="moc_strea_call_fails" symmetrical="true">SUM(moc_strea_call_fails)</counter>
          <counter alias="moc_inter_call_atts" symmetrical="true">SUM(moc_inter_call_atts)</counter>
          <counter alias="moc_inter_call_fails" symmetrical="true">SUM(moc_inter_call_fails)</counter>
          <counter alias="moc_backg_call_atts" symmetrical="true">SUM(moc_backg_call_atts)</counter>
          <counter alias="moc_backg_call_fails" symmetrical="true">SUM(moc_backg_call_fails)</counter>
          <counter alias="moc_subsc_traf_call_atts" symmetrical="true">SUM(moc_subsc_traf_call_atts)</counter>
          <counter alias="moc_subsc_traf_call_fails" symmetrical="true">SUM(moc_subsc_traf_call_fails)</counter>
          <counter alias="mtc_conv_call_atts" symmetrical="true">SUM(mtc_conv_call_atts)</counter>
          <counter alias="mtc_conv_call_fails" symmetrical="true">SUM(mtc_conv_call_fails)</counter>
          <counter alias="mtc_strea_call_atts" symmetrical="true">SUM(mtc_strea_call_atts)</counter>
          <counter alias="mtc_strea_call_fails" symmetrical="true">SUM(mtc_strea_call_fails)</counter>
          <counter alias="mtc_inter_call_atts" symmetrical="true">SUM(mtc_inter_call_atts)</counter>
          <counter alias="mtc_inter_call_fails" symmetrical="true">SUM(mtc_inter_call_fails)</counter>
          <counter alias="mtc_backg_call_atts" symmetrical="true">SUM(mtc_backg_call_atts)</counter>
          <counter alias="mtc_backg_call_fails" symmetrical="true">SUM(mtc_backg_call_fails)</counter>
          <counter alias="emergency_call_atts" symmetrical="true">SUM(emergency_call_atts)</counter>
          <counter alias="emergency_call_fails" symmetrical="true">SUM(emergency_call_fails)</counter>
          <counter alias="intr_rat_cell_re_sel_atts" symmetrical="true">SUM(intr_rat_cell_re_sel_atts)</counter>
          <counter alias="intr_rat_cell_re_sel_fails" symmetrical="true">SUM(intr_rat_cell_re_sel_fails)</counter>
          <counter alias="cell_chng_ord_atts" symmetrical="true">SUM(cell_chng_ord_atts)</counter>
          <counter alias="cell_chng_ord_fails" symmetrical="true">SUM(cell_chng_ord_fails)</counter>
          <counter alias="registration_atts" symmetrical="true">SUM(registration_atts)</counter>
          <counter alias="registration_fails" symmetrical="true">SUM(registration_fails)</counter>
          <counter alias="detach_atts" symmetrical="true">SUM(detach_atts)</counter>
          <counter alias="detach_fails" symmetrical="true">SUM(detach_fails)</counter>
          <counter alias="moc_high_prior_sign_atts" symmetrical="true">SUM(moc_high_prior_sign_atts)</counter>
          <counter alias="moc_high_prior_sign_fails" symmetrical="true">SUM(moc_high_prior_sign_fails)</counter>
          <counter alias="mtc_high_prior_sign_atts" symmetrical="true">SUM(mtc_high_prior_sign_atts)</counter>
          <counter alias="mtc_high_prior_sign_fails" symmetrical="true">SUM(mtc_high_prior_sign_fails)</counter>
          <counter alias="moc_low_prior_sign_atts" symmetrical="true">SUM(moc_low_prior_sign_atts)</counter>
          <counter alias="moc_low_prior_sign_fails" symmetrical="true">SUM(moc_low_prior_sign_fails)</counter>
          <counter alias="mtc_low_prior_sign_atts" symmetrical="true">SUM(mtc_low_prior_sign_atts)</counter>
          <counter alias="mtc_low_prior_sign_fails" symmetrical="true">SUM(mtc_low_prior_sign_fails)</counter>
          <counter alias="call_re_estab_atts" symmetrical="true">SUM(call_re_estab_atts)</counter>
          <counter alias="call_re_estab_fails" symmetrical="true">SUM(call_re_estab_fails)</counter>
          <counter alias="mtc_cause_unknown_atts" symmetrical="true">SUM(mtc_cause_unknown_atts)</counter>
          <counter alias="mtc_cause_unknown_fails" symmetrical="true">SUM(mtc_cause_unknown_fails)</counter>
          <counter alias="srnc_reloc_atts" symmetrical="true">SUM(srnc_reloc_atts)</counter>
          <counter alias="srnc_reloc_fails" symmetrical="true">SUM(srnc_reloc_fails)</counter>
          <counter alias="intra_freq_hho_atts" symmetrical="true">SUM(intra_freq_hho_atts)</counter>
          <counter alias="intra_freq_hho_fails" symmetrical="true">SUM(intra_freq_hho_fails)</counter>
          <counter alias="rab_stp_att_cs_voice" symmetrical="true">SUM(rab_stp_att_cs_voice)</counter>
          <counter alias="rab_stp_att_cs_conv" symmetrical="true">SUM(rab_stp_att_cs_conv)</counter>
          <counter alias="rab_stp_att_cs_strea" symmetrical="true">SUM(rab_stp_att_cs_strea)</counter>
          <counter alias="rab_stp_att_ps_conv" symmetrical="true">SUM(rab_stp_att_ps_conv)</counter>
          <counter alias="RAB_STP_ATT_PS_STREA" symmetrical="true">SUM(RAB_STP_ATT_PS_STREA)</counter>
          <counter alias="rab_stp_att_ps_inter" symmetrical="true">SUM(rab_stp_att_ps_inter)</counter>
          <counter alias="RAB_STP_ATT_PS_BACKG" symmetrical="true">SUM(RAB_STP_ATT_PS_BACKG)</counter>
          <counter alias="rab_stp_comp_cs_voice" symmetrical="true">SUM(rab_stp_comp_cs_voice)</counter>
          <counter alias="rab_stp_comp_cs_conv" symmetrical="true">SUM(rab_stp_comp_cs_conv)</counter>
          <counter alias="RAB_STP_COMP_CS_STREA" symmetrical="true">SUM(RAB_STP_COMP_CS_STREA)</counter>
          <counter alias="rab_stp_comp_ps_conv" symmetrical="true">SUM(rab_stp_comp_ps_conv)</counter>
          <counter alias="rab_stp_comp_ps_strea" symmetrical="true">SUM(rab_stp_comp_ps_strea)</counter>
          <counter alias="rab_stp_comp_ps_inter" symmetrical="true">SUM(rab_stp_comp_ps_inter)</counter>
          <counter alias="rab_stp_comp_ps_backg" symmetrical="true">SUM(rab_stp_comp_ps_backg)</counter>
          <counter alias="rab_stp_fail_cs_voice_ac" symmetrical="true">SUM(rab_stp_fail_cs_voice_ac)</counter>
          <counter alias="rab_stp_fail_cs_voice_bts" symmetrical="true">SUM(rab_stp_fail_cs_voice_bts)</counter>
          <counter alias="rab_stp_fail_cs_voice_trans" symmetrical="true">SUM(rab_stp_fail_cs_voice_trans)</counter>
          <counter alias="rab_stp_fail_cs_voice_rnc" symmetrical="true">SUM(rab_stp_fail_cs_voice_rnc)</counter>
          <counter alias="rab_stp_fail_cs_voice_frozbs" symmetrical="true">SUM(rab_stp_fail_cs_voice_frozbs)</counter>
          <counter alias="rab_stp_fail_cs_conv_ac" symmetrical="true">SUM(rab_stp_fail_cs_conv_ac)</counter>
          <counter alias="rab_stp_fail_cs_conv_bts" symmetrical="true">SUM(rab_stp_fail_cs_conv_bts)</counter>
          <counter alias="rab_stp_fail_cs_conv_trans" symmetrical="true">SUM(rab_stp_fail_cs_conv_trans)</counter>
          <counter alias="rab_stp_fail_cs_conv_rnc" symmetrical="true">SUM(rab_stp_fail_cs_conv_rnc)</counter>
          <counter alias="rab_stp_fail_cs_conv_frozbs" symmetrical="true">SUM(rab_stp_fail_cs_conv_frozbs)</counter>
          <counter alias="rab_stp_fail_cs_strea_ac" symmetrical="true">SUM(rab_stp_fail_cs_strea_ac)</counter>
          <counter alias="rab_stp_fail_cs_strea_bts" symmetrical="true">SUM(rab_stp_fail_cs_strea_bts)</counter>
          <counter alias="rab_stp_fail_cs_strea_trans" symmetrical="true">SUM(rab_stp_fail_cs_strea_trans)</counter>
          <counter alias="rab_stp_fail_cs_strea_rnc" symmetrical="true">SUM(rab_stp_fail_cs_strea_rnc)</counter>
          <counter alias="rab_stp_fail_cs_strea_frozbs" symmetrical="true">SUM(rab_stp_fail_cs_strea_frozbs)</counter>
          <counter alias="rab_stp_fail_ps_conv_ac" symmetrical="true">SUM(rab_stp_fail_ps_conv_ac)</counter>
          <counter alias="rab_stp_fail_ps_conv_bts" symmetrical="true">SUM(rab_stp_fail_ps_conv_bts)</counter>
          <counter alias="rab_stp_fail_ps_conv_trans" symmetrical="true">SUM(rab_stp_fail_ps_conv_trans)</counter>
          <counter alias="rab_stp_fail_ps_conv_rnc" symmetrical="true">SUM(rab_stp_fail_ps_conv_rnc)</counter>
          <counter alias="rab_stp_fail_ps_conv_frozbs" symmetrical="true">SUM(rab_stp_fail_ps_conv_frozbs)</counter>
          <counter alias="rab_stp_fail_ps_strea_ac" symmetrical="true">SUM(rab_stp_fail_ps_strea_ac)</counter>
          <counter alias="rab_stp_fail_ps_strea_bts" symmetrical="true">SUM(rab_stp_fail_ps_strea_bts)</counter>
          <counter alias="rab_stp_fail_ps_strea_trans" symmetrical="true">SUM(rab_stp_fail_ps_strea_trans)</counter>
          <counter alias="rab_stp_fail_ps_strea_rnc" symmetrical="true">SUM(rab_stp_fail_ps_strea_rnc)</counter>
          <counter alias="rab_stp_fail_ps_strea_frozbs" symmetrical="true">SUM(rab_stp_fail_ps_strea_frozbs)</counter>
          <counter alias="rab_stp_fail_ps_inter_ac" symmetrical="true">SUM(rab_stp_fail_ps_inter_ac)</counter>
          <counter alias="rab_stp_fail_ps_inter_trans" symmetrical="true">SUM(rab_stp_fail_ps_inter_trans)</counter>
          <counter alias="rab_stp_fail_ps_inter_rnc" symmetrical="true">SUM(rab_stp_fail_ps_inter_rnc)</counter>
          <counter alias="rab_stp_fail_ps_inter_anch" symmetrical="true">SUM(rab_stp_fail_ps_inter_anch)</counter>
          <counter alias="rab_stp_fail_ps_inter_frozbs" symmetrical="true">SUM(rab_stp_fail_ps_inter_frozbs)</counter>
          <counter alias="rab_stp_fail_ps_backg_ac" symmetrical="true">SUM(rab_stp_fail_ps_backg_ac)</counter>
          <counter alias="rab_stp_fail_ps_backg_trans" symmetrical="true">SUM(rab_stp_fail_ps_backg_trans)</counter>
          <counter alias="rab_stp_fail_ps_backg_rnc" symmetrical="true">SUM(rab_stp_fail_ps_backg_rnc)</counter>
          <counter alias="rab_stp_fail_ps_backg_anch" symmetrical="true">SUM(rab_stp_fail_ps_backg_anch)</counter>
          <counter alias="rab_stp_fail_ps_backg_frozbs" symmetrical="true">SUM(rab_stp_fail_ps_backg_frozbs)</counter>
          <counter alias="rab_acc_comp_cs_voice" symmetrical="true">SUM(rab_acc_comp_cs_voice)</counter>
          <counter alias="rab_acc_comp_cs_conv" symmetrical="true">SUM(rab_acc_comp_cs_conv)</counter>
          <counter alias="rab_acc_comp_cs_strea" symmetrical="true">SUM(rab_acc_comp_cs_strea)</counter>
          <counter alias="rab_acc_comp_ps_conv" symmetrical="true">SUM(rab_acc_comp_ps_conv)</counter>
          <counter alias="rab_acc_comp_ps_strea" symmetrical="true">SUM(rab_acc_comp_ps_strea)</counter>
          <counter alias="rab_acc_comp_ps_inter" symmetrical="true">SUM(rab_acc_comp_ps_inter)</counter>
          <counter alias="rab_acc_comp_ps_backg" symmetrical="true">SUM(rab_acc_comp_ps_backg)</counter>
          <counter alias="rab_acc_fail_cs_voice_ms" symmetrical="true">SUM(rab_acc_fail_cs_voice_ms)</counter>
          <counter alias="rab_acc_fail_cs_voice_rnc" symmetrical="true">SUM(rab_acc_fail_cs_voice_rnc)</counter>
          <counter alias="rab_acc_fail_cs_conv_ms" symmetrical="true">SUM(rab_acc_fail_cs_conv_ms)</counter>
          <counter alias="rab_acc_fail_cs_conv_rnc" symmetrical="true">SUM(rab_acc_fail_cs_conv_rnc)</counter>
          <counter alias="rab_acc_fail_cs_strea_ms" symmetrical="true">SUM(rab_acc_fail_cs_strea_ms)</counter>
          <counter alias="rab_acc_fail_cs_strea_rnc" symmetrical="true">SUM(rab_acc_fail_cs_strea_rnc)</counter>
          <counter alias="rab_acc_fail_ps_conv_ms" symmetrical="true">SUM(rab_acc_fail_ps_conv_ms)</counter>
          <counter alias="rab_acc_fail_ps_conv_rnc" symmetrical="true">SUM(rab_acc_fail_ps_conv_rnc)</counter>
          <counter alias="rab_acc_fail_ps_strea_ms" symmetrical="true">SUM(rab_acc_fail_ps_strea_ms)</counter>
          <counter alias="rab_acc_fail_ps_strea_rnc" symmetrical="true">SUM(rab_acc_fail_ps_strea_rnc)</counter>
          <counter alias="rab_acc_fail_ps_inter_ms" symmetrical="true">SUM(rab_acc_fail_ps_inter_ms)</counter>
          <counter alias="rab_acc_fail_ps_inter_rnc" symmetrical="true">SUM(rab_acc_fail_ps_inter_rnc)</counter>
          <counter alias="rab_acc_fail_ps_backg_ms" symmetrical="true">SUM(rab_acc_fail_ps_backg_ms)</counter>
          <counter alias="rab_acc_fail_ps_backg_rnc" symmetrical="true">SUM(rab_acc_fail_ps_backg_rnc)</counter>
          <counter alias="rab_act_comp_cs_voice" symmetrical="true">SUM(rab_act_comp_cs_voice)</counter>
          <counter alias="rab_act_comp_cs_conv" symmetrical="true">SUM(rab_act_comp_cs_conv)</counter>
          <counter alias="rab_act_comp_cs_strea" symmetrical="true">SUM(rab_act_comp_cs_strea)</counter>
          <counter alias="rab_act_comp_ps_conv" symmetrical="true">SUM(rab_act_comp_ps_conv)</counter>
          <counter alias="rab_act_comp_ps_strea" symmetrical="true">SUM(rab_act_comp_ps_strea)</counter>
          <counter alias="rab_act_comp_ps_inter" symmetrical="true">SUM(rab_act_comp_ps_inter)</counter>
          <counter alias="rab_act_comp_ps_backg" symmetrical="true">SUM(rab_act_comp_ps_backg)</counter>
          <counter alias="rab_act_rel_cs_voice_srnc" symmetrical="true">SUM(rab_act_rel_cs_voice_srnc)</counter>
          <counter alias="rab_act_rel_cs_voice_p_emp" symmetrical="true">SUM(rab_act_rel_cs_voice_p_emp)</counter>
          <counter alias="rab_act_fail_cs_voice_iu" symmetrical="true">SUM(rab_act_fail_cs_voice_iu)</counter>
          <counter alias="rab_act_fail_cs_voice_radio" symmetrical="true">SUM(rab_act_fail_cs_voice_radio)</counter>
          <counter alias="rab_act_fail_cs_voice_bts" symmetrical="true">SUM(rab_act_fail_cs_voice_bts)</counter>
          <counter alias="rab_act_fail_cs_voice_iur" symmetrical="true">SUM(rab_act_fail_cs_voice_iur)</counter>
          <counter alias="rab_act_fail_cs_voice_i_chk" symmetrical="true">SUM(rab_act_fail_cs_voice_i_chk)</counter>
          <counter alias="rab_act_fail_cs_voice_rnc" symmetrical="true">SUM(rab_act_fail_cs_voice_rnc)</counter>
          <counter alias="rab_act_rel_cs_conv_srnc" symmetrical="true">SUM(rab_act_rel_cs_conv_srnc)</counter>
          <counter alias="rab_act_rel_cs_conv_p_emp" symmetrical="true">SUM(rab_act_rel_cs_conv_p_emp)</counter>
          <counter alias="rab_act_rel_cs_strea_srnc" symmetrical="true">SUM(rab_act_rel_cs_strea_srnc)</counter>
          <counter alias="rab_act_rel_cs_strea_p_emp" symmetrical="true">SUM(rab_act_rel_cs_strea_p_emp)</counter>
          <counter alias="rab_act_fail_cs_conv_iu" symmetrical="true">SUM(rab_act_fail_cs_conv_iu)</counter>
          <counter alias="rab_act_fail_cs_conv_radio" symmetrical="true">SUM(rab_act_fail_cs_conv_radio)</counter>
          <counter alias="rab_act_fail_cs_conv_bts" symmetrical="true">SUM(rab_act_fail_cs_conv_bts)</counter>
          <counter alias="rab_act_fail_cs_conv_iur" symmetrical="true">SUM(rab_act_fail_cs_conv_iur)</counter>
          <counter alias="rab_act_fail_cs_conv_i_chk" symmetrical="true">SUM(rab_act_fail_cs_conv_i_chk)</counter>
          <counter alias="rab_act_fail_cs_conv_rnc" symmetrical="true">SUM(rab_act_fail_cs_conv_rnc)</counter>
          <counter alias="rab_act_fail_cs_strea_iu" symmetrical="true">SUM(rab_act_fail_cs_strea_iu)</counter>
          <counter alias="rab_act_fail_cs_strea_radio" symmetrical="true">SUM(rab_act_fail_cs_strea_radio)</counter>
          <counter alias="rab_act_fail_cs_strea_bts" symmetrical="true">SUM(rab_act_fail_cs_strea_bts)</counter>
          <counter alias="rab_act_fail_cs_strea_iur" symmetrical="true">SUM(rab_act_fail_cs_strea_iur)</counter>
          <counter alias="rab_act_fail_cs_strea_i_chk" symmetrical="true">SUM(rab_act_fail_cs_strea_i_chk)</counter>
          <counter alias="rab_act_fail_cs_strea_rnc" symmetrical="true">SUM(rab_act_fail_cs_strea_rnc)</counter>
          <counter alias="rab_act_rel_ps_conv_srnc" symmetrical="true">SUM(rab_act_rel_ps_conv_srnc)</counter>
          <counter alias="rab_act_rel_ps_conv_p_emp" symmetrical="true">SUM(rab_act_rel_ps_conv_p_emp)</counter>
          <counter alias="rab_act_rel_ps_strea_srnc" symmetrical="true">SUM(rab_act_rel_ps_strea_srnc)</counter>
          <counter alias="rab_act_rel_ps_strea_p_emp" symmetrical="true">SUM(rab_act_rel_ps_strea_p_emp)</counter>
          <counter alias="rab_act_rel_ps_inter_srnc" symmetrical="true">SUM(rab_act_rel_ps_inter_srnc)</counter>
          <counter alias="rab_act_rel_ps_backg_srnc" symmetrical="true">SUM(rab_act_rel_ps_backg_srnc)</counter>
          <counter alias="rab_act_fail_ps_conv_iu" symmetrical="true">SUM(rab_act_fail_ps_conv_iu)</counter>
          <counter alias="rab_act_fail_ps_conv_radio" symmetrical="true">SUM(rab_act_fail_ps_conv_radio)</counter>
          <counter alias="rab_act_fail_ps_conv_bts" symmetrical="true">SUM(rab_act_fail_ps_conv_bts)</counter>
          <counter alias="rab_act_fail_ps_conv_iur" symmetrical="true">SUM(rab_act_fail_ps_conv_iur)</counter>
          <counter alias="rab_act_fail_ps_conv_i_chk" symmetrical="true">SUM(rab_act_fail_ps_conv_i_chk)</counter>
          <counter alias="rab_act_fail_ps_conv_rnc" symmetrical="true">SUM(rab_act_fail_ps_conv_rnc)</counter>
          <counter alias="rab_act_fail_ps_strea_iu" symmetrical="true">SUM(rab_act_fail_ps_strea_iu)</counter>
          <counter alias="rab_act_fail_ps_strea_radio" symmetrical="true">SUM(rab_act_fail_ps_strea_radio)</counter>
          <counter alias="rab_act_fail_ps_strea_bts" symmetrical="true">SUM(rab_act_fail_ps_strea_bts)</counter>
          <counter alias="rab_act_fail_ps_strea_iur" symmetrical="true">SUM(rab_act_fail_ps_strea_iur)</counter>
          <counter alias="rab_act_fail_ps_strea_i_chk" symmetrical="true">SUM(rab_act_fail_ps_strea_i_chk)</counter>
          <counter alias="rab_act_fail_ps_strea_rnc" symmetrical="true">SUM(rab_act_fail_ps_strea_rnc)</counter>
          <counter alias="rab_act_fail_ps_inter_iu" symmetrical="true">SUM(rab_act_fail_ps_inter_iu)</counter>
          <counter alias="rab_act_fail_ps_inter_radio" symmetrical="true">SUM(rab_act_fail_ps_inter_radio)</counter>
          <counter alias="rab_act_fail_ps_inter_bts" symmetrical="true">SUM(rab_act_fail_ps_inter_bts)</counter>
          <counter alias="rab_act_fail_ps_inter_iur" symmetrical="true">SUM(rab_act_fail_ps_inter_iur)</counter>
          <counter alias="rab_act_fail_ps_inter_i_chk" symmetrical="true">SUM(rab_act_fail_ps_inter_i_chk)</counter>
          <counter alias="rab_act_fail_ps_inter_rnc" symmetrical="true">SUM(rab_act_fail_ps_inter_rnc)</counter>
          <counter alias="rab_act_fail_ps_backg_iu" symmetrical="true">SUM(rab_act_fail_ps_backg_iu)</counter>
          <counter alias="rab_act_fail_ps_backg_radio" symmetrical="true">SUM(rab_act_fail_ps_backg_radio)</counter>
          <counter alias="rab_act_fail_ps_backg_bts" symmetrical="true">SUM(rab_act_fail_ps_backg_bts)</counter>
          <counter alias="rab_act_fail_ps_backg_iur" symmetrical="true">SUM(rab_act_fail_ps_backg_iur)</counter>
          <counter alias="rab_act_fail_ps_backg_i_chk" symmetrical="true">SUM(rab_act_fail_ps_backg_i_chk)</counter>
          <counter alias="rab_act_fail_ps_backg_rnc" symmetrical="true">SUM(rab_act_fail_ps_backg_rnc)</counter>
          <counter alias="rab_reconf_att" symmetrical="true">SUM(rab_reconf_att)</counter>
          <counter alias="rab_reconf_fail" symmetrical="true">SUM(rab_reconf_fail)</counter>
          <counter alias="avg_rab_hld_tm_cs_voice" symmetrical="true">SUM(avg_rab_hld_tm_cs_voice)</counter>
          <counter alias="denom_rab_hld_tm_cs_voice" symmetrical="true">SUM(denom_rab_hld_tm_cs_voice)</counter>
          <counter alias="avg_rab_hld_tm_cs_conv" symmetrical="true">SUM(avg_rab_hld_tm_cs_conv)</counter>
          <counter alias="denom_rab_hld_tm_cs_conv" symmetrical="true">SUM(denom_rab_hld_tm_cs_conv)</counter>
          <counter alias="avg_rab_hld_tm_cs_strea" symmetrical="true">SUM(avg_rab_hld_tm_cs_strea)</counter>
          <counter alias="denom_rab_hld_tm_cs_strea" symmetrical="true">SUM(denom_rab_hld_tm_cs_strea)</counter>
          <counter alias="avg_rab_hld_tm_ps_conv" symmetrical="true">SUM(avg_rab_hld_tm_ps_conv)</counter>
          <counter alias="denom_rab_hld_tm_ps_conv" symmetrical="true">SUM(denom_rab_hld_tm_ps_conv)</counter>
          <counter alias="avg_rab_hld_tm_ps_strea" symmetrical="true">SUM(avg_rab_hld_tm_ps_strea)</counter>
          <counter alias="denom_rab_hld_tm_ps_strea" symmetrical="true">SUM(denom_rab_hld_tm_ps_strea)</counter>
          <counter alias="avg_rab_hld_tm_ps_inter" symmetrical="true">SUM(avg_rab_hld_tm_ps_inter)</counter>
          <counter alias="denom_rab_hld_tm_ps_inter" symmetrical="true">SUM(denom_rab_hld_tm_ps_inter)</counter>
          <counter alias="avg_rab_hld_tm_ps_backg" symmetrical="true">SUM(avg_rab_hld_tm_ps_backg)</counter>
          <counter alias="denom_rab_hld_tm_ps_backg" symmetrical="true">SUM(denom_rab_hld_tm_ps_backg)</counter>
          <counter alias="avg_dch_hld_tm_ps_inter" symmetrical="true">SUM(avg_dch_hld_tm_ps_inter)</counter>
          <counter alias="denom_dch_hld_tm_ps_inter" symmetrical="true">SUM(denom_dch_hld_tm_ps_inter)</counter>
          <counter alias="avg_dch_hld_tm_ps_backg" symmetrical="true">SUM(avg_dch_hld_tm_ps_backg)</counter>
          <counter alias="denom_dch_hld_tm_ps_backg" symmetrical="true">SUM(denom_dch_hld_tm_ps_backg)</counter>
          <counter alias="inter_freq_hho_atts" symmetrical="true">SUM(inter_freq_hho_atts)</counter>
          <counter alias="inter_freq_hho_fails" symmetrical="true">SUM(inter_freq_hho_fails)</counter>
          <counter alias="inter_sys_hho_atts" symmetrical="true">SUM(inter_sys_hho_atts)</counter>
          <counter alias="inter_system_hho_fails" symmetrical="true">SUM(inter_system_hho_fails)</counter>
          <counter alias="avg_rrc_setup_tm" symmetrical="true">SUM(avg_rrc_setup_tm)</counter>
          <counter alias="denom_rrc_setup_tm" symmetrical="true">SUM(denom_rrc_setup_tm)</counter>
          <counter alias="avg_rab_setup_tm_cs_voice" symmetrical="true">SUM(avg_rab_setup_tm_cs_voice)</counter>
          <counter alias="denom_rab_setup_tm_cs_voice" symmetrical="true">SUM(denom_rab_setup_tm_cs_voice)</counter>
          <counter alias="avg_rab_setup_tm_cs_conv" symmetrical="true">SUM(avg_rab_setup_tm_cs_conv)</counter>
          <counter alias="denom_rab_setup_tm_cs_conv" symmetrical="true">SUM(denom_rab_setup_tm_cs_conv)</counter>
          <counter alias="avg_rab_setup_tm_cs_strea" symmetrical="true">SUM(avg_rab_setup_tm_cs_strea)</counter>
          <counter alias="denom_rab_setup_tm_cs_strea" symmetrical="true">SUM(denom_rab_setup_tm_cs_strea)</counter>
          <counter alias="avg_rab_setup_tm_ps_conv" symmetrical="true">SUM(avg_rab_setup_tm_ps_conv)</counter>
          <counter alias="denom_rab_setup_tm_ps_conv" symmetrical="true">SUM(denom_rab_setup_tm_ps_conv)</counter>
          <counter alias="avg_rab_setup_tm_ps_strea" symmetrical="true">SUM(avg_rab_setup_tm_ps_strea)</counter>
          <counter alias="denom_rab_setup_tm_ps_strea" symmetrical="true">SUM(denom_rab_setup_tm_ps_strea)</counter>
          <counter alias="avg_rab_setup_tm_ps_inter" symmetrical="true">SUM(avg_rab_setup_tm_ps_inter)</counter>
          <counter alias="denom_rab_setup_tm_ps_inter" symmetrical="true">SUM(denom_rab_setup_tm_ps_inter)</counter>
          <counter alias="avg_rab_setup_tm_ps_backg" symmetrical="true">SUM(avg_rab_setup_tm_ps_backg)</counter>
          <counter alias="denom_rab_setup_tm_ps_backg" symmetrical="true">SUM(denom_rab_setup_tm_ps_backg)</counter>
          <counter alias="rab_act_fail_multi_amr_nrt" symmetrical="true">SUM(rab_act_fail_multi_amr_nrt)</counter>
          <counter alias="rab_act_fail_multi_amr_conv" symmetrical="true">SUM(rab_act_fail_multi_amr_conv)</counter>
          <counter alias="rab_act_fail_multi_amr_stre" symmetrical="true">SUM(rab_act_fail_multi_amr_stre)</counter>
          <counter alias="rab_act_fail_multi_nrt" symmetrical="true">SUM(rab_act_fail_multi_nrt)</counter>
          <counter alias="RRC_CONN_ACC_REL_CELL_RESEL" symmetrical="true">SUM(RRC_CONN_ACC_REL_CELL_RESEL)</counter>
          <counter alias="RRC_CONN_SETUP_ATT_REPEAT" symmetrical="true">SUM(RRC_CONN_SETUP_ATT_REPEAT)</counter>
          <counter alias="RAB_ACT_COMP_PS_IPHC_CONV" symmetrical="true">SUM(RAB_ACT_COMP_PS_IPHC_CONV)</counter>
          <counter alias="RAB_ACT_COMP_PS_IPHC_STREA" symmetrical="true">SUM(RAB_ACT_COMP_PS_IPHC_STREA)</counter>
          <counter alias="RAB_ACT_COMP_PS_ROHC_CONV" symmetrical="true">SUM(RAB_ACT_COMP_PS_ROHC_CONV)</counter>
          <counter alias="RAB_ACT_COMP_PS_ROHC_STREA" symmetrical="true">SUM(RAB_ACT_COMP_PS_ROHC_STREA)</counter>
          <counter alias="RRC_CONN_STP_FAIL_RNTI_ALLO" symmetrical="true">SUM(RRC_CONN_STP_FAIL_RNTI_ALLO)</counter>
          <counter alias="RAB_ACT_COMP_CS_VOICE_SAMECE" symmetrical="true">SUM(RAB_ACT_COMP_CS_VOICE_SAMECE)</counter>
          <counter alias="RAB_ACT_COMP_CS_CONV_SAMECE" symmetrical="true">SUM(RAB_ACT_COMP_CS_CONV_SAMECE)</counter>
          <counter alias="RAB_ACT_COMP_CS_STREA_SAMECE" symmetrical="true">SUM(RAB_ACT_COMP_CS_STREA_SAMECE)</counter>
          <counter alias="RAB_ACT_COMP_PS_CONV_SAMECE" symmetrical="true">SUM(RAB_ACT_COMP_PS_CONV_SAMECE)</counter>
          <counter alias="RAB_ACT_COMP_PS_STREA_SAMECE" symmetrical="true">SUM(RAB_ACT_COMP_PS_STREA_SAMECE)</counter>
          <counter alias="RAB_ACT_COMP_PS_INTER_SAMECE" symmetrical="true">SUM(RAB_ACT_COMP_PS_INTER_SAMECE)</counter>
          <counter alias="RAB_ACT_COMP_PS_BACKG_SAMECE" symmetrical="true">SUM(RAB_ACT_COMP_PS_BACKG_SAMECE)</counter>
          <counter alias="RAB_STP_FAIL_CS_NOT_SUPP_PAR" symmetrical="true">SUM(RAB_STP_FAIL_CS_NOT_SUPP_PAR)</counter>
          <counter alias="RAB_STP_FAIL_CS_UE_CAPA" symmetrical="true">SUM(RAB_STP_FAIL_CS_UE_CAPA)</counter>
          <counter alias="RAB_STP_FAIL_PS_NOT_SUPP_PAR" symmetrical="true">SUM(RAB_STP_FAIL_PS_NOT_SUPP_PAR)</counter>
          <counter alias="RAB_STP_FAIL_PS_UE_CAPA" symmetrical="true">SUM(RAB_STP_FAIL_PS_UE_CAPA)</counter>
          <counter alias="RRC_CONN_SETUP_COMP_AFT_DIR" symmetrical="true">SUM(RRC_CONN_SETUP_COMP_AFT_DIR)</counter>
          <counter alias="RRC_CON_SETUP_COMP_DIRECTED" symmetrical="true">SUM(RRC_CON_SETUP_COMP_DIRECTED)</counter>
          <counter alias="RAB_SETUP_ATT_CS_AMR_MULTIM" symmetrical="true">SUM(RAB_SETUP_ATT_CS_AMR_MULTIM)</counter>
          <counter alias="RAB_ACC_COMP_CS_AMR_MULTIM" symmetrical="true">SUM(RAB_ACC_COMP_CS_AMR_MULTIM)</counter>
          <counter alias="RAB_SETUP_ATT_CS_CONV_64" symmetrical="true">SUM(RAB_SETUP_ATT_CS_CONV_64)</counter>
          <counter alias="RAB_ACC_COMP_CS_CONV_64" symmetrical="true">SUM(RAB_ACC_COMP_CS_CONV_64)</counter>
          <counter alias="RAB_SETUP_ATT_CS_STREAM_14_4" symmetrical="true">SUM(RAB_SETUP_ATT_CS_STREAM_14_4)</counter>
          <counter alias="RAB_ACC_COMP_CS_STREAM_14_4" symmetrical="true">SUM(RAB_ACC_COMP_CS_STREAM_14_4)</counter>
          <counter alias="RAB_SETUP_ATT_CS_STREA_57_6" symmetrical="true">SUM(RAB_SETUP_ATT_CS_STREA_57_6)</counter>
          <counter alias="RAB_ACC_COMP_CS_STREA_57_6" symmetrical="true">SUM(RAB_ACC_COMP_CS_STREA_57_6)</counter>
          <counter alias="RAB_SET_A_PS_S_16_64_G_16_64" symmetrical="true">SUM(RAB_SET_A_PS_S_16_64_G_16_64)</counter>
          <counter alias="RAB_ACC_C_PS_S_16_64_G_16_64" symmetrical="true">SUM(RAB_ACC_C_PS_S_16_64_G_16_64)</counter>
          <counter alias="RAB_SET_A_PS_S_16_64_G_8_32" symmetrical="true">SUM(RAB_SET_A_PS_S_16_64_G_8_32)</counter>
          <counter alias="RAB_ACC_C_PS_S_16_64_G_8_32" symmetrical="true">SUM(RAB_ACC_C_PS_S_16_64_G_8_32)</counter>
          <counter alias="RAB_SETUP_ATT_PS_NRT_64_64" symmetrical="true">SUM(RAB_SETUP_ATT_PS_NRT_64_64)</counter>
          <counter alias="RAB_SETUP_ATT_PS_NRT_64_128" symmetrical="true">SUM(RAB_SETUP_ATT_PS_NRT_64_128)</counter>
          <counter alias="RAB_SETUP_ATT_PS_NRT_64_256" symmetrical="true">SUM(RAB_SETUP_ATT_PS_NRT_64_256)</counter>
          <counter alias="RAB_SETUP_ATT_PS_NRT_64_384" symmetrical="true">SUM(RAB_SETUP_ATT_PS_NRT_64_384)</counter>
          <counter alias="RAB_ACC_COMP_PS_NRT_64_64" symmetrical="true">SUM(RAB_ACC_COMP_PS_NRT_64_64)</counter>
          <counter alias="RAB_ACC_COMP_PS_NRT_64_128" symmetrical="true">SUM(RAB_ACC_COMP_PS_NRT_64_128)</counter>
          <counter alias="RAB_ACC_COMP_PS_NRT_64_256" symmetrical="true">SUM(RAB_ACC_COMP_PS_NRT_64_256)</counter>
          <counter alias="RAB_ACC_COMP_PS_NRT_64_384" symmetrical="true">SUM(RAB_ACC_COMP_PS_NRT_64_384)</counter>
          <counter alias="RAB_S_A_CS_12_2_1PSNRT64_64" symmetrical="true">SUM(RAB_S_A_CS_12_2_1PSNRT64_64)</counter>
          <counter alias="RAB_S_A_CS_12_2_1PSNRT64_128" symmetrical="true">SUM(RAB_S_A_CS_12_2_1PSNRT64_128)</counter>
          <counter alias="RAB_S_A_CS_12_2_2PSNRT_I_I" symmetrical="true">SUM(RAB_S_A_CS_12_2_2PSNRT_I_I)</counter>
          <counter alias="RAB_S_A_CS_12_2_2PSNRT_I_B" symmetrical="true">SUM(RAB_S_A_CS_12_2_2PSNRT_I_B)</counter>
          <counter alias="RAB_S_A_CS_12_2_2PSNRT_B_B" symmetrical="true">SUM(RAB_S_A_CS_12_2_2PSNRT_B_B)</counter>
          <counter alias="RAB_S_A_CS_12_2_3PSNRT" symmetrical="true">SUM(RAB_S_A_CS_12_2_3PSNRT)</counter>
          <counter alias="RAB_ACCC_CS12_2_1PSNRT64_64" symmetrical="true">SUM(RAB_ACCC_CS12_2_1PSNRT64_64)</counter>
          <counter alias="RAB_ACCC_CS12_2_1PSNRT64_128" symmetrical="true">SUM(RAB_ACCC_CS12_2_1PSNRT64_128)</counter>
          <counter alias="RAB_ACCC_CS12_2_2PSNRT_I_I" symmetrical="true">SUM(RAB_ACCC_CS12_2_2PSNRT_I_I)</counter>
          <counter alias="RAB_ACCC_CS12_2_2PSNRT_I_B" symmetrical="true">SUM(RAB_ACCC_CS12_2_2PSNRT_I_B)</counter>
          <counter alias="RAB_ACCC_CS12_2_2PSNRT_B_B" symmetrical="true">SUM(RAB_ACCC_CS12_2_2PSNRT_B_B)</counter>
          <counter alias="RAB_ACCC_CS12_2_3PSNRT" symmetrical="true">SUM(RAB_ACCC_CS12_2_3PSNRT)</counter>
          <counter alias="RAB_S_A_CS_AMM_1PSNRT64_64" symmetrical="true">SUM(RAB_S_A_CS_AMM_1PSNRT64_64)</counter>
          <counter alias="RAB_S_A_CS_AMM_1PSNRT64_128" symmetrical="true">SUM(RAB_S_A_CS_AMM_1PSNRT64_128)</counter>
          <counter alias="RAB_S_A_CS_AMM_2PSNRT_I_I" symmetrical="true">SUM(RAB_S_A_CS_AMM_2PSNRT_I_I)</counter>
          <counter alias="RAB_S_A_CS_AMM_2PSNRT_I_B" symmetrical="true">SUM(RAB_S_A_CS_AMM_2PSNRT_I_B)</counter>
          <counter alias="RAB_S_A_CS_AMM_2PSNRT_B_B" symmetrical="true">SUM(RAB_S_A_CS_AMM_2PSNRT_B_B)</counter>
          <counter alias="RAB_S_A_CS_AMM_3PSNRT" symmetrical="true">SUM(RAB_S_A_CS_AMM_3PSNRT)</counter>
          <counter alias="RAB_ACCC_CS_AMM_1PSNRT64_64" symmetrical="true">SUM(RAB_ACCC_CS_AMM_1PSNRT64_64)</counter>
          <counter alias="RAB_ACCC_CS_AMM_1PSNRT64_128" symmetrical="true">SUM(RAB_ACCC_CS_AMM_1PSNRT64_128)</counter>
          <counter alias="RAB_ACCC_CS_AMM_2PSNRT_I_I" symmetrical="true">SUM(RAB_ACCC_CS_AMM_2PSNRT_I_I)</counter>
          <counter alias="RAB_ACCC_CS_AMM_2PSNRT_I_B" symmetrical="true">SUM(RAB_ACCC_CS_AMM_2PSNRT_I_B)</counter>
          <counter alias="RAB_ACCC_CS_AMM_2PSNRT_B_B" symmetrical="true">SUM(RAB_ACCC_CS_AMM_2PSNRT_B_B)</counter>
          <counter alias="RAB_ACCC_CS_AMM_3PSNRT" symmetrical="true">SUM(RAB_ACCC_CS_AMM_3PSNRT)</counter>
          <counter alias="RAB_SETUP_ATT_2PSNRT_I_I" symmetrical="true">SUM(RAB_SETUP_ATT_2PSNRT_I_I)</counter>
          <counter alias="RAB_SETUP_ATT_2PSNRT_I_B" symmetrical="true">SUM(RAB_SETUP_ATT_2PSNRT_I_B)</counter>
          <counter alias="RAB_SETUP_ATT_2PSNRT_B_B" symmetrical="true">SUM(RAB_SETUP_ATT_2PSNRT_B_B)</counter>
          <counter alias="RAB_ACC_COMPL_2PSNRT_I_I" symmetrical="true">SUM(RAB_ACC_COMPL_2PSNRT_I_I)</counter>
          <counter alias="RAB_ACC_COMPL_2PSNRT_I_B" symmetrical="true">SUM(RAB_ACC_COMPL_2PSNRT_I_B)</counter>
          <counter alias="RAB_ACC_COMPL_2PSNRT_B_B" symmetrical="true">SUM(RAB_ACC_COMPL_2PSNRT_B_B)</counter>
          <counter alias="RAB_SETUP_ATT_3PSNRT" symmetrical="true">SUM(RAB_SETUP_ATT_3PSNRT)</counter>
          <counter alias="RAB_ACC_COMPL_3PSNRT" symmetrical="true">SUM(RAB_ACC_COMPL_3PSNRT)</counter>
          <counter alias="RAB_S_A_PSS_GEM_1PSNRT64_64" symmetrical="true">SUM(RAB_S_A_PSS_GEM_1PSNRT64_64)</counter>
          <counter alias="RAB_S_A_PSS_GEM_1PSNRT64_128" symmetrical="true">SUM(RAB_S_A_PSS_GEM_1PSNRT64_128)</counter>
          <counter alias="RAB_S_A_PSS_GEM_1PSNRT64_384" symmetrical="true">SUM(RAB_S_A_PSS_GEM_1PSNRT64_384)</counter>
          <counter alias="RAB_S_A_PSS_GLM_1PSNRT64_64" symmetrical="true">SUM(RAB_S_A_PSS_GLM_1PSNRT64_64)</counter>
          <counter alias="RAB_S_A_PSS_GLM_1PSNRT64_128" symmetrical="true">SUM(RAB_S_A_PSS_GLM_1PSNRT64_128)</counter>
          <counter alias="RAB_S_A_PSS_GLM_1PSNRT64_384" symmetrical="true">SUM(RAB_S_A_PSS_GLM_1PSNRT64_384)</counter>
          <counter alias="RAB_ACC_PSS_GEM_1PSNRT64_64" symmetrical="true">SUM(RAB_ACC_PSS_GEM_1PSNRT64_64)</counter>
          <counter alias="RAB_ACC_PSS_GEM_1PSNRT64_128" symmetrical="true">SUM(RAB_ACC_PSS_GEM_1PSNRT64_128)</counter>
          <counter alias="RAB_ACC_PSS_GEM_1PSNRT64_384" symmetrical="true">SUM(RAB_ACC_PSS_GEM_1PSNRT64_384)</counter>
          <counter alias="RAB_ACC_PSS_GLM_1PSNRT64_64" symmetrical="true">SUM(RAB_ACC_PSS_GLM_1PSNRT64_64)</counter>
          <counter alias="RAB_ACC_PSS_GLM_1PSNRT64_128" symmetrical="true">SUM(RAB_ACC_PSS_GLM_1PSNRT64_128)</counter>
          <counter alias="RAB_ACC_PSS_GLM_1PSNRT64_384" symmetrical="true">SUM(RAB_ACC_PSS_GLM_1PSNRT64_384)</counter>
          <counter alias="RAB_S_A_CS_CONV_1PSNRT64_64" symmetrical="true">SUM(RAB_S_A_CS_CONV_1PSNRT64_64)</counter>
          <counter alias="RAB_S_A_CS_CONV_1PSNRT64_128" symmetrical="true">SUM(RAB_S_A_CS_CONV_1PSNRT64_128)</counter>
          <counter alias="RAB_S_A_CS_CONV_1PSNRT64_384" symmetrical="true">SUM(RAB_S_A_CS_CONV_1PSNRT64_384)</counter>
          <counter alias="RAB_ACC_CS_CONV_1PSNRT64_64" symmetrical="true">SUM(RAB_ACC_CS_CONV_1PSNRT64_64)</counter>
          <counter alias="RAB_ACC_CS_CONV_1PSNRT64_128" symmetrical="true">SUM(RAB_ACC_CS_CONV_1PSNRT64_128)</counter>
          <counter alias="RAB_ACC_CS_CONV_1PSNRT64_384" symmetrical="true">SUM(RAB_ACC_CS_CONV_1PSNRT64_384)</counter>
          <counter alias="RAB_ACT_COMPL_CS_AMR_MULTIM" symmetrical="true">SUM(RAB_ACT_COMPL_CS_AMR_MULTIM)</counter>
          <counter alias="RAB_ACT_COMPL_CS_CONV_64" symmetrical="true">SUM(RAB_ACT_COMPL_CS_CONV_64)</counter>
          <counter alias="RAB_ACT_COMPL_CS_STREAM_14_4" symmetrical="true">SUM(RAB_ACT_COMPL_CS_STREAM_14_4)</counter>
          <counter alias="RAB_ACT_COMPL_CS_STREAM_57_6" symmetrical="true">SUM(RAB_ACT_COMPL_CS_STREAM_57_6)</counter>
          <counter alias="RAB_ACT_C_PS_S_16_64_G_16_64" symmetrical="true">SUM(RAB_ACT_C_PS_S_16_64_G_16_64)</counter>
          <counter alias="RAB_ACT_C_PS_S_16_64_G_8_32" symmetrical="true">SUM(RAB_ACT_C_PS_S_16_64_G_8_32)</counter>
          <counter alias="RAB_ACT_COMP_PS_NRT_64_64" symmetrical="true">SUM(RAB_ACT_COMP_PS_NRT_64_64)</counter>
          <counter alias="RAB_ACT_COMP_PS_NRT_64_128" symmetrical="true">SUM(RAB_ACT_COMP_PS_NRT_64_128)</counter>
          <counter alias="RAB_ACT_COMP_PS_NRT_64_256" symmetrical="true">SUM(RAB_ACT_COMP_PS_NRT_64_256)</counter>
          <counter alias="RAB_ACT_COMP_PS_NRT_64_384" symmetrical="true">SUM(RAB_ACT_COMP_PS_NRT_64_384)</counter>
          <counter alias="RAB_ACTC_CS12_2_1PSNRT64_64" symmetrical="true">SUM(RAB_ACTC_CS12_2_1PSNRT64_64)</counter>
          <counter alias="RAB_ACTC_CS12_2_1PSNRT64_128" symmetrical="true">SUM(RAB_ACTC_CS12_2_1PSNRT64_128)</counter>
          <counter alias="RAB_ACTC_CS12_2_2PSNRT_I_I" symmetrical="true">SUM(RAB_ACTC_CS12_2_2PSNRT_I_I)</counter>
          <counter alias="RAB_ACTC_CS12_2_2PSNRT_I_B" symmetrical="true">SUM(RAB_ACTC_CS12_2_2PSNRT_I_B)</counter>
          <counter alias="RAB_ACTC_CS12_2_2PSNRT_B_B" symmetrical="true">SUM(RAB_ACTC_CS12_2_2PSNRT_B_B)</counter>
          <counter alias="RAB_ACTC_CS12_2_3PSNRT" symmetrical="true">SUM(RAB_ACTC_CS12_2_3PSNRT)</counter>
          <counter alias="RAB_ACTC_CS_AMM_1PSNRT64_64" symmetrical="true">SUM(RAB_ACTC_CS_AMM_1PSNRT64_64)</counter>
          <counter alias="RAB_ACTC_CS_AMM_1PSNRT64_128" symmetrical="true">SUM(RAB_ACTC_CS_AMM_1PSNRT64_128)</counter>
          <counter alias="RAB_ACTC_CS_AMM_2PSNRT_I_I" symmetrical="true">SUM(RAB_ACTC_CS_AMM_2PSNRT_I_I)</counter>
          <counter alias="RAB_ACTC_CS_AMM_2PSNRT_I_B" symmetrical="true">SUM(RAB_ACTC_CS_AMM_2PSNRT_I_B)</counter>
          <counter alias="RAB_ACTC_CS_AMM_2PSNRT_B_B" symmetrical="true">SUM(RAB_ACTC_CS_AMM_2PSNRT_B_B)</counter>
          <counter alias="RAB_ACTC_CS_AMM_3PSNRT" symmetrical="true">SUM(RAB_ACTC_CS_AMM_3PSNRT)</counter>
          <counter alias="RAB_ACT_COMPL_2PSNRT_I_I" symmetrical="true">SUM(RAB_ACT_COMPL_2PSNRT_I_I)</counter>
          <counter alias="RAB_ACT_COMPL_2PSNRT_I_B" symmetrical="true">SUM(RAB_ACT_COMPL_2PSNRT_I_B)</counter>
          <counter alias="RAB_ACT_COMPL_2PSNRT_B_B" symmetrical="true">SUM(RAB_ACT_COMPL_2PSNRT_B_B)</counter>
          <counter alias="RAB_ACT_COMPL_3PSNRT" symmetrical="true">SUM(RAB_ACT_COMPL_3PSNRT)</counter>
          <counter alias="RAB_ACT_PSS_GEM_1PSNRT64_64" symmetrical="true">SUM(RAB_ACT_PSS_GEM_1PSNRT64_64)</counter>
          <counter alias="RAB_ACT_PSS_GEM_1PSNRT64_128" symmetrical="true">SUM(RAB_ACT_PSS_GEM_1PSNRT64_128)</counter>
          <counter alias="RAB_ACT_PSS_GEM_1PSNRT64_384" symmetrical="true">SUM(RAB_ACT_PSS_GEM_1PSNRT64_384)</counter>
          <counter alias="RAB_ACT_PSS_GLM_1PSNRT64_64" symmetrical="true">SUM(RAB_ACT_PSS_GLM_1PSNRT64_64)</counter>
          <counter alias="RAB_ACT_PSS_GLM_1PSNRT64_128" symmetrical="true">SUM(RAB_ACT_PSS_GLM_1PSNRT64_128)</counter>
          <counter alias="RAB_ACT_PSS_GLM_1PSNRT64_384" symmetrical="true">SUM(RAB_ACT_PSS_GLM_1PSNRT64_384)</counter>
          <counter alias="RAB_ACT_CS_CONV_1PSNRT64_64" symmetrical="true">SUM(RAB_ACT_CS_CONV_1PSNRT64_64)</counter>
          <counter alias="RAB_ACT_CS_CONV_1PSNRT64_128" symmetrical="true">SUM(RAB_ACT_CS_CONV_1PSNRT64_128)</counter>
          <counter alias="RAB_ACT_CS_CONV_1PSNRT64_384" symmetrical="true">SUM(RAB_ACT_CS_CONV_1PSNRT64_384)</counter>
          <counter alias="RAB_HOLD_TIME_CS_AMR_MULTIM" symmetrical="true">SUM(RAB_HOLD_TIME_CS_AMR_MULTIM)</counter>
          <counter alias="DENOM_FOR_CS_AMR_MULTIM" symmetrical="true">SUM(DENOM_FOR_CS_AMR_MULTIM)</counter>
          <counter alias="RAB_HOLD_TIME_CS_CONV_64" symmetrical="true">SUM(RAB_HOLD_TIME_CS_CONV_64)</counter>
          <counter alias="DENOM_FOR_CS_CONV_64" symmetrical="true">SUM(DENOM_FOR_CS_CONV_64)</counter>
          <counter alias="RAB_HOLD_TIME_CS_STREAM_14_4" symmetrical="true">SUM(RAB_HOLD_TIME_CS_STREAM_14_4)</counter>
          <counter alias="DENOM_FOR_CS_STREAM_14_4" symmetrical="true">SUM(DENOM_FOR_CS_STREAM_14_4)</counter>
          <counter alias="RAB_HOLD_TIME_CS_STREAM_57_6" symmetrical="true">SUM(RAB_HOLD_TIME_CS_STREAM_57_6)</counter>
          <counter alias="DENOM_FOR_CS_STREAM_57_6" symmetrical="true">SUM(DENOM_FOR_CS_STREAM_57_6)</counter>
          <counter alias="RAB_SETUP_ATT_PS_NRT_128_64" symmetrical="true">SUM(RAB_SETUP_ATT_PS_NRT_128_64)</counter>
          <counter alias="RAB_SETUP_ATT_PS_NRT_128_128" symmetrical="true">SUM(RAB_SETUP_ATT_PS_NRT_128_128)</counter>
          <counter alias="RAB_SETUP_ATT_PS_NRT_128_384" symmetrical="true">SUM(RAB_SETUP_ATT_PS_NRT_128_384)</counter>
          <counter alias="RAB_SETUP_ATT_PS_NRT_384_384" symmetrical="true">SUM(RAB_SETUP_ATT_PS_NRT_384_384)</counter>
          <counter alias="RAB_SETUP_ATT_PS_NRT_384_64" symmetrical="true">SUM(RAB_SETUP_ATT_PS_NRT_384_64)</counter>
          <counter alias="RAB_ACC_COMP_PS_NRT_128_64" symmetrical="true">SUM(RAB_ACC_COMP_PS_NRT_128_64)</counter>
          <counter alias="RAB_ACC_COMP_PS_NRT_128_128" symmetrical="true">SUM(RAB_ACC_COMP_PS_NRT_128_128)</counter>
          <counter alias="RAB_ACC_COMP_PS_NRT_128_384" symmetrical="true">SUM(RAB_ACC_COMP_PS_NRT_128_384)</counter>
          <counter alias="RAB_ACC_COMP_PS_NRT_384_384" symmetrical="true">SUM(RAB_ACC_COMP_PS_NRT_384_384)</counter>
          <counter alias="RAB_ACC_COMP_PS_NRT_384_64" symmetrical="true">SUM(RAB_ACC_COMP_PS_NRT_384_64)</counter>
          <counter alias="RAB_ACT_COMP_PS_NRT_128_64" symmetrical="true">SUM(RAB_ACT_COMP_PS_NRT_128_64)</counter>
          <counter alias="RAB_ACT_COMP_PS_NRT_128_128" symmetrical="true">SUM(RAB_ACT_COMP_PS_NRT_128_128)</counter>
          <counter alias="RAB_ACT_COMP_PS_NRT_128_384" symmetrical="true">SUM(RAB_ACT_COMP_PS_NRT_128_384)</counter>
          <counter alias="RAB_ACT_COMP_PS_NRT_384_384" symmetrical="true">SUM(RAB_ACT_COMP_PS_NRT_384_384)</counter>
          <counter alias="RAB_ACT_COMP_PS_NRT_384_64" symmetrical="true">SUM(RAB_ACT_COMP_PS_NRT_384_64)</counter>
          <counter alias="UE_SUPPORT_FOR_IPHC" symmetrical="true">SUM(UE_SUPPORT_FOR_IPHC)</counter>
          <counter alias="UE_SUPPORT_FOR_ROHC" symmetrical="true">SUM(UE_SUPPORT_FOR_ROHC)</counter>
          <counter alias="RRC_CONN_ACT_FAIL_UE" symmetrical="true">SUM(RRC_CONN_ACT_FAIL_UE)</counter>
          <counter alias="RAB_ACT_FAIL_CS_VOICE_UE" symmetrical="true">SUM(RAB_ACT_FAIL_CS_VOICE_UE)</counter>
          <counter alias="RAB_ACT_FAIL_CS_CONV_UE" symmetrical="true">SUM(RAB_ACT_FAIL_CS_CONV_UE)</counter>
          <counter alias="RAB_ACT_FAIL_CS_STREA_UE" symmetrical="true">SUM(RAB_ACT_FAIL_CS_STREA_UE)</counter>
          <counter alias="RAB_ACT_FAIL_PS_CONV_UE" symmetrical="true">SUM(RAB_ACT_FAIL_PS_CONV_UE)</counter>
          <counter alias="RAB_ACT_FAIL_PS_STREA_UE" symmetrical="true">SUM(RAB_ACT_FAIL_PS_STREA_UE)</counter>
          <counter alias="RAB_ACT_FAIL_PS_INTER_UE" symmetrical="true">SUM(RAB_ACT_FAIL_PS_INTER_UE)</counter>
          <counter alias="RAB_ACT_FAIL_PS_BACKG_UE" symmetrical="true">SUM(RAB_ACT_FAIL_PS_BACKG_UE)</counter>
          <counter alias="SPARE_1_SERVICELEVEL" symmetrical="true">SUM(SPARE_1_SERVICELEVEL)</counter>
          <counter alias="SPARE_2_SERVICELEVEL" symmetrical="true">SUM(SPARE_2_SERVICELEVEL)</counter>
          <counter alias="SPARE_3_SERVICELEVEL" symmetrical="true">SUM(SPARE_3_SERVICELEVEL)</counter>
          <counter alias="SPARE_4_SERVICELEVEL" symmetrical="true">SUM(SPARE_4_SERVICELEVEL)</counter>
          <counter alias="SPARE_5_SERVICELEVEL" symmetrical="true">SUM(SPARE_5_SERVICELEVEL)</counter>
          <counter alias="ACCESS_STRATUM_REL_IND_4" symmetrical="true">SUM(ACCESS_STRATUM_REL_IND_4)</counter>
          <counter alias="ACCESS_STRATUM_REL_IND_99" symmetrical="true">SUM(ACCESS_STRATUM_REL_IND_99)</counter>
          <counter alias="UE_SUPPORT_GSM" symmetrical="true">SUM(UE_SUPPORT_GSM)</counter>
          <counter alias="UE_SUPPORT_MULTICARRIER_CDMA" symmetrical="true">SUM(UE_SUPPORT_MULTICARRIER_CDMA)</counter>
          <counter alias="UE_RXTX_POSITION_CAPAB_2" symmetrical="true">SUM(UE_RXTX_POSITION_CAPAB_2)</counter>
          <counter alias="RAB_STP_COMP_PS_STRE_GUAR_UL" symmetrical="true">SUM(RAB_STP_COMP_PS_STRE_GUAR_UL)</counter>
          <counter alias="RAB_STP_COMP_PS_STRE_GUAR_DL" symmetrical="true">SUM(RAB_STP_COMP_PS_STRE_GUAR_DL)</counter>
          <counter alias="RAB_STP_COMP_CS_STRE_GUAR_UL" symmetrical="true">SUM(RAB_STP_COMP_CS_STRE_GUAR_UL)</counter>
          <counter alias="RAB_STP_COMP_CS_STRE_GUAR_DL" symmetrical="true">SUM(RAB_STP_COMP_CS_STRE_GUAR_DL)</counter>
          <counter alias="RAB_ACC_COMP_CS_STRE_GUAR_UL" symmetrical="true">SUM(RAB_ACC_COMP_CS_STRE_GUAR_UL)</counter>
          <counter alias="RAB_ACC_COMP_CS_STRE_GUAR_DL" symmetrical="true">SUM(RAB_ACC_COMP_CS_STRE_GUAR_DL)</counter>
          <counter alias="RAB_ACC_COMP_PS_STRE_GUAR_UL" symmetrical="true">SUM(RAB_ACC_COMP_PS_STRE_GUAR_UL)</counter>
          <counter alias="RAB_ACC_COMP_PS_STRE_GUAR_DL" symmetrical="true">SUM(RAB_ACC_COMP_PS_STRE_GUAR_DL)</counter>
          <counter alias="RAB_ACT_COMP_CS_STRE_GUAR_UL" symmetrical="true">SUM(RAB_ACT_COMP_CS_STRE_GUAR_UL)</counter>
          <counter alias="RAB_ACT_COMP_CS_STRE_GUAR_DL" symmetrical="true">SUM(RAB_ACT_COMP_CS_STRE_GUAR_DL)</counter>
          <counter alias="RAB_ACT_COMP_PS_STRE_GUAR_UL" symmetrical="true">SUM(RAB_ACT_COMP_PS_STRE_GUAR_UL)</counter>
          <counter alias="RAB_ACT_COMP_PS_STRE_GUAR_DL" symmetrical="true">SUM(RAB_ACT_COMP_PS_STRE_GUAR_DL)</counter>
          <counter alias="RRC_CONN_ACT_REL_UNSPEC_CN" symmetrical="true">SUM(RRC_CONN_ACT_REL_UNSPEC_CN)</counter>
          <counter alias="RAB_ACT_REL_CS_V_UNSPE_ER_CN" symmetrical="true">SUM(RAB_ACT_REL_CS_V_UNSPE_ER_CN)</counter>
          <counter alias="RAB_ACT_REL_CS_C_UNSPE_ER_CN" symmetrical="true">SUM(RAB_ACT_REL_CS_C_UNSPE_ER_CN)</counter>
          <counter alias="RAB_ACT_REL_CS_S_UNSPE_ER_CN" symmetrical="true">SUM(RAB_ACT_REL_CS_S_UNSPE_ER_CN)</counter>
          <counter alias="RAB_ACT_REL_CS_S_GUL_UNSP_CN" symmetrical="true">SUM(RAB_ACT_REL_CS_S_GUL_UNSP_CN)</counter>
          <counter alias="RAB_ACT_REL_CS_S_GDL_UNSP_CN" symmetrical="true">SUM(RAB_ACT_REL_CS_S_GDL_UNSP_CN)</counter>
          <counter alias="RAB_ACT_REL_CS_S_GU_UL_SRNC" symmetrical="true">SUM(RAB_ACT_REL_CS_S_GU_UL_SRNC)</counter>
          <counter alias="RAB_ACT_REL_CS_S_GU_DL_SRNC" symmetrical="true">SUM(RAB_ACT_REL_CS_S_GU_DL_SRNC)</counter>
          <counter alias="RAB_ACT_REL_CS_S_GUL_PRE_EMP" symmetrical="true">SUM(RAB_ACT_REL_CS_S_GUL_PRE_EMP)</counter>
          <counter alias="RAB_ACT_REL_CS_S_GDL_PRE_EMP" symmetrical="true">SUM(RAB_ACT_REL_CS_S_GDL_PRE_EMP)</counter>
          <counter alias="RAB_ACT_REL_PS_S_UNSPE_ER_CN" symmetrical="true">SUM(RAB_ACT_REL_PS_S_UNSPE_ER_CN)</counter>
          <counter alias="RAB_ACT_REL_PS_I_UNSPE_ER_CN" symmetrical="true">SUM(RAB_ACT_REL_PS_I_UNSPE_ER_CN)</counter>
          <counter alias="RAB_ACT_REL_PS_B_UNSPE_ER_CN" symmetrical="true">SUM(RAB_ACT_REL_PS_B_UNSPE_ER_CN)</counter>
          <counter alias="RAB_ACT_REL_PS_S_GUL_UNSP_CN" symmetrical="true">SUM(RAB_ACT_REL_PS_S_GUL_UNSP_CN)</counter>
          <counter alias="RAB_ACT_REL_PS_S_GDL_UNSP_CN" symmetrical="true">SUM(RAB_ACT_REL_PS_S_GDL_UNSP_CN)</counter>
          <counter alias="RAB_ACT_REL_PS_S_GUL_SRNC" symmetrical="true">SUM(RAB_ACT_REL_PS_S_GUL_SRNC)</counter>
          <counter alias="RAB_ACT_REL_PS_S_GDL_SRNC" symmetrical="true">SUM(RAB_ACT_REL_PS_S_GDL_SRNC)</counter>
          <counter alias="RAB_ACT_REL_PS_S_GUL_PRE_EMP" symmetrical="true">SUM(RAB_ACT_REL_PS_S_GUL_PRE_EMP)</counter>
          <counter alias="RAB_ACT_REL_PS_S_GDL_PRE_EMP" symmetrical="true">SUM(RAB_ACT_REL_PS_S_GDL_PRE_EMP)</counter>
          <counter alias="RAB_S_A_CS_12_2_1PSNRT64_384" symmetrical="true">SUM(RAB_S_A_CS_12_2_1PSNRT64_384)</counter>
          <counter alias="RAB_ACCC_CS12_2_1PSNRT64_384" symmetrical="true">SUM(RAB_ACCC_CS12_2_1PSNRT64_384)</counter>
          <counter alias="RAB_ACTC_CS12_2_1PSNRT64_384" symmetrical="true">SUM(RAB_ACTC_CS12_2_1PSNRT64_384)</counter>
          <counter alias="RRC_CONN_OUT_REF_CELL" symmetrical="true">SUM(RRC_CONN_OUT_REF_CELL)</counter>
          <counter alias="RAB_CS_VOICE_OUT_REF_CELL" symmetrical="true">SUM(RAB_CS_VOICE_OUT_REF_CELL)</counter>
          <counter alias="RAB_CS_CONV_OUT_REF_CELL" symmetrical="true">SUM(RAB_CS_CONV_OUT_REF_CELL)</counter>
          <counter alias="RAB_CS_STR_OUT_REF_CELL" symmetrical="true">SUM(RAB_CS_STR_OUT_REF_CELL)</counter>
          <counter alias="RAB_PS_CONV_OUT_REF_CELL" symmetrical="true">SUM(RAB_PS_CONV_OUT_REF_CELL)</counter>
          <counter alias="RAB_PS_STR_OUT_REF_CELL" symmetrical="true">SUM(RAB_PS_STR_OUT_REF_CELL)</counter>
          <counter alias="RAB_PS_INTR_OUT_REF_CELL" symmetrical="true">SUM(RAB_PS_INTR_OUT_REF_CELL)</counter>
          <counter alias="RAB_PS_BGR_OUT_REF_CELL" symmetrical="true">SUM(RAB_PS_BGR_OUT_REF_CELL)</counter>
          <counter alias="RAB_CS_AMR122_OUT_REF_CELL" symmetrical="true">SUM(RAB_CS_AMR122_OUT_REF_CELL)</counter>
          <counter alias="RAB_CS_CONV_64_OUT_REF_CELL" symmetrical="true">SUM(RAB_CS_CONV_64_OUT_REF_CELL)</counter>
          <counter alias="RAB_CS_STR_144_OUT_REF_CELL" symmetrical="true">SUM(RAB_CS_STR_144_OUT_REF_CELL)</counter>
          <counter alias="RAB_CS_STR_576_OUT_REF_CELL" symmetrical="true">SUM(RAB_CS_STR_576_OUT_REF_CELL)</counter>
          <counter alias="PS_STR_1664_G_1664_OUT_REF_C" symmetrical="true">SUM(PS_STR_1664_G_1664_OUT_REF_C)</counter>
          <counter alias="PS_STR_1664_G_832_OUT_REF_C" symmetrical="true">SUM(PS_STR_1664_G_832_OUT_REF_C)</counter>
          <counter alias="RAB_PS_NRT_6464_OUT_REF_C" symmetrical="true">SUM(RAB_PS_NRT_6464_OUT_REF_C)</counter>
          <counter alias="RAB_PS_NRT_64128_OUT_REF_C" symmetrical="true">SUM(RAB_PS_NRT_64128_OUT_REF_C)</counter>
          <counter alias="RAB_PS_NRT_64256_OUT_REF_C" symmetrical="true">SUM(RAB_PS_NRT_64256_OUT_REF_C)</counter>
          <counter alias="RAB_PS_NRT_64384_OUT_REF_C" symmetrical="true">SUM(RAB_PS_NRT_64384_OUT_REF_C)</counter>
          <counter alias="RAB_PS_NRT_12864_OUT_REF_C" symmetrical="true">SUM(RAB_PS_NRT_12864_OUT_REF_C)</counter>
          <counter alias="RAB_PS_NRT_128128_OUT_REF_C" symmetrical="true">SUM(RAB_PS_NRT_128128_OUT_REF_C)</counter>
          <counter alias="RAB_PS_NRT_128384_OUT_REF_C" symmetrical="true">SUM(RAB_PS_NRT_128384_OUT_REF_C)</counter>
          <counter alias="RAB_PS_NRT_384384_OUT_REF_C" symmetrical="true">SUM(RAB_PS_NRT_384384_OUT_REF_C)</counter>
          <counter alias="RAB_PS_NRT_38464_OUT_REF_C" symmetrical="true">SUM(RAB_PS_NRT_38464_OUT_REF_C)</counter>
          <counter alias="RRC_CONN_IN_REF_CELL" symmetrical="true">SUM(RRC_CONN_IN_REF_CELL)</counter>
          <counter alias="RAB_CS_VOICE_IN_REF_CELL" symmetrical="true">SUM(RAB_CS_VOICE_IN_REF_CELL)</counter>
          <counter alias="RAB_CS_CONV_IN_REF_CELL" symmetrical="true">SUM(RAB_CS_CONV_IN_REF_CELL)</counter>
          <counter alias="RAB_CS_STR_IN_REF_CELL" symmetrical="true">SUM(RAB_CS_STR_IN_REF_CELL)</counter>
          <counter alias="RAB_PS_CONV_IN_REF_CELL" symmetrical="true">SUM(RAB_PS_CONV_IN_REF_CELL)</counter>
          <counter alias="RAB_PS_STR_IN_REF_CELL" symmetrical="true">SUM(RAB_PS_STR_IN_REF_CELL)</counter>
          <counter alias="RAB_PS_INTR_IN_REF_CELL" symmetrical="true">SUM(RAB_PS_INTR_IN_REF_CELL)</counter>
          <counter alias="RAB_PS_BGR_IN_REF_CELL" symmetrical="true">SUM(RAB_PS_BGR_IN_REF_CELL)</counter>
          <counter alias="RAB_CS_AMR122_IN_REF_CELL" symmetrical="true">SUM(RAB_CS_AMR122_IN_REF_CELL)</counter>
          <counter alias="RAB_CS_CONV_64_IN_REF_CELL" symmetrical="true">SUM(RAB_CS_CONV_64_IN_REF_CELL)</counter>
          <counter alias="RAB_CS_STR_144_IN_REF_CELL" symmetrical="true">SUM(RAB_CS_STR_144_IN_REF_CELL)</counter>
          <counter alias="RAB_CS_STR_576_IN_REF_CELL" symmetrical="true">SUM(RAB_CS_STR_576_IN_REF_CELL)</counter>
          <counter alias="PS_STR_1664_G_1664_IN_REF_C" symmetrical="true">SUM(PS_STR_1664_G_1664_IN_REF_C)</counter>
          <counter alias="PS_STR_1664_G_832_IN_REF_C" symmetrical="true">SUM(PS_STR_1664_G_832_IN_REF_C)</counter>
          <counter alias="RAB_PS_NRT_6464_IN_REF_C" symmetrical="true">SUM(RAB_PS_NRT_6464_IN_REF_C)</counter>
          <counter alias="RAB_PS_NRT_64128_IN_REF_C" symmetrical="true">SUM(RAB_PS_NRT_64128_IN_REF_C)</counter>
          <counter alias="RAB_PS_NRT_64256_IN_REF_C" symmetrical="true">SUM(RAB_PS_NRT_64256_IN_REF_C)</counter>
          <counter alias="RAB_PS_NRT_64384_IN_REF_C" symmetrical="true">SUM(RAB_PS_NRT_64384_IN_REF_C)</counter>
          <counter alias="RAB_PS_NRT_12864_IN_REF_C" symmetrical="true">SUM(RAB_PS_NRT_12864_IN_REF_C)</counter>
          <counter alias="RAB_PS_NRT_128128_IN_REF_C" symmetrical="true">SUM(RAB_PS_NRT_128128_IN_REF_C)</counter>
          <counter alias="RAB_PS_NRT_128384_IN_REF_C" symmetrical="true">SUM(RAB_PS_NRT_128384_IN_REF_C)</counter>
          <counter alias="RAB_PS_NRT_384384_IN_REF_C" symmetrical="true">SUM(RAB_PS_NRT_384384_IN_REF_C)</counter>
          <counter alias="RAB_PS_NRT_38464_IN_REF_C" symmetrical="true">SUM(RAB_PS_NRT_38464_IN_REF_C)</counter>
          <counter alias="RAB_CS_V_HLD_TM_REF_CELL" symmetrical="true">SUM(RAB_CS_V_HLD_TM_REF_CELL)</counter>
          <counter alias="DENOM_CS_V_HLD_TM_REF_CELL" symmetrical="true">SUM(DENOM_CS_V_HLD_TM_REF_CELL)</counter>
          <counter alias="RAB_CS_CONV_HLD_TM_REF_CELL" symmetrical="true">SUM(RAB_CS_CONV_HLD_TM_REF_CELL)</counter>
          <counter alias="DENOM_CS_CONV_HLD_TM_REF_C" symmetrical="true">SUM(DENOM_CS_CONV_HLD_TM_REF_C)</counter>
          <counter alias="RAB_CS_STR_HLD_TM_REF_CELL" symmetrical="true">SUM(RAB_CS_STR_HLD_TM_REF_CELL)</counter>
          <counter alias="DENOM_CS_STR_HLD_TM_REF_C" symmetrical="true">SUM(DENOM_CS_STR_HLD_TM_REF_C)</counter>
          <counter alias="RAB_AMR122_HLD_TM_REF_CELL" symmetrical="true">SUM(RAB_AMR122_HLD_TM_REF_CELL)</counter>
          <counter alias="DENOM_AMR122_HLD_TM_REF_C" symmetrical="true">SUM(DENOM_AMR122_HLD_TM_REF_C)</counter>
          <counter alias="RAB_CS_CONV64_TM_REF_CELL" symmetrical="true">SUM(RAB_CS_CONV64_TM_REF_CELL)</counter>
          <counter alias="DENOM_CS_CONV64_HLD_TM_REF_C" symmetrical="true">SUM(DENOM_CS_CONV64_HLD_TM_REF_C)</counter>
          <counter alias="RAB_CS_STR144_HLD_TM_REF_C" symmetrical="true">SUM(RAB_CS_STR144_HLD_TM_REF_C)</counter>
          <counter alias="DENOM_CS_STR144_HLD_TM_REF_C" symmetrical="true">SUM(DENOM_CS_STR144_HLD_TM_REF_C)</counter>
          <counter alias="RAB_CS_STR576_HLD_TM_REF_C" symmetrical="true">SUM(RAB_CS_STR576_HLD_TM_REF_C)</counter>
          <counter alias="DENOM_CS_STR576_HLD_TM_REF_C" symmetrical="true">SUM(DENOM_CS_STR576_HLD_TM_REF_C)</counter>
          <counter alias="RAB_FAIL_AMR122_PSNRT6464" symmetrical="true">SUM(RAB_FAIL_AMR122_PSNRT6464)</counter>
          <counter alias="RAB_FAIL_AMR122_PSNRT64128" symmetrical="true">SUM(RAB_FAIL_AMR122_PSNRT64128)</counter>
          <counter alias="RAB_FAIL_AMR122_PSNRT64384" symmetrical="true">SUM(RAB_FAIL_AMR122_PSNRT64384)</counter>
          <counter alias="RAB_FAIL_AMR122_2PSNRTI" symmetrical="true">SUM(RAB_FAIL_AMR122_2PSNRTI)</counter>
          <counter alias="RAB_FAIL_AMR122_PSNRT_I_B" symmetrical="true">SUM(RAB_FAIL_AMR122_PSNRT_I_B)</counter>
          <counter alias="RAB_FAIL_AMR122_2PSNRTB" symmetrical="true">SUM(RAB_FAIL_AMR122_2PSNRTB)</counter>
          <counter alias="RAB_FAIL_AMR122_3PSNRT" symmetrical="true">SUM(RAB_FAIL_AMR122_3PSNRT)</counter>
          <counter alias="RAB_FAIL_AMRMM_PSNRT6464" symmetrical="true">SUM(RAB_FAIL_AMRMM_PSNRT6464)</counter>
          <counter alias="RAB_FAIL_AMRMM_PSNRT64128" symmetrical="true">SUM(RAB_FAIL_AMRMM_PSNRT64128)</counter>
          <counter alias="RAB_FAIL_AMRMM_PSNRT64384" symmetrical="true">SUM(RAB_FAIL_AMRMM_PSNRT64384)</counter>
          <counter alias="RAB_FAIL_AMRMM_2PSNRTI" symmetrical="true">SUM(RAB_FAIL_AMRMM_2PSNRTI)</counter>
          <counter alias="RAB_FAIL_AMRMM_PSNRT_I_B" symmetrical="true">SUM(RAB_FAIL_AMRMM_PSNRT_I_B)</counter>
          <counter alias="RAB_FAIL_AMRMM_2PSNRTB" symmetrical="true">SUM(RAB_FAIL_AMRMM_2PSNRTB)</counter>
          <counter alias="RAB_FAIL_AMRMM_3PSNRT" symmetrical="true">SUM(RAB_FAIL_AMRMM_3PSNRT)</counter>
          <counter alias="RAB_FAIL_CSCONV_PSNRT6464" symmetrical="true">SUM(RAB_FAIL_CSCONV_PSNRT6464)</counter>
          <counter alias="RAB_FAIL_CSCONV_PSNRT64128" symmetrical="true">SUM(RAB_FAIL_CSCONV_PSNRT64128)</counter>
          <counter alias="RAB_FAIL_CSCONV_PSNRT64384" symmetrical="true">SUM(RAB_FAIL_CSCONV_PSNRT64384)</counter>
          <counter alias="RAB_FAIL_PSS_GEM_PSNRT6464" symmetrical="true">SUM(RAB_FAIL_PSS_GEM_PSNRT6464)</counter>
          <counter alias="RAB_FAIL_PSS_GEM_PSNRT64128" symmetrical="true">SUM(RAB_FAIL_PSS_GEM_PSNRT64128)</counter>
          <counter alias="RAB_FAIL_PSS_GEM_PSNRT64384" symmetrical="true">SUM(RAB_FAIL_PSS_GEM_PSNRT64384)</counter>
          <counter alias="RAB_FAIL_PSS_GLM_PSNRT6464" symmetrical="true">SUM(RAB_FAIL_PSS_GLM_PSNRT6464)</counter>
          <counter alias="RAB_FAIL_PSS_GLM_PSNRT64128" symmetrical="true">SUM(RAB_FAIL_PSS_GLM_PSNRT64128)</counter>
          <counter alias="RAB_FAIL_PSS_GLM_PSNRT64384" symmetrical="true">SUM(RAB_FAIL_PSS_GLM_PSNRT64384)</counter>
          <counter alias="RAB_ACT_FAIL_2PSNRTI" symmetrical="true">SUM(RAB_ACT_FAIL_2PSNRTI)</counter>
          <counter alias="RAB_ACT_FAIL_PSNRT_I_B" symmetrical="true">SUM(RAB_ACT_FAIL_PSNRT_I_B)</counter>
          <counter alias="RAB_ACT_FAIL_2PSNRTB" symmetrical="true">SUM(RAB_ACT_FAIL_2PSNRTB)</counter>
          <counter alias="RAB_ACT_FAIL_3PSNRT" symmetrical="true">SUM(RAB_ACT_FAIL_3PSNRT)</counter>
          <counter alias="RRC_CONN_STP_FAIL_IUB_AAL2" symmetrical="true">SUM(RRC_CONN_STP_FAIL_IUB_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_CS_V_IUB_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_CS_V_IUB_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_CS_CO_IUB_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_CS_CO_IUB_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_CS_ST_IUB_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_CS_ST_IUB_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_PS_ST_IUB_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_PS_ST_IUB_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_CS_V_IUR_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_CS_V_IUR_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_CS_CO_IUR_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_CS_CO_IUR_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_CS_ST_IUR_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_CS_ST_IUR_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_PS_ST_IUR_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_PS_ST_IUR_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_CS_V_IU_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_CS_V_IU_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_CS_CO_IU_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_CS_CO_IU_AAL2)</counter>
          <counter alias="RAB_STP_FAIL_CS_ST_IU_AAL2" symmetrical="true">SUM(RAB_STP_FAIL_CS_ST_IU_AAL2)</counter>
          <counter alias="DCH_HOLD_TM_PS_INTER_THP1" symmetrical="true">SUM(DCH_HOLD_TM_PS_INTER_THP1)</counter>
          <counter alias="DCH_HOLD_TM_PS_INTER_THP2" symmetrical="true">SUM(DCH_HOLD_TM_PS_INTER_THP2)</counter>
          <counter alias="DCH_HOLD_TM_PS_INTER_THP3" symmetrical="true">SUM(DCH_HOLD_TM_PS_INTER_THP3)</counter>
          <counter alias="DENOM_DCH_H_TM_PS_INTER_THP1" symmetrical="true">SUM(DENOM_DCH_H_TM_PS_INTER_THP1)</counter>
          <counter alias="DENOM_DCH_H_TM_PS_INTER_THP2" symmetrical="true">SUM(DENOM_DCH_H_TM_PS_INTER_THP2)</counter>
          <counter alias="DENOM_DCH_H_TM_PS_INTER_THP3" symmetrical="true">SUM(DENOM_DCH_H_TM_PS_INTER_THP3)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_1_6" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_1_6)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_7_8" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_7_8)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_9_10" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_9_10)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_11_12" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_11_12)</counter>
          <counter alias="ACCESS_STRATUM_REL_IND_5" symmetrical="true">SUM(ACCESS_STRATUM_REL_IND_5)</counter>
          <counter alias="RRC_ACC_REL_MO_CONV" symmetrical="true">SUM(RRC_ACC_REL_MO_CONV)</counter>
          <counter alias="RRC_ACC_REL_MO_STREAMING" symmetrical="true">SUM(RRC_ACC_REL_MO_STREAMING)</counter>
          <counter alias="RRC_ACC_REL_MO_INTERACTIVE" symmetrical="true">SUM(RRC_ACC_REL_MO_INTERACTIVE)</counter>
          <counter alias="RRC_ACC_REL_MO_BACKGROUND" symmetrical="true">SUM(RRC_ACC_REL_MO_BACKGROUND)</counter>
          <counter alias="RRC_ACC_REL_MO_SUBSCRIBED" symmetrical="true">SUM(RRC_ACC_REL_MO_SUBSCRIBED)</counter>
          <counter alias="RRC_ACC_REL_MT_CONV" symmetrical="true">SUM(RRC_ACC_REL_MT_CONV)</counter>
          <counter alias="RRC_ACC_REL_MT_STREAMING" symmetrical="true">SUM(RRC_ACC_REL_MT_STREAMING)</counter>
          <counter alias="RRC_ACC_REL_INTERACTIVE" symmetrical="true">SUM(RRC_ACC_REL_INTERACTIVE)</counter>
          <counter alias="RRC_ACC_REL_MT_BACKGROUND" symmetrical="true">SUM(RRC_ACC_REL_MT_BACKGROUND)</counter>
          <counter alias="RRC_ACC_REL_EMERGENCY" symmetrical="true">SUM(RRC_ACC_REL_EMERGENCY)</counter>
          <counter alias="RRC_ACC_REL_INTER_RAT_RESEL" symmetrical="true">SUM(RRC_ACC_REL_INTER_RAT_RESEL)</counter>
          <counter alias="RRC_ACC_REL_INTER_RAT_CCO" symmetrical="true">SUM(RRC_ACC_REL_INTER_RAT_CCO)</counter>
          <counter alias="RRC_ACC_REL_REGISTRATION" symmetrical="true">SUM(RRC_ACC_REL_REGISTRATION)</counter>
          <counter alias="RRC_ACC_REL_DETACH" symmetrical="true">SUM(RRC_ACC_REL_DETACH)</counter>
          <counter alias="RRC_ACC_REL_MO_HIGH_PR_SIGN" symmetrical="true">SUM(RRC_ACC_REL_MO_HIGH_PR_SIGN)</counter>
          <counter alias="RRC_ACC_REL_MO_LOW_PR_SIGN" symmetrical="true">SUM(RRC_ACC_REL_MO_LOW_PR_SIGN)</counter>
          <counter alias="RRC_ACC_REL_CALL_RE_ESTAB" symmetrical="true">SUM(RRC_ACC_REL_CALL_RE_ESTAB)</counter>
          <counter alias="RRC_ACC_REL_MT_HIGH_PR_SIGN" symmetrical="true">SUM(RRC_ACC_REL_MT_HIGH_PR_SIGN)</counter>
          <counter alias="RRC_ACC_REL_MT_LOW_PR_SIGN" symmetrical="true">SUM(RRC_ACC_REL_MT_LOW_PR_SIGN)</counter>
          <counter alias="RRC_ACC_REL_MT_CAUSE_UNKNOWN" symmetrical="true">SUM(RRC_ACC_REL_MT_CAUSE_UNKNOWN)</counter>
          <counter alias="RRC_ATT_REP_MO_CONV" symmetrical="true">SUM(RRC_ATT_REP_MO_CONV)</counter>
          <counter alias="RRC_ATT_REP_MO_STREAMING" symmetrical="true">SUM(RRC_ATT_REP_MO_STREAMING)</counter>
          <counter alias="RRC_ATT_REP_MO_INTERACTIVE" symmetrical="true">SUM(RRC_ATT_REP_MO_INTERACTIVE)</counter>
          <counter alias="RRC_ATT_REP_MO_BACKGROUND" symmetrical="true">SUM(RRC_ATT_REP_MO_BACKGROUND)</counter>
          <counter alias="RRC_ATT_REP_MO_SUBSCRIBED" symmetrical="true">SUM(RRC_ATT_REP_MO_SUBSCRIBED)</counter>
          <counter alias="RRC_ATT_REP_MT_CONV" symmetrical="true">SUM(RRC_ATT_REP_MT_CONV)</counter>
          <counter alias="RRC_ATT_REP_MT_STREAMING" symmetrical="true">SUM(RRC_ATT_REP_MT_STREAMING)</counter>
          <counter alias="RRC_ATT_REP_INTERACTIVE" symmetrical="true">SUM(RRC_ATT_REP_INTERACTIVE)</counter>
          <counter alias="RRC_ATT_REP_MT_BACKGROUND" symmetrical="true">SUM(RRC_ATT_REP_MT_BACKGROUND)</counter>
          <counter alias="RRC_ATT_REP_EMERGENCY" symmetrical="true">SUM(RRC_ATT_REP_EMERGENCY)</counter>
          <counter alias="RRC_ATT_REP_INTER_RAT_RESEL" symmetrical="true">SUM(RRC_ATT_REP_INTER_RAT_RESEL)</counter>
          <counter alias="RRC_ATT_REP_INTER_RAT_CCO" symmetrical="true">SUM(RRC_ATT_REP_INTER_RAT_CCO)</counter>
          <counter alias="RRC_ATT_REP_REGISTRATION" symmetrical="true">SUM(RRC_ATT_REP_REGISTRATION)</counter>
          <counter alias="RRC_ATT_REP_DETACH" symmetrical="true">SUM(RRC_ATT_REP_DETACH)</counter>
          <counter alias="RRC_ATT_REP_MO_HIGH_PR_SIGN" symmetrical="true">SUM(RRC_ATT_REP_MO_HIGH_PR_SIGN)</counter>
          <counter alias="RRC_ATT_REP_MO_LOW_PR_SIGN" symmetrical="true">SUM(RRC_ATT_REP_MO_LOW_PR_SIGN)</counter>
          <counter alias="RRC_ATT_REP_CALL_RE_ESTAB" symmetrical="true">SUM(RRC_ATT_REP_CALL_RE_ESTAB)</counter>
          <counter alias="RRC_ATT_REP_MT_HIGH_PR_SIGN" symmetrical="true">SUM(RRC_ATT_REP_MT_HIGH_PR_SIGN)</counter>
          <counter alias="RRC_ATT_REP_MT_LOW_PR_SIGN" symmetrical="true">SUM(RRC_ATT_REP_MT_LOW_PR_SIGN)</counter>
          <counter alias="RRC_ATT_REP_MT_CAUSE_UNKNOWN" symmetrical="true">SUM(RRC_ATT_REP_MT_CAUSE_UNKNOWN)</counter>
          <counter alias="RAB_ACT_FAIL_PS_INT_PCH" symmetrical="true">SUM(RAB_ACT_FAIL_PS_INT_PCH)</counter>
          <counter alias="RAB_ACT_FAIL_PS_BACKG_PCH" symmetrical="true">SUM(RAB_ACT_FAIL_PS_BACKG_PCH)</counter>
          <counter alias="UE_SUPPORT_NW_AGPS" symmetrical="true">SUM(UE_SUPPORT_NW_AGPS)</counter>
          <counter alias="RAB_SETUP_ATT_PS_NRT_128_256" symmetrical="true">SUM(RAB_SETUP_ATT_PS_NRT_128_256)</counter>
          <counter alias="RAB_ACC_COMP_PS_NRT_128_256" symmetrical="true">SUM(RAB_ACC_COMP_PS_NRT_128_256)</counter>
          <counter alias="RAB_ACT_COMP_PS_NRT_128_256" symmetrical="true">SUM(RAB_ACT_COMP_PS_NRT_128_256)</counter>
          <counter alias="RAB_STP_ATT_CS_VOICE_WPS" symmetrical="true">SUM(RAB_STP_ATT_CS_VOICE_WPS)</counter>
          <counter alias="RAB_STP_COMP_CS_VOICE_WPS" symmetrical="true">SUM(RAB_STP_COMP_CS_VOICE_WPS)</counter>
          <counter alias="RAB_STP_FAIL_CS_VOICE_WPS" symmetrical="true">SUM(RAB_STP_FAIL_CS_VOICE_WPS)</counter>
          <counter alias="RAB_ACC_COMP_CS_VOICE_WPS" symmetrical="true">SUM(RAB_ACC_COMP_CS_VOICE_WPS)</counter>
          <counter alias="RRC_SETUP_TIME_MAX" symmetrical="true">MAX(RRC_SETUP_TIME_MAX)</counter>
          <counter alias="RAB_SETUP_TIME_MAX_CS_VOICE" symmetrical="true">MAX(RAB_SETUP_TIME_MAX_CS_VOICE)</counter>
          <counter alias="RAB_SETUP_TIME_MAX_CS_CONV" symmetrical="true">MAX(RAB_SETUP_TIME_MAX_CS_CONV)</counter>
          <counter alias="RAB_SETUP_TIME_MAX_CS_STR" symmetrical="true">MAX(RAB_SETUP_TIME_MAX_CS_STR)</counter>
          <counter alias="RAB_SETUP_TIME_MAX_PS_STR" symmetrical="true">MAX(RAB_SETUP_TIME_MAX_PS_STR)</counter>
          <counter alias="RAB_SETUP_TIME_MAX_PS_INT" symmetrical="true">MAX(RAB_SETUP_TIME_MAX_PS_INT)</counter>
          <counter alias="RAB_SETUP_TIME_MAX_PS_BACKG" symmetrical="true">MAX(RAB_SETUP_TIME_MAX_PS_BACKG)</counter>
          <counter alias="UE_SUPP_EDCH_CATEGORY_1" symmetrical="true">SUM(UE_SUPP_EDCH_CATEGORY_1)</counter>
          <counter alias="UE_SUPP_EDCH_CATEGORY_2" symmetrical="true">SUM(UE_SUPP_EDCH_CATEGORY_2)</counter>
          <counter alias="UE_SUPP_EDCH_CATEGORY_3" symmetrical="true">SUM(UE_SUPP_EDCH_CATEGORY_3)</counter>
          <counter alias="UE_SUPP_EDCH_CATEGORY_4" symmetrical="true">SUM(UE_SUPP_EDCH_CATEGORY_4)</counter>
          <counter alias="UE_SUPP_EDCH_CATEGORY_5" symmetrical="true">SUM(UE_SUPP_EDCH_CATEGORY_5)</counter>
          <counter alias="UE_SUPP_EDCH_CATEGORY_6" symmetrical="true">SUM(UE_SUPP_EDCH_CATEGORY_6)</counter>
          <counter alias="ACCESS_STRATUM_REL_IND_6" symmetrical="true">SUM(ACCESS_STRATUM_REL_IND_6)</counter>
          <counter alias="RRC_CONN_STP_REJ_EMERG_CALL" symmetrical="true">SUM(RRC_CONN_STP_REJ_EMERG_CALL)</counter>
          <counter alias="RRC_CONN_STP_FAIL_ICSU_OVERL" symmetrical="true">SUM(RRC_CONN_STP_FAIL_ICSU_OVERL)</counter>
          <counter alias="RAB_STP_FAIL_CS_VOICE_LIC" symmetrical="true">SUM(RAB_STP_FAIL_CS_VOICE_LIC)</counter>
          <counter alias="RAB_ACT_REL_CS_VOICE_PRE_LIC" symmetrical="true">SUM(RAB_ACT_REL_CS_VOICE_PRE_LIC)</counter>
          <counter alias="RAB_STP_FAIL_CS_VOICE_IUR_TR" symmetrical="true">SUM(RAB_STP_FAIL_CS_VOICE_IUR_TR)</counter>
          <counter alias="RAB_STP_FAIL_CS_CONV_IUR_TR" symmetrical="true">SUM(RAB_STP_FAIL_CS_CONV_IUR_TR)</counter>
          <counter alias="RAB_STP_FAIL_CS_STRE_IUR_TR" symmetrical="true">SUM(RAB_STP_FAIL_CS_STRE_IUR_TR)</counter>
          <counter alias="RAB_STP_FAIL_PS_STRE_IUR_TR" symmetrical="true">SUM(RAB_STP_FAIL_PS_STRE_IUR_TR)</counter>
          <counter alias="RAB_STP_FAIL_CS_VOICE_IU_CS" symmetrical="true">SUM(RAB_STP_FAIL_CS_VOICE_IU_CS)</counter>
          <counter alias="RAB_STP_FAIL_CS_CONV_IU_CS" symmetrical="true">SUM(RAB_STP_FAIL_CS_CONV_IU_CS)</counter>
          <counter alias="RAB_STP_FAIL_CS_STRE_IU_CS" symmetrical="true">SUM(RAB_STP_FAIL_CS_STRE_IU_CS)</counter>
          <counter alias="RRC_CONN_REL_DUE_INACTIVITY" symmetrical="true">SUM(RRC_CONN_REL_DUE_INACTIVITY)</counter>
          <counter alias="RRC_CONN_REL_DUE_HW_RES" symmetrical="true">SUM(RRC_CONN_REL_DUE_HW_RES)</counter>
          <counter alias="SUCC_RRC_SETUP_CONV" symmetrical="true">SUM(SUCC_RRC_SETUP_CONV)</counter>
          <counter alias="SUCC_RRC_SETUP_STREA" symmetrical="true">SUM(SUCC_RRC_SETUP_STREA)</counter>
          <counter alias="SUCC_RRC_SETUP_INTERA" symmetrical="true">SUM(SUCC_RRC_SETUP_INTERA)</counter>
          <counter alias="SUCC_RRC_SETUP_BACKG" symmetrical="true">SUM(SUCC_RRC_SETUP_BACKG)</counter>
          <counter alias="SUCC_RRC_SETUP_OTHER" symmetrical="true">SUM(SUCC_RRC_SETUP_OTHER)</counter>
          <counter alias="SRB_ACT_FAIL_CONV" symmetrical="true">SUM(SRB_ACT_FAIL_CONV)</counter>
          <counter alias="SRB_ACT_FAIL_STREA" symmetrical="true">SUM(SRB_ACT_FAIL_STREA)</counter>
          <counter alias="SRB_ACT_FAIL_INTERA" symmetrical="true">SUM(SRB_ACT_FAIL_INTERA)</counter>
          <counter alias="SRB_ACT_FAIL_BACKG" symmetrical="true">SUM(SRB_ACT_FAIL_BACKG)</counter>
          <counter alias="SRB_ACT_FAIL_OTHER" symmetrical="true">SUM(SRB_ACT_FAIL_OTHER)</counter>
          <counter alias="RRC_ACT_REL_DIRECTED_RETRY" symmetrical="true">SUM(RRC_ACT_REL_DIRECTED_RETRY)</counter>
          <counter alias="UE_SUPPORT_GANHO" symmetrical="true">SUM(UE_SUPPORT_GANHO)</counter>
          <counter alias="RRC_CONN_ACT_REL_INTRA_HHO" symmetrical="true">SUM(RRC_CONN_ACT_REL_INTRA_HHO)</counter>
          <counter alias="RRC_CONN_ACT_REL_GANHO" symmetrical="true">SUM(RRC_CONN_ACT_REL_GANHO)</counter>
          <counter alias="RRC_CONN_ACT_REL_HHO" symmetrical="true">SUM(RRC_CONN_ACT_REL_HHO)</counter>
          <counter alias="RRC_CONN_ACT_REL_ISHO" symmetrical="true">SUM(RRC_CONN_ACT_REL_ISHO)</counter>
          <counter alias="RAB_ACT_REL_CS_VOICE_HHO" symmetrical="true">SUM(RAB_ACT_REL_CS_VOICE_HHO)</counter>
          <counter alias="RAB_ACT_REL_CS_CONV_HHO" symmetrical="true">SUM(RAB_ACT_REL_CS_CONV_HHO)</counter>
          <counter alias="RAB_ACT_REL_CS_STREA_HHO" symmetrical="true">SUM(RAB_ACT_REL_CS_STREA_HHO)</counter>
          <counter alias="RAB_ACT_REL_CS_VOICE_ISHO" symmetrical="true">SUM(RAB_ACT_REL_CS_VOICE_ISHO)</counter>
          <counter alias="RAB_ACT_REL_CS_CONV_ISHO" symmetrical="true">SUM(RAB_ACT_REL_CS_CONV_ISHO)</counter>
          <counter alias="RAB_ACT_REL_CS_STREA_ISHO" symmetrical="true">SUM(RAB_ACT_REL_CS_STREA_ISHO)</counter>
          <counter alias="RAB_ACT_REL_CS_VOICE_GANHO" symmetrical="true">SUM(RAB_ACT_REL_CS_VOICE_GANHO)</counter>
          <counter alias="RAB_RELOC_STP_ATT_PS_STREA" symmetrical="true">SUM(RAB_RELOC_STP_ATT_PS_STREA)</counter>
          <counter alias="RAB_RELOC_ACC_COMP_PS_STREA" symmetrical="true">SUM(RAB_RELOC_ACC_COMP_PS_STREA)</counter>
          <counter alias="RAB_RELOC_STP_ATT_CS_VOICE" symmetrical="true">SUM(RAB_RELOC_STP_ATT_CS_VOICE)</counter>
          <counter alias="RAB_RELOC_ACC_COMP_CS_VOICE" symmetrical="true">SUM(RAB_RELOC_ACC_COMP_CS_VOICE)</counter>
          <counter alias="RAB_RELOC_STP_ATT_CS_CONV" symmetrical="true">SUM(RAB_RELOC_STP_ATT_CS_CONV)</counter>
          <counter alias="RAB_RELOC_ACC_COMP_CS_CONV" symmetrical="true">SUM(RAB_RELOC_ACC_COMP_CS_CONV)</counter>
          <counter alias="RAB_RELOC_STP_ATT_CS_STREA" symmetrical="true">SUM(RAB_RELOC_STP_ATT_CS_STREA)</counter>
          <counter alias="RAB_RELOC_ACC_COMP_CS_STREA" symmetrical="true">SUM(RAB_RELOC_ACC_COMP_CS_STREA)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_1_DL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_1_DL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_2_DL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_2_DL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_3_DL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_3_DL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_4_DL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_4_DL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_5_DL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_5_DL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_6_DL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_6_DL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_7_DL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_7_DL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_1_UL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_1_UL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_2_UL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_2_UL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_3_UL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_3_UL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_4_UL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_4_UL)</counter>
          <counter alias="RAB_STP_ATT_BR_CLASS_5_UL" symmetrical="true">SUM(RAB_STP_ATT_BR_CLASS_5_UL)</counter>
          <counter alias="UE_SUPP_CS_VOICE_OVER_HSPA" symmetrical="true">SUM(UE_SUPP_CS_VOICE_OVER_HSPA)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_13_14" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_13_14)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_15_16" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_15_16)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_17_18" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_17_18)</counter>
          <counter alias="ACCESS_STRATUM_REL_IND_7" symmetrical="true">SUM(ACCESS_STRATUM_REL_IND_7)</counter>
          <counter alias="UE_SUPP_EDCH_CATEGORY_7" symmetrical="true">SUM(UE_SUPP_EDCH_CATEGORY_7)</counter>
          <counter alias="UE_SUPP_CPC" symmetrical="true">SUM(UE_SUPP_CPC)</counter>
          <counter alias="RRC_CONN_STP_ATT_CCH" symmetrical="true">SUM(RRC_CONN_STP_ATT_CCH)</counter>
          <counter alias="RRC_CONN_ACC_COMP_CCH" symmetrical="true">SUM(RRC_CONN_ACC_COMP_CCH)</counter>
          <counter alias="RRC_CONN_ACC_REL_RESEL_CCH" symmetrical="true">SUM(RRC_CONN_ACC_REL_RESEL_CCH)</counter>
          <counter alias="RRC_CONN_STP_ATT_REPEAT_CCH" symmetrical="true">SUM(RRC_CONN_STP_ATT_REPEAT_CCH)</counter>
          <counter alias="SPARE_6_SERVICELEVEL" symmetrical="true">SUM(SPARE_6_SERVICELEVEL)</counter>
          <counter alias="SPARE_7_SERVICELEVEL" symmetrical="true">SUM(SPARE_7_SERVICELEVEL)</counter>
          <counter alias="SPARE_8_SERVICELEVEL" symmetrical="true">SUM(SPARE_8_SERVICELEVEL)</counter>
          <counter alias="SPARE_9_SERVICELEVEL" symmetrical="true">SUM(SPARE_9_SERVICELEVEL)</counter>
          <counter alias="SPARE_10_SERVICELEVEL" symmetrical="true">SUM(SPARE_10_SERVICELEVEL)</counter>
          <counter alias="RRC_CONN_ACT_FAIL_TRANS" symmetrical="true">SUM(RRC_CONN_ACT_FAIL_TRANS)</counter>
          <counter alias="RAB_ACT_FAIL_CS_VOICE_TRANS" symmetrical="true">SUM(RAB_ACT_FAIL_CS_VOICE_TRANS)</counter>
          <counter alias="RAB_ACT_FAIL_CS_CONV_TRANS" symmetrical="true">SUM(RAB_ACT_FAIL_CS_CONV_TRANS)</counter>
          <counter alias="RAB_ACT_FAIL_CS_STREA_TRANS" symmetrical="true">SUM(RAB_ACT_FAIL_CS_STREA_TRANS)</counter>
          <counter alias="RAB_ACT_FAIL_PS_STREA_TRANS" symmetrical="true">SUM(RAB_ACT_FAIL_PS_STREA_TRANS)</counter>
          <counter alias="RAB_ACT_FAIL_PS_INTER_TRANS" symmetrical="true">SUM(RAB_ACT_FAIL_PS_INTER_TRANS)</counter>
          <counter alias="RAB_ACT_FAIL_PS_BACKG_TRANS" symmetrical="true">SUM(RAB_ACT_FAIL_PS_BACKG_TRANS)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_19_20" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_19_20)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_21_22" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_21_22)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_23_24" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_23_24)</counter>
          <counter alias="ACCESS_STRATUM_REL_IND_8" symmetrical="true">SUM(ACCESS_STRATUM_REL_IND_8)</counter>
          <counter alias="RAB_STP_ATT_AMR_PSNRT" symmetrical="true">SUM(RAB_STP_ATT_AMR_PSNRT)</counter>
          <counter alias="RAB_ACC_COMP_AMR_PSNRT" symmetrical="true">SUM(RAB_ACC_COMP_AMR_PSNRT)</counter>
          <counter alias="RAB_ACT_COMP_AMR_PSNRT" symmetrical="true">SUM(RAB_ACT_COMP_AMR_PSNRT)</counter>
          <counter alias="RAB_ACT_FAIL_AMR_PSNRT" symmetrical="true">SUM(RAB_ACT_FAIL_AMR_PSNRT)</counter>
          <counter alias="INTER_SYS_LTE_HHO_FAIL_CONF" symmetrical="true">SUM(INTER_SYS_LTE_HHO_FAIL_CONF)</counter>
          <counter alias="UE_SUPP_HS_CELL_FACH" symmetrical="true">SUM(UE_SUPP_HS_CELL_FACH)</counter>
          <counter alias="UE_SUPP_FLEX_RLC_UL" symmetrical="true">SUM(UE_SUPP_FLEX_RLC_UL)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_25_26" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_25_26)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_27_28" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_27_28)</counter>
          <counter alias="ACCESS_STRATUM_REL_IND_9" symmetrical="true">SUM(ACCESS_STRATUM_REL_IND_9)</counter>
          <counter alias="UE_SUPP_EDCH_CATEGORY_8" symmetrical="true">SUM(UE_SUPP_EDCH_CATEGORY_8)</counter>
          <counter alias="UE_SUPP_EDCH_CATEGORY_9" symmetrical="true">SUM(UE_SUPP_EDCH_CATEGORY_9)</counter>
          <counter alias="UE_SUPP_HS_CELL_FACH_UL" symmetrical="true">SUM(UE_SUPP_HS_CELL_FACH_UL)</counter>
          <counter alias="CS_VOICE_DRP_AFT_MISSING_ADJ" symmetrical="true">SUM(CS_VOICE_DRP_AFT_MISSING_ADJ)</counter>
          <counter alias="EUTRA_CAPABILITY_FDD" symmetrical="true">SUM(EUTRA_CAPABILITY_FDD)</counter>
          <counter alias="EUTRA_CAPABILITY_TDD" symmetrical="true">SUM(EUTRA_CAPABILITY_TDD)</counter>
          <counter alias="UE_SUPP_UMTS_850" symmetrical="true">SUM(UE_SUPP_UMTS_850)</counter>
          <counter alias="UE_SUPP_UMTS_900" symmetrical="true">SUM(UE_SUPP_UMTS_900)</counter>
          <counter alias="UE_SUPP_UMTS_1500" symmetrical="true">SUM(UE_SUPP_UMTS_1500)</counter>
          <counter alias="UE_SUPP_UMTS_1700" symmetrical="true">SUM(UE_SUPP_UMTS_1700)</counter>
          <counter alias="UE_SUPP_UMTS_1900" symmetrical="true">SUM(UE_SUPP_UMTS_1900)</counter>
          <counter alias="UE_SUPP_UMTS_2100" symmetrical="true">SUM(UE_SUPP_UMTS_2100)</counter>
          <counter alias="UE_SUPP_DBHSDPA_9_1" symmetrical="true">SUM(UE_SUPP_DBHSDPA_9_1)</counter>
          <counter alias="UE_SUPP_DBHSDPA_9_2" symmetrical="true">SUM(UE_SUPP_DBHSDPA_9_2)</counter>
          <counter alias="UE_SUPP_DBHSDPA_9_3" symmetrical="true">SUM(UE_SUPP_DBHSDPA_9_3)</counter>
          <counter alias="RRC_CONN_STP_FAIL_AC_UL" symmetrical="true">SUM(RRC_CONN_STP_FAIL_AC_UL)</counter>
          <counter alias="RRC_CONN_STP_FAIL_AC_DL" symmetrical="true">SUM(RRC_CONN_STP_FAIL_AC_DL)</counter>
          <counter alias="RRC_CONN_STP_FAIL_AC_COD" symmetrical="true">SUM(RRC_CONN_STP_FAIL_AC_COD)</counter>
          <counter alias="RAB_STP_FAIL_CS_VOICE_AC_UL" symmetrical="true">SUM(RAB_STP_FAIL_CS_VOICE_AC_UL)</counter>
          <counter alias="RAB_STP_FAIL_CS_VOICE_AC_DL" symmetrical="true">SUM(RAB_STP_FAIL_CS_VOICE_AC_DL)</counter>
          <counter alias="RAB_STP_FAIL_CS_VOICE_AC_COD" symmetrical="true">SUM(RAB_STP_FAIL_CS_VOICE_AC_COD)</counter>
          <counter alias="RAB_STP_ATT_PTT" symmetrical="true">SUM(RAB_STP_ATT_PTT)</counter>
          <counter alias="RAB_ACC_COMP_PTT" symmetrical="true">SUM(RAB_ACC_COMP_PTT)</counter>
          <counter alias="RAB_ACT_COMP_PTT" symmetrical="true">SUM(RAB_ACT_COMP_PTT)</counter>
          <counter alias="RAB_STP_ACC_FAIL_PTT" symmetrical="true">SUM(RAB_STP_ACC_FAIL_PTT)</counter>
          <counter alias="RAB_ACT_FAIL_PTT" symmetrical="true">SUM(RAB_ACT_FAIL_PTT)</counter>
          <counter alias="RAB_HLD_TM_PTT" symmetrical="true">SUM(RAB_HLD_TM_PTT)</counter>
          <counter alias="ACCESS_STRATUM_REL_IND_10" symmetrical="true">SUM(ACCESS_STRATUM_REL_IND_10)</counter>
          <counter alias="ACCESS_STRATUM_REL_IND_11" symmetrical="true">SUM(ACCESS_STRATUM_REL_IND_11)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_29_30" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_29_30)</counter>
          <counter alias="UE_SUPP_HSDSCH_CLASS_31_32" symmetrical="true">SUM(UE_SUPP_HSDSCH_CLASS_31_32)</counter>
          <counter alias="RRC_CONN_STP_ATT_CSFB" symmetrical="true">SUM(RRC_CONN_STP_ATT_CSFB)</counter>
          <counter alias="RRC_STP_ACC_FAIL_CSFB" symmetrical="true">SUM(RRC_STP_ACC_FAIL_CSFB)</counter>
          <counter alias="RRC_ACC_REL_CSFB" symmetrical="true">SUM(RRC_ACC_REL_CSFB)</counter>
          <counter alias="RRC_ATT_REP_CSFB" symmetrical="true">SUM(RRC_ATT_REP_CSFB)</counter>
          <counter alias="RAB_ACT_REL_PS_INTER_HHO" symmetrical="true">SUM(RAB_ACT_REL_PS_INTER_HHO)</counter>
          <counter alias="RAB_ACT_REL_PS_BACKG_HHO" symmetrical="true">SUM(RAB_ACT_REL_PS_BACKG_HHO)</counter>
          <counter alias="RAB_ACT_REL_PS_INTER_ISHO" symmetrical="true">SUM(RAB_ACT_REL_PS_INTER_ISHO)</counter>
          <counter alias="RAB_ACT_REL_PS_BGR_ISHO" symmetrical="true">SUM(RAB_ACT_REL_PS_BGR_ISHO)</counter>
          <counter alias="RAB_ACT_REL_PS_STREA_HHO" symmetrical="true">SUM(RAB_ACT_REL_PS_STREA_HHO)</counter>
          <counter alias="RAB_ACT_REL_PS_STREA_ISHO" symmetrical="true">SUM(RAB_ACT_REL_PS_STREA_ISHO)</counter>
          <counter alias="RRC_RELOC_STP_ATT" symmetrical="true">SUM(RRC_RELOC_STP_ATT)</counter>
          <counter alias="RRC_RELOC_ACC_COMP" symmetrical="true">SUM(RRC_RELOC_ACC_COMP)</counter>
          <counter alias="RAB_RELOC_STP_ATT_PS_INT" symmetrical="true">SUM(RAB_RELOC_STP_ATT_PS_INT)</counter>
          <counter alias="RAB_RELOC_ACC_COMP_PS_INT" symmetrical="true">SUM(RAB_RELOC_ACC_COMP_PS_INT)</counter>
          <counter alias="RAB_RELOC_STP_ATT_PS_BGR" symmetrical="true">SUM(RAB_RELOC_STP_ATT_PS_BGR)</counter>
          <counter alias="RAB_RELOC_ACC_COMP_PS_BGR" symmetrical="true">SUM(RAB_RELOC_ACC_COMP_PS_BGR)</counter>
          <counter alias="period_duration_sum" symmetrical="true">SUM(period_duration_sum)</counter>
    </counters>
    <table_name>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</table_name>
    <alias_name>SERVLEV</alias_name>
    <ui_name>Service Level</ui_name>
  </temp_table>
  <kpi name="period_duration">
    <formula>SERVLEV.period_duration</formula>
    <kpi_info>
      <title>period_duration (period_duration)</title>
      <use>Duration of the measurement period in minutes.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula time-formula="SUM(period_duration)">AVG(period_duration)</formula>
      <unit>min</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>period_duration (period_duration)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_stp_att">
    <formula>SERVLEV.rrc_conn_stp_att</formula>
    <kpi_info>
      <title>rrc_conn_stp_att (M1001C0)</title>
      <use>The number of RRC connection setup attempts. Note that from RN5.0 onwards this counter does not include incoming relocations and hard handovers because they have dedicated counters.UPDATED: When the RNC receives an RRC: RRC CONNECTION REQUEST message from the UE, and the RNC starts to reserve resources for the RRC connection.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_stp_att)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_stp_att (M1001C0)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_stp_comp">
    <formula>SERVLEV.rrc_conn_stp_comp</formula>
    <kpi_info>
      <title>rrc_conn_stp_comp (M1001C1)</title>
      <use>The number of completed RRC setup phases. Note that from RN5.0 onwards this counter does not include incoming relocations and hard handovers because they have dedicated counters.UPDATED: When the RNC sends an RRC: RRC CONNECTION SETUP message to the UE. The counter is updated only once per RRC connection establishment attempt, not separately for each repeated RRC CONNECTION SETUP message sent by the RNC.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_stp_comp)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_stp_comp (M1001C1)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_stp_fail_hc">
    <formula>SERVLEV.rrc_conn_stp_fail_hc</formula>
    <kpi_info>
      <title>rrc_conn_stp_fail_hc (M1001C2)</title>
      <use>The number of RRC setup failures caused by Handover Control. UPDATED: When the RNC decides to reject the RRC connection request because the handover control entity reports a failure. After this, the RNC sends an RRC: RRC CONNECTION REJECT message to the UE. (For more information, see section Failure and abnormal release causes.) Note that from RN5.0 onwards this counter does not include incoming relocation and hard handover failures.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_stp_fail_hc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_stp_fail_hc (M1001C2)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_stp_fail_ac">
    <formula>SERVLEV.rrc_conn_stp_fail_ac</formula>
    <kpi_info>
      <title>rrc_conn_stp_fail_ac (M1001C3)</title>
      <use>The number of RRC setup failures caused by Admission Control. The reason for the rejection can be uplink power, downlink power, spreading codes or a temporary failure in the cell common measurement reporting by the BTS. UPDATED: When the RNC decides to reject the RRC connection request because the admission control entity reports a failure (excluding frozen BTS reason). After this, the RNC sends an RRC: RRC CONNECTION REJECT message to the UE. (For more information, see section Failure and abnormal release causes.) Note that from RN5.0 onwards this counter does not include incoming relocation and hard handover failures.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_stp_fail_ac)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_stp_fail_ac (M1001C3)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_stp_fail_bts">
    <formula>SERVLEV.rrc_conn_stp_fail_bts</formula>
    <kpi_info>
      <title>rrc_conn_stp_fail_bts (M1001C4)</title>
      <use>The number of RRC setup failures caused by BTS or Iub overload control. UPDATED: When the RNC decides to reject the RRC connection request due to unsuccessful radio link setup or the radio link setup was not attempted due to Iub overload control. After this, the RNC sends an RRC: RRC CONNECTION REJECT message to the UE. Note that from RN5.0 onwards this counter does not include incoming relocation and hard handover failures.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_stp_fail_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_stp_fail_bts (M1001C4)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_stp_fail_trans">
    <formula>SERVLEV.rrc_conn_stp_fail_trans</formula>
    <kpi_info>
      <title>rrc_conn_stp_fail_trans (M1001C5)</title>
      <use>The number of RRC setup failures caused by Transport. UPDATED: When the RNC decides to reject the RRC connection request due to transport failure. After this, the RNC sends an RRC: RRC CONNECTION REJECT message to the UE. (For more information, see section Failure and abnormal release causes.) Note that from RN5.0 onwards this counter does not include incoming relocation and hard handover failures.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_stp_fail_trans)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_stp_fail_trans (M1001C5)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_stp_fail_rnc">
    <formula>SERVLEV.rrc_conn_stp_fail_rnc</formula>
    <kpi_info>
      <title>rrc_conn_stp_fail_rnc (M1001C6)</title>
      <use>The number of RRC setup failures caused by RNC internal reason. UPDATED: When the RNC decides to reject the RRC connection request due to RNC internal failure. After this, the RNC sends an RRC: RRC CONNECTION REJECT message to the UE. (For more information, see section Failure and abnormal release causes.) Note that from RN5.0 onwards this counter does not include incoming relocation and hard handover failures.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_stp_fail_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_stp_fail_rnc (M1001C6)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_stp_fail_frozbs">
    <formula>SERVLEV.rrc_conn_stp_fail_frozbs</formula>
    <kpi_info>
      <title>rrc_conn_stp_fail_frozbs (M1001C7)</title>
      <use>The number of RRC setup failures caused by frozen BTS. UPDATED: When the RNC decides to reject the RRC connection request, because the admission control entity blocks the radio link establishment, to ensure the setup of high priority calls. After this, the RNC sends an RRC: RRC CONNECTION REJECT message to the UE. (For more information, see section Failure and abnormal release causes.) Note that from RN5.0 onwards this counter does not include incoming relocation and hard handover failures.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_stp_fail_frozbs)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_stp_fail_frozbs (M1001C7)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_acc_comp">
    <formula>SERVLEV.rrc_conn_acc_comp</formula>
    <kpi_info>
      <title>rrc_conn_acc_comp (M1001C8)</title>
      <use>The number of completed RRC access phases. Note that from RN5.0 onwards this counter does not include incoming relocations and hard handovers because they have dedicated counters. UPDATED: When the RNC receives an RRC: RRC CONNECTION SETUP COMPLETE message from the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_acc_comp)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_acc_comp (M1001C8)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_acc_fail_radio">
    <formula>SERVLEV.rrc_conn_acc_fail_radio</formula>
    <kpi_info>
      <title>rrc_conn_acc_fail_radio (M1001C9)</title>
      <use>The number of RRC access failures caused by radio interface synchronisation failure. UPDATED: When the RNC does not receive the RRC: RRC CONNECTION SETUP COMPLETE message from the UE within 11 seconds, and the RNC has not received the NBAP message which indicates that L1 synchronisation has been established between UE and BTS. Note that from RN5.0 onwards this counter does not include incoming relocation and hard handover failures.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_acc_fail_radio)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_acc_fail_radio (M1001C9)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_acc_fail_ms">
    <formula>SERVLEV.rrc_conn_acc_fail_ms</formula>
    <kpi_info>
      <title>rrc_conn_acc_fail_ms (M1001C10)</title>
      <use>The number of RRC access failures caused by UE. UPDATED: When the RNC does not receive the RRC: RRC CONNECTION SETUP COMPLETE message from the UE within 11 seconds, and the RNC has received the NBAP message which indicates that L1 synchronisation has been established between UE and BTS. This counter is updated also in case the UE does not respond RRC CONNECTION SETUP COMPLETE when attempting to setup RRC connection to Cell_FACH state, even if in that case L1 synchronization is not expected. Note that from RN5.0 onwards this counter does not include incoming relocation and hard handover failures.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_acc_fail_ms)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_acc_fail_ms (M1001C10)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_acc_fail_rnc">
    <formula>SERVLEV.rrc_conn_acc_fail_rnc</formula>
    <kpi_info>
      <title>rrc_conn_acc_fail_rnc (M1001C11)</title>
      <use>The number of RRC access failures caused by reasons not covered by the other failure counters. UPDATED: When an RNC internal failure occurs before receiving the RRC: RRC CONNECTION SETUP COMPLETE message from the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_acc_fail_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_acc_fail_rnc (M1001C11)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_act_comp">
    <formula>SERVLEV.rrc_conn_act_comp</formula>
    <kpi_info>
      <title>rrc_conn_act_comp (M1001C12)</title>
      <use>The number of normal completions of RRC active phases. UPDATED: When the RNC receives an RANAP: IU RELEASE COMMAND from the CN, and the RNC has not sent an RANAP: IU RELEASE REQUEST message to the CN before that, and no other Iu connections for the UE exist. Exception 1: This counter is updated if the RRC connection is released due to PS inactivity (even though RNC sends an RANAP: IU RELEASE REQUEST message to the CN in this case). Exception 2: This counter is not updated in case of SRNS relocation, inter-RNC hard handover, or inter-system handover. Exception 3: This counter is not updated if the RANAP: IU RELEASE COMMAND cause is "Requested Ciphering and/or Integrity Protection Algorithms not Supported". In that case counter M1001C19 is updated instead.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_act_comp)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_act_comp (M1001C12)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_act_rel_srnc">
    <formula>SERVLEV.rrc_conn_act_rel_srnc</formula>
    <kpi_info>
      <title>rrc_conn_act_rel_srnc (M1001C13)</title>
      <use>The number of RRC Connection Active Releases due to UE not involved SRNC relocation or Directed Signalling Connection Re-establishment. Note: From RN4.0 onwards this counter does not include inter-RNC hard handover and inter-system handover but they have dedicated counters. UPDATED: When the RRC connection is released due to SRNC relocation or Directed Signalling Connection Re-establishment due to Cell Update via DRNC.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_act_rel_srnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_act_rel_srnc (M1001C13)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_act_rel_p_emp">
    <formula>SERVLEV.rrc_conn_act_rel_p_emp</formula>
    <kpi_info>
      <title>rrc_conn_act_rel_p_emp (M1001C14)</title>
      <use>The number of RRC active releases due to pre-emption. UPDATED: When the RRC connection is released in order to make room for a higher priority RAB, for example, an emergency call. (For more information, see section Failure and abnormal release causes.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_act_rel_p_emp)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_act_rel_p_emp (M1001C14)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_act_fail_iu">
    <formula>SERVLEV.rrc_conn_act_fail_iu</formula>
    <kpi_info>
      <title>rrc_conn_act_fail_iu (M1001C15)</title>
      <use>The number of RRC active failures caused by Iu-interface related problem. UPDATED: When an Iu interface failure occurs, and the failure causes the release of the RRC connection. After this, the RNC sends an RANAP: IU RELEASE REQUEST to all involved CNs.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_act_fail_iu)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_act_fail_iu (M1001C15)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_act_fail_radio">
    <formula>SERVLEV.rrc_conn_act_fail_radio</formula>
    <kpi_info>
      <title>rrc_conn_act_fail_radio (M1001C16)</title>
      <use>The number of RRC active failures due to radio interface. UPDATED: When a radio interface failure occurs, and the failure causes the release of the RRC connection. After this, the RNC sends an RANAP: IU RELEASE REQUEST to all involved CNs. (For more information, see section Failure and abnormal release causes.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_act_fail_radio)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_act_fail_radio (M1001C16)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_act_fail_bts">
    <formula>SERVLEV.rrc_conn_act_fail_bts</formula>
    <kpi_info>
      <title>rrc_conn_act_fail_bts (M1001C17)</title>
      <use>The number of RRC active failures due to BTS. UPDATED: When a BTS failure occurs, and the failure causes the release of the RRC connection. After this, the RNC sends an RANAP: IU RELEASE REQUEST to all involved CNs. (For more information, see section Failure and abnormal release causes.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_act_fail_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_act_fail_bts (M1001C17)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_act_fail_iur">
    <formula>SERVLEV.rrc_conn_act_fail_iur</formula>
    <kpi_info>
      <title>rrc_conn_act_fail_iur (M1001C18)</title>
      <use>The number of RRC active failures due to drift RNC. UPDATED: When a procedure failure in drift RNC occurs, and the failure causes the release of the RRC connection. After this, the RNC sends an RANAP: IU RELEASE REQUEST to all involved CNs. (For more information, see section Failure and abnormal release causes.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_act_fail_iur)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_act_fail_iur (M1001C18)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_act_fail_ciph">
    <formula>SERVLEV.rrc_conn_act_fail_ciph</formula>
    <kpi_info>
      <title>rrc_conn_act_fail_ciph (M1001C19)</title>
      <use>The number of RRC connection releases after a failed Security Mode Control procedure. UPDATED: When the RNC releases the RRC connection after receiving RANAP: IU RELEASE COMMAND with cause "Requested Ciphering and/or Integrity Protection Algorithms not Supported" from the core network.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_act_fail_ciph)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_act_fail_ciph (M1001C19)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_act_fail_i_chk">
    <formula>SERVLEV.rrc_conn_act_fail_i_chk</formula>
    <kpi_info>
      <title>rrc_conn_act_fail_i_chk (M1001C20)</title>
      <use>The original idea of this counter was to measure the number of RRC connection releases caused by integrity check failures. However, if integrity check fails the message is ignored and the receiving entity does not send any failure related message to the RNC. UPDATED: This counter is never updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_act_fail_i_chk)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_act_fail_i_chk (M1001C20)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rrc_conn_act_fail_rnc">
    <formula>SERVLEV.rrc_conn_act_fail_rnc</formula>
    <kpi_info>
      <title>rrc_conn_act_fail_rnc (M1001C21)</title>
      <use>The number of RRC active failures due to reasons not covered by the other failure counters. UPDATED: When such failure happens that is not covered by the other failure counters, and the failure causes the release of the RRC connection. After this, the RNC sends an RANAP: IU RELEASE REQUEST to all involved CNs.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rrc_conn_act_fail_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rrc_conn_act_fail_rnc (M1001C21)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_conv_call_atts">
    <formula>SERVLEV.moc_conv_call_atts</formula>
    <kpi_info>
      <title>moc_conv_call_atts (M1001C22)</title>
      <use>The number of RRC connection attempts with establishment cause "Originating conversational call". UPDATED: When the RNC receives RRC connection request with establishment cause "Originating conversational call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_conv_call_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_conv_call_atts (M1001C22)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_conv_call_fails">
    <formula>SERVLEV.moc_conv_call_fails</formula>
    <kpi_info>
      <title>moc_conv_call_fails (M1001C23)</title>
      <use>The number of failed RRC connection establishments with cause "Originating conversational call". UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Originating conversational call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_conv_call_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_conv_call_fails (M1001C23)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_strea_call_atts">
    <formula>SERVLEV.moc_strea_call_atts</formula>
    <kpi_info>
      <title>moc_strea_call_atts (M1001C24)</title>
      <use>The number of RRC connection attempts with establishment cause "Originating streaming call". UPDATED: When the RNC receives RRC connection request with establishment cause "Originating streaming call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_strea_call_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_strea_call_atts (M1001C24)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_strea_call_fails">
    <formula>SERVLEV.moc_strea_call_fails</formula>
    <kpi_info>
      <title>moc_strea_call_fails (M1001C25)</title>
      <use>The number of failed RRC connection establishments with cause "Originating streaming call". UPDATED: When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Originating streaming call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_strea_call_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_strea_call_fails (M1001C25)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_inter_call_atts">
    <formula>SERVLEV.moc_inter_call_atts</formula>
    <kpi_info>
      <title>moc_inter_call_atts (M1001C26)</title>
      <use>The number of RRC connection attempts with establishment cause "Originating interactive call". UPDATED:When the RNC receives RRC connection request with establishment cause "Originating interactive call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_inter_call_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_inter_call_atts (M1001C26)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_inter_call_fails">
    <formula>SERVLEV.moc_inter_call_fails</formula>
    <kpi_info>
      <title>moc_inter_call_fails (M1001C27)</title>
      <use>The number of failed RRC connection establishments with cause "Originating interactive call". UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Originating interactive call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_inter_call_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_inter_call_fails (M1001C27)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_backg_call_atts">
    <formula>SERVLEV.moc_backg_call_atts</formula>
    <kpi_info>
      <title>moc_backg_call_atts (M1001C28)</title>
      <use>The number of RRC connection attempts with establishment cause "Originating background call". UPDATED:When the RNC receives RRC connection request with establishment cause "Originating background call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_backg_call_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_backg_call_atts (M1001C28)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_backg_call_fails">
    <formula>SERVLEV.moc_backg_call_fails</formula>
    <kpi_info>
      <title>moc_backg_call_fails (M1001C29)</title>
      <use>The number of failed RRC connection establishments with cause "Originating background call". UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Originating background call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_backg_call_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_backg_call_fails (M1001C29)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_subsc_traf_call_atts">
    <formula>SERVLEV.moc_subsc_traf_call_atts</formula>
    <kpi_info>
      <title>moc_subsc_traf_call_atts (M1001C30)</title>
      <use>The number of RRC connection attempts with establishment cause "Originating subscribed traffic call". UPDATED:When the RNC receives RRC connection request with establishment cause "Originating subscribed traffic call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_subsc_traf_call_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_subsc_traf_call_atts (M1001C30)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_subsc_traf_call_fails">
    <formula>SERVLEV.moc_subsc_traf_call_fails</formula>
    <kpi_info>
      <title>moc_subsc_traf_call_fails (M1001C31)</title>
      <use>The number of failed RRC connection establishments with cause "Originating subscribed traffic call". UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Originating subscribed traffic call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_subsc_traf_call_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_subsc_traf_call_fails (M1001C31)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_conv_call_atts">
    <formula>SERVLEV.mtc_conv_call_atts</formula>
    <kpi_info>
      <title>mtc_conv_call_atts (M1001C32)</title>
      <use>The number of RRC connection attempts with establishment cause "Terminating conversational call". UPDATED:When the RNC receives RRC connection request with establishment cause "Terminating conversational call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_conv_call_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_conv_call_atts (M1001C32)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_conv_call_fails">
    <formula>SERVLEV.mtc_conv_call_fails</formula>
    <kpi_info>
      <title>mtc_conv_call_fails (M1001C33)</title>
      <use>The number of failed RRC connection establishments with cause "Terminating conversational call". UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Terminating conversational call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_conv_call_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_conv_call_fails (M1001C33)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_strea_call_atts">
    <formula>SERVLEV.mtc_strea_call_atts</formula>
    <kpi_info>
      <title>mtc_strea_call_atts (M1001C34)</title>
      <use>The number of RRC connection attempts with establishment cause "Terminating streaming call". UPDATED:When the RNC receives RRC connection request with establishment cause "Terminating streaming call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_strea_call_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_strea_call_atts (M1001C34)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_strea_call_fails">
    <formula>SERVLEV.mtc_strea_call_fails</formula>
    <kpi_info>
      <title>mtc_strea_call_fails (M1001C35)</title>
      <use>The number of failed RRC connection establishments with cause "Terminating streaming call". UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Terminating streaming call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_strea_call_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_strea_call_fails (M1001C35)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_inter_call_atts">
    <formula>SERVLEV.mtc_inter_call_atts</formula>
    <kpi_info>
      <title>mtc_inter_call_atts (M1001C36)</title>
      <use>The number of RRC connection attempts with establishment cause "Terminating interactive call". UPDATED:When the RNC receives RRC connection request with establishment cause "Terminating interactive call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_inter_call_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_inter_call_atts (M1001C36)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_inter_call_fails">
    <formula>SERVLEV.mtc_inter_call_fails</formula>
    <kpi_info>
      <title>mtc_inter_call_fails (M1001C37)</title>
      <use>The number of failed RRC connection establishments with cause "Terminating interactive call". UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Terminating interactive call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_inter_call_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_inter_call_fails (M1001C37)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_backg_call_atts">
    <formula>SERVLEV.mtc_backg_call_atts</formula>
    <kpi_info>
      <title>mtc_backg_call_atts (M1001C38)</title>
      <use>The number of RRC connection attempts with establishment cause "Terminating background call". UPDATED:When the RNC receives RRC connection request with establishment cause "Terminating background call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_backg_call_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_backg_call_atts (M1001C38)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_backg_call_fails">
    <formula>SERVLEV.mtc_backg_call_fails</formula>
    <kpi_info>
      <title>mtc_backg_call_fails (M1001C39)</title>
      <use>The number of failed RRC connection establishments with cause "Terminating background call". UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Terminating background call".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_backg_call_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_backg_call_fails (M1001C39)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="emergency_call_atts">
    <formula>SERVLEV.emergency_call_atts</formula>
    <kpi_info>
      <title>emergency_call_atts (M1001C40)</title>
      <use>The number of RRC connection attempts with establishment cause "Emergency Call". UPDATED:When the RNC receives RRC connection request with establishment cause "Emergency Call"
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(emergency_call_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>emergency_call_atts (M1001C40)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="emergency_call_fails">
    <formula>SERVLEV.emergency_call_fails</formula>
    <kpi_info>
      <title>emergency_call_fails (M1001C41)</title>
      <use>The number of emergency call attempts that have not been admitted in the RNC either due to a failure in RRC connection establishment procedure or due to RRC connection redirection to GSM. UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause 'emergency call'.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(emergency_call_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>emergency_call_fails (M1001C41)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="intr_rat_cell_re_sel_atts">
    <formula>SERVLEV.intr_rat_cell_re_sel_atts</formula>
    <kpi_info>
      <title>intr_rat_cell_re_sel_atts (M1001C42)</title>
      <use>The number of RRC connection attempts with establishment cause "Inter-RAT cell re-selection". UPDATED: When the RNC receives RRC connection request with establishment cause "Inter-RAT cell re-selection".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(intr_rat_cell_re_sel_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>intr_rat_cell_re_sel_atts (M1001C42)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="intr_rat_cell_re_sel_fails">
    <formula>SERVLEV.intr_rat_cell_re_sel_fails</formula>
    <kpi_info>
      <title>intr_rat_cell_re_sel_fails (M1001C43)</title>
      <use>The number of failed RRC connection establishments with cause "Inter-RAT cell re-selection". UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Inter-RAT cell re-selection".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(intr_rat_cell_re_sel_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>intr_rat_cell_re_sel_fails (M1001C43)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="cell_chng_ord_atts">
    <formula>SERVLEV.cell_chng_ord_atts</formula>
    <kpi_info>
      <title>cell_chng_ord_atts (M1001C44)</title>
      <use>The number of RRC connection attempts with establishment cause "Inter-RAT cell change order". UPDATED: When the RNC receives RRC connection request with establishment cause "Inter-RAT cell change order".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(cell_chng_ord_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>cell_chng_ord_atts (M1001C44)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="cell_chng_ord_fails">
    <formula>SERVLEV.cell_chng_ord_fails</formula>
    <kpi_info>
      <title>cell_chng_ord_fails (M1001C45)</title>
      <use>The number of failed RRC connection establishments with cause "Inter-RAT cell change order". UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Inter-RAT cell change order".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(cell_chng_ord_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>cell_chng_ord_fails (M1001C45)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="registration_atts">
    <formula>SERVLEV.registration_atts</formula>
    <kpi_info>
      <title>registration_atts (M1001C46)</title>
      <use>The number of registration attempts. UPDATED: When the RNC receives RRC connection request with establishment cause "Registration".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(registration_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>registration_atts (M1001C46)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="registration_fails">
    <formula>SERVLEV.registration_fails</formula>
    <kpi_info>
      <title>registration_fails (M1001C47)</title>
      <use>The number of registration failures. UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Registration".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(registration_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>registration_fails (M1001C47)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="detach_atts">
    <formula>SERVLEV.detach_atts</formula>
    <kpi_info>
      <title>detach_atts (M1001C48)</title>
      <use>The number of detach attempts. UPDATED: When the RNC receives RRC connection request with establishment cause "Detach".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(detach_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>detach_atts (M1001C48)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="detach_fails">
    <formula>SERVLEV.detach_fails</formula>
    <kpi_info>
      <title>detach_fails (M1001C49)</title>
      <use>The number of detach failures. UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Detach".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(detach_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>detach_fails (M1001C49)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_high_prior_sign_atts">
    <formula>SERVLEV.moc_high_prior_sign_atts</formula>
    <kpi_info>
      <title>moc_high_prior_sign_atts (M1001C50)</title>
      <use>The number of mobile originating high priority signalling attempts. UPDATED: When the RNC receives RRC connection request with establishment cause "Originating high priority signalling".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_high_prior_sign_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_high_prior_sign_atts (M1001C50)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_high_prior_sign_fails">
    <formula>SERVLEV.moc_high_prior_sign_fails</formula>
    <kpi_info>
      <title>moc_high_prior_sign_fails (M1001C51)</title>
      <use>The number of mobile originating high priority signalling failures. UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Originating high priority signalling".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_high_prior_sign_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_high_prior_sign_fails (M1001C51)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_high_prior_sign_atts">
    <formula>SERVLEV.mtc_high_prior_sign_atts</formula>
    <kpi_info>
      <title>mtc_high_prior_sign_atts (M1001C52)</title>
      <use>The number of mobile terminating high priority signalling attempts. UPDATED: When the RNC receives RRC connection request with establishment cause "Terminating high priority signalling".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_high_prior_sign_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_high_prior_sign_atts (M1001C52)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_high_prior_sign_fails">
    <formula>SERVLEV.mtc_high_prior_sign_fails</formula>
    <kpi_info>
      <title>mtc_high_prior_sign_fails (M1001C53)</title>
      <use>The number of mobile terminating high priority signalling failures. UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Terminating high priority signalling".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_high_prior_sign_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_high_prior_sign_fails (M1001C53)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_low_prior_sign_atts">
    <formula>SERVLEV.moc_low_prior_sign_atts</formula>
    <kpi_info>
      <title>moc_low_prior_sign_atts (M1001C54)</title>
      <use>The number of mobile originating low priority signalling attempts. UPDATED: When the RNC receives RRC connection request with establishment cause "Originating low priority signalling".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_low_prior_sign_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_low_prior_sign_atts (M1001C54)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="moc_low_prior_sign_fails">
    <formula>SERVLEV.moc_low_prior_sign_fails</formula>
    <kpi_info>
      <title>moc_low_prior_sign_fails (M1001C55)</title>
      <use>The number of mobile originating low priority signalling failures. UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Originating low priority signalling".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(moc_low_prior_sign_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>moc_low_prior_sign_fails (M1001C55)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_low_prior_sign_atts">
    <formula>SERVLEV.mtc_low_prior_sign_atts</formula>
    <kpi_info>
      <title>mtc_low_prior_sign_atts (M1001C56)</title>
      <use>The number of mobile terminating low priority signalling attempts. UPDATED: When the RNC receives RRC connection request with establishment cause "Terminating low priority signalling".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_low_prior_sign_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_low_prior_sign_atts (M1001C56)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_low_prior_sign_fails">
    <formula>SERVLEV.mtc_low_prior_sign_fails</formula>
    <kpi_info>
      <title>mtc_low_prior_sign_fails (M1001C57)</title>
      <use>The number of mobile terminating low priority signalling failures. UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Terminating low priority signalling".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_low_prior_sign_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_low_prior_sign_fails (M1001C57)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="call_re_estab_atts">
    <formula>SERVLEV.call_re_estab_atts</formula>
    <kpi_info>
      <title>call_re_estab_atts (M1001C58)</title>
      <use>The number of call re-establishment attempts. UPDATED: When the RNC receives RRC connection request with establishment cause "Call re-establishment".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(call_re_estab_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>call_re_estab_atts (M1001C58)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="call_re_estab_fails">
    <formula>SERVLEV.call_re_estab_fails</formula>
    <kpi_info>
      <title>call_re_estab_fails (M1001C59)</title>
      <use>The number of call re-establishment failures. UPDATED:When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Call re-establishment".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(call_re_estab_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>call_re_estab_fails (M1001C59)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_cause_unknown_atts">
    <formula>SERVLEV.mtc_cause_unknown_atts</formula>
    <kpi_info>
      <title>mtc_cause_unknown_atts (M1001C60)</title>
      <use>The number of RRC connection setup attempts with cause "Terminating - cause unknown". Such cases are also included in this "unknown" category when the establishment cause IE of RRC Connection Request is out of the expected range, for example, because of RACH frame corruption. UPDATED:When the RNC receives RRC connection request with establishment cause "Terminating - cause unknown".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_cause_unknown_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_cause_unknown_atts (M1001C60)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="mtc_cause_unknown_fails">
    <formula>SERVLEV.mtc_cause_unknown_fails</formula>
    <kpi_info>
      <title>mtc_cause_unknown_fails (M1001C61)</title>
      <use>The number of RRC connection setup failures for requests with establishment cause "Terminating - cause unknown". Such cases are also included in this "unknown" category when the establishment cause IE of RRC Connection Request is out of the expected range, for example, because of RACH frame corruption. UPDATED: When the RNC sends RRC: RRC CONNECTION REJECT to the UE or the connection attempt fails while waiting for RRC: CONNECTION SETUP COMPLETE from the UE, after RRC connection request with establishment cause "Terminating - cause unknown".
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(mtc_cause_unknown_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>mtc_cause_unknown_fails (M1001C61)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="srnc_reloc_atts">
    <formula>SERVLEV.srnc_reloc_atts</formula>
    <kpi_info>
      <title>srnc_reloc_atts (M1001C62)</title>
      <use>The number of incoming UE-not-involved SRNC relocation attempts. UPDATED: When the target-RNC receives RANAP: RELOCATION REQUEST from the core network for initiating the relocation procedure.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(srnc_reloc_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>srnc_reloc_atts (M1001C62)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="srnc_reloc_fails">
    <formula>SERVLEV.srnc_reloc_fails</formula>
    <kpi_info>
      <title>srnc_reloc_fails (M1001C63)</title>
      <use>The number of unsuccessful UE-not-involved SRNC relocation attempts. UPDATED: When the incoming relocation fails either in the resource allocation phase or the target-RNC does not receive RRC: UTRAN MOBILITY INFORMATION COMFIRM from the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(srnc_reloc_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>srnc_reloc_fails (M1001C63)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="intra_freq_hho_atts">
    <formula>SERVLEV.intra_freq_hho_atts</formula>
    <kpi_info>
      <title>intra_freq_hho_atts (M1001C64)</title>
      <use>The number of inter-RNC intra-frequency hard handover attempts. UPDATED:When the target-RNC receives RANAP: RELOCATION REQUEST from the core network for initiating the hard handover procedure. If however the core network later cancels the procedure, also the counter update is canceled, i.e. the counter includes only those cases where the actual handover attempt was done from UE point of view.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(intra_freq_hho_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>intra_freq_hho_atts (M1001C64)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="intra_freq_hho_fails">
    <formula>SERVLEV.intra_freq_hho_fails</formula>
    <kpi_info>
      <title>intra_freq_hho_fails (M1001C65)</title>
      <use>The number of unsuccessful incoming inter-RNC intra-frequency hard handover attempts. UPDATED: When the incoming hard handover procedure fails either in the resource allocation phase or the target-RNC cannot establish connection with the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(intra_freq_hho_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>intra_freq_hho_fails (M1001C65)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_att_cs_voice">
    <formula>SERVLEV.rab_stp_att_cs_voice</formula>
    <kpi_info>
      <title>rab_stp_att_cs_voice (M1001C66)</title>
      <use>The number of RAB setup attempts for CS voice calls. UPDATED: When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST message, the purpose of which is to initiate the establishment of a new CS voice RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_att_cs_voice)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_att_cs_voice (M1001C66)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_att_cs_conv">
    <formula>SERVLEV.rab_stp_att_cs_conv</formula>
    <kpi_info>
      <title>rab_stp_att_cs_conv (M1001C67)</title>
      <use>The number of RAB setup attempts for CS data conversational calls. UPDATED:When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST message, the purpose of which is to initate the establishment of a new CS data conversational RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_att_cs_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_att_cs_conv (M1001C67)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_att_cs_strea">
    <formula>SERVLEV.rab_stp_att_cs_strea</formula>
    <kpi_info>
      <title>rab_stp_att_cs_strea (M1001C68)</title>
      <use>The number of RAB setup attempts for CS data streaming calls. UPDATED:When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST message, the purpose of which is to initate the establishment of a new CS data streaming RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_att_cs_strea)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_att_cs_strea (M1001C68)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_att_ps_conv">
    <formula>SERVLEV.rab_stp_att_ps_conv</formula>
    <kpi_info>
      <title>rab_stp_att_ps_conv (M1001C69)</title>
      <use>The number of RAB setup attempts for PS conversational calls. UPDATED: When the RNC receives RANAP: RAB ASSIGNMENT REQUEST message, the purpose of which is to initate the establishment of a new PS conversational RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_att_ps_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_att_ps_conv (M1001C69)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_PS_STREA">
    <formula>SERVLEV.RAB_STP_ATT_PS_STREA</formula>
    <kpi_info>
      <title>RAB_STP_ATT_PS_STREA (M1001C70)</title>
      <use>The number of RAB setup attempts for PS data streaming calls. UPDATED:When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST message, the purpose of which is to initate the establishment of a new PS data streaming RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_PS_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_PS_STREA (M1001C70)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_att_ps_inter">
    <formula>SERVLEV.rab_stp_att_ps_inter</formula>
    <kpi_info>
      <title>rab_stp_att_ps_inter (M1001C71)</title>
      <use>The number of RAB setup attempts for PS data interactive calls. UPDATED:When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST message, the purpose of which is to initate the establishment of a new PS data interactive RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_att_ps_inter)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_att_ps_inter (M1001C71)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_PS_BACKG">
    <formula>SERVLEV.RAB_STP_ATT_PS_BACKG</formula>
    <kpi_info>
      <title>RAB_STP_ATT_PS_BACKG (M1001C72)</title>
      <use>The number of RAB setup attempts for PS data background calls. UPDATED:When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST message, the purpose of which is to initate the establishment of a new PS data background RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_PS_BACKG)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_PS_BACKG (M1001C72)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_comp_cs_voice">
    <formula>SERVLEV.rab_stp_comp_cs_voice</formula>
    <kpi_info>
      <title>rab_stp_comp_cs_voice (M1001C73)</title>
      <use>The number of RAB setup completions for CS voice calls. --- Before this, the RNC has reserved RNC, BTS, and transport resources for the RAB. UPDATED:When the RNC sends an RRC: RADIO BEARER SETUP message, the purpose of which is to establish a radio bearer for a new CS voice RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_comp_cs_voice)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_comp_cs_voice (M1001C73)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_comp_cs_conv">
    <formula>SERVLEV.rab_stp_comp_cs_conv</formula>
    <kpi_info>
      <title>rab_stp_comp_cs_conv (M1001C74)</title>
      <use>The number of RAB setup completions for CS data conversational calls. --- Before this, the RNC has reserved RNC, BTS, and transport resources for the RAB. UPDATED:When the RNC sends an RRC: RADIO BEARER SETUP message, the purpose of which is to establish a radio bearer for a new CS data conversational RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_comp_cs_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_comp_cs_conv (M1001C74)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_COMP_CS_STREA">
    <formula>SERVLEV.RAB_STP_COMP_CS_STREA</formula>
    <kpi_info>
      <title>RAB_STP_COMP_CS_STREA (M1001C75)</title>
      <use>The number of RAB setup completions for CS data streaming calls. --- Before this, the RNC has reserved RNC, BTS, and transport resources for the RAB. UPDATED:When the RNC sends an RRC: RADIO BEARER SETUP message, the purpose of which is to establish a radio bearer for a new CS data streaming RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_COMP_CS_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_COMP_CS_STREA (M1001C75)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_comp_ps_conv">
    <formula>SERVLEV.rab_stp_comp_ps_conv</formula>
    <kpi_info>
      <title>rab_stp_comp_ps_conv (M1001C76)</title>
      <use>The number of RAB setup completions for PS conversational calls. --- Before this, the RNC has reserved RNC, BTS, and transport resources for the RAB. UPDATED: When the RNC sends an RRC: RADIO BEARER SETUP message, the purpose of which is to establish a radio bearer for a new PS conversational RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_comp_ps_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_comp_ps_conv (M1001C76)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_comp_ps_strea">
    <formula>SERVLEV.rab_stp_comp_ps_strea</formula>
    <kpi_info>
      <title>rab_stp_comp_ps_strea (M1001C77)</title>
      <use>The number of RAB setup completions for PS data streaming calls. --- Before this, the RNC has reserved RNC, BTS, and transport resources for the RAB. UPDATED:When the RNC sends an RRC: RADIO BEARER SETUP message, the purpose of which is to establish a radio bearer for a new PS data streaming RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_comp_ps_strea)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_comp_ps_strea (M1001C77)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_comp_ps_inter">
    <formula>SERVLEV.rab_stp_comp_ps_inter</formula>
    <kpi_info>
      <title>rab_stp_comp_ps_inter (M1001C78)</title>
      <use>The number of RAB setup completions for PS data interactive calls. UPDATED:When the RNC sends an RRC: RADIO BEARER SETUP message, the purpose of which is to establish a radio bearer for a new PS data interactive RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_comp_ps_inter)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_comp_ps_inter (M1001C78)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_comp_ps_backg">
    <formula>SERVLEV.rab_stp_comp_ps_backg</formula>
    <kpi_info>
      <title>rab_stp_comp_ps_backg (M1001C79)</title>
      <use>The number of RAB setup completions for PS data background calls. UPDATED:When the RNC sends an RRC: RADIO BEARER SETUP message, the purpose of which is to establish a radio bearer for a new PS data background RAB.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_comp_ps_backg)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_comp_ps_backg (M1001C79)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_voice_ac">
    <formula>SERVLEV.rab_stp_fail_cs_voice_ac</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_voice_ac (M1001C80)</title>
      <use>The number of RAB setup failures caused by admission control for CS voice. UPDATED:When the RNC decides to reject the CS voice RAB request because the admission control entity reports a failure (excluding frozen BTS reason). This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_voice_ac)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_voice_ac (M1001C80)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_voice_bts">
    <formula>SERVLEV.rab_stp_fail_cs_voice_bts</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_voice_bts (M1001C81)</title>
      <use>The number of RAB setup failures caused by BTS for CS voice. UPDATED:When the RAB assignment fails due to radio link setup or reconfiguration failure. The failure can happen either in the Iub or in the Iur interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_voice_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_voice_bts (M1001C81)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_voice_trans">
    <formula>SERVLEV.rab_stp_fail_cs_voice_trans</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_voice_trans (M1001C82)</title>
      <use>The number of RAB setup failures caused by transport for CS voice. UPDATED:When the RNC decides to reject the CS voice RAB request due to transport failure. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_voice_trans)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_voice_trans (M1001C82)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_voice_rnc">
    <formula>SERVLEV.rab_stp_fail_cs_voice_rnc</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_voice_rnc (M1001C83)</title>
      <use>The number of RAB setup failures caused by RNC for CS voice. UPDATED:When the RNC decides to reject the CS voice RAB request because of RNC internal failure in the resource allocation phase or because the radio connection to the UE is lost and therefore RRC: RADIO BEARER SETUP message cannot be sent to the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_voice_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_voice_rnc (M1001C83)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_voice_frozbs">
    <formula>SERVLEV.rab_stp_fail_cs_voice_frozbs</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_voice_frozbs (M1001C84)</title>
      <use>The number of RAB setup failures caused by frozen BTS for CS voice. UPDATED:When the RNC decides to reject the CS voice RAB request because the admission control entity blocks the radio link establishment to ensure the setup of high priority calls. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_voice_frozbs)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_voice_frozbs (M1001C84)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_conv_ac">
    <formula>SERVLEV.rab_stp_fail_cs_conv_ac</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_conv_ac (M1001C85)</title>
      <use>The number of RAB setup failures caused by admission control for CS data conversational. UPDATED:When the RNC decides to reject the CS data conversational RAB request because the admission control entity reports a failure (excluding frozen BTS reason). This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_conv_ac)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_conv_ac (M1001C85)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_conv_bts">
    <formula>SERVLEV.rab_stp_fail_cs_conv_bts</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_conv_bts (M1001C86)</title>
      <use>The number of RAB setup failures caused by BTS for CS data conversational. UPDATED:When the RAB assignment fails due to radio link setup or reconfiguration failure. The failure can happen either in the Iub or in the Iur interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_conv_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_conv_bts (M1001C86)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_conv_trans">
    <formula>SERVLEV.rab_stp_fail_cs_conv_trans</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_conv_trans (M1001C87)</title>
      <use>The number of RAB setup failures caused by transport for CS data conversational. UPDATED:When the RNC decides to reject the CS data conversational RAB request due to transport failure. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_conv_trans)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_conv_trans (M1001C87)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_conv_rnc">
    <formula>SERVLEV.rab_stp_fail_cs_conv_rnc</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_conv_rnc (M1001C88)</title>
      <use>The number of RAB setup failures caused by RNC for CS data conversational. UPDATED:When the RNC decides to reject the CS data conversational RAB request because of RNC internal failure in the resource allocation phase or because the radio connection to the UE is lost and therefore RRC: RADIO BEARER SETUP message cannot be sent to the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_conv_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_conv_rnc (M1001C88)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_conv_frozbs">
    <formula>SERVLEV.rab_stp_fail_cs_conv_frozbs</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_conv_frozbs (M1001C89)</title>
      <use>The number of RAB setup failures caused by frozen BTS for CS data conversational. UPDATED:When the RNC decides to reject the CS data conversational RAB request because the admission control entity blocks the radio link establishment to ensure the setup of high priority calls. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_conv_frozbs)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_conv_frozbs (M1001C89)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_strea_ac">
    <formula>SERVLEV.rab_stp_fail_cs_strea_ac</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_strea_ac (M1001C90)</title>
      <use>The number of RAB setup failures caused by admission control for CS data streaming. UPDATED:When the RNC decides to reject the CS data streaming RAB request because the admission control entity reports a failure (excluding frozen BTS reason). This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_strea_ac)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_strea_ac (M1001C90)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_strea_bts">
    <formula>SERVLEV.rab_stp_fail_cs_strea_bts</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_strea_bts (M1001C91)</title>
      <use>The number of RAB setup failures caused by BTS for CS data streaming. UPDATED:When the RAB assignment fails due to radio link setup or reconfiguration failure. The failure can happen either in the Iub or in the Iur interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_strea_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_strea_bts (M1001C91)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_strea_trans">
    <formula>SERVLEV.rab_stp_fail_cs_strea_trans</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_strea_trans (M1001C92)</title>
      <use>The number of RAB setup failures caused by transport for CS data streaming. UPDATED:When the RNC decides to reject the CS data streaming RAB request due to transport failure. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_strea_trans)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_strea_trans (M1001C92)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_strea_rnc">
    <formula>SERVLEV.rab_stp_fail_cs_strea_rnc</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_strea_rnc (M1001C93)</title>
      <use>The number of RAB setup failures caused by RNC for CS data streaming. UPDATED:When the RNC decides to reject the CS data streaming RAB request because of RNC internal failure in the resource allocation phase or because the radio connection to the UE is lost and therefore RRC: RADIO BEARER SETUP message cannot be sent to the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_strea_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_strea_rnc (M1001C93)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_cs_strea_frozbs">
    <formula>SERVLEV.rab_stp_fail_cs_strea_frozbs</formula>
    <kpi_info>
      <title>rab_stp_fail_cs_strea_frozbs (M1001C94)</title>
      <use>The number of RAB setup failures caused by frozen BTS for CS data streaming. UPDATED:When the RNC decides to reject the CS data streaming RAB request because the admission control entity blocks the radio link establishment to ensure the setup of high priority calls. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_cs_strea_frozbs)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_cs_strea_frozbs (M1001C94)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_conv_ac">
    <formula>SERVLEV.rab_stp_fail_ps_conv_ac</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_conv_ac (M1001C95)</title>
      <use>The number of RAB setup failures caused by admission control for PS conversational. UPDATED: When the RNC decides to reject the PS conversational RAB request because the admission control entity reports a failure (excluding frozen BTS reason). This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_conv_ac)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_conv_ac (M1001C95)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_conv_bts">
    <formula>SERVLEV.rab_stp_fail_ps_conv_bts</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_conv_bts (M1001C96)</title>
      <use>The number of RAB setup failures caused by BTS for PS conversational. UPDATED: When the RAB assignment fails due to radio link setup or reconfiguration failure. The failure can happen either in the Iub or in the Iur interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_conv_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_conv_bts (M1001C96)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_conv_trans">
    <formula>SERVLEV.rab_stp_fail_ps_conv_trans</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_conv_trans (M1001C97)</title>
      <use>The number of RAB setup failures caused by transport for PS conversational. UPDATED: When the RNC decides to reject the PS conversational RAB request due to transport failure. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_conv_trans)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_conv_trans (M1001C97)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_conv_rnc">
    <formula>SERVLEV.rab_stp_fail_ps_conv_rnc</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_conv_rnc (M1001C98)</title>
      <use>The number of RAB setup failures caused by RNC for PS conversational. UPDATED: When the RNC decides to reject the PS conversational RAB request due to RNC internal failure in the resource allocation phase or because the radio connection to the UE is lost and therefore RRC: RADIO BEARER SETUP message cannot be sent to the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_conv_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_conv_rnc (M1001C98)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_conv_frozbs">
    <formula>SERVLEV.rab_stp_fail_ps_conv_frozbs</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_conv_frozbs (M1001C99)</title>
      <use>The number of RAB setup failures caused by frozen BTS for PS conversational. UPDATED: When the RNC decides to reject the PS conversational RAB request because the admission control entity blocks the radio link establishment to ensure the setup of high priority calls. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_conv_frozbs)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_conv_frozbs (M1001C99)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_strea_ac">
    <formula>SERVLEV.rab_stp_fail_ps_strea_ac</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_strea_ac (M1001C100)</title>
      <use>The number of RAB setup failures caused by admission control for PS data streaming. UPDATED:When the RNC decides to reject the PS data streaming RAB request because the admission control entity reports a failure (excluding frozen BTS reason). This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_strea_ac)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_strea_ac (M1001C100)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_strea_bts">
    <formula>SERVLEV.rab_stp_fail_ps_strea_bts</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_strea_bts (M1001C101)</title>
      <use>The number of RAB setup failures caused by BTS for PS data streaming. UPDATED:When the RAB assignment fails due to radio link setup or reconfiguration failure. The failure can happen either in the Iub or in the Iur interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_strea_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_strea_bts (M1001C101)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_strea_trans">
    <formula>SERVLEV.rab_stp_fail_ps_strea_trans</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_strea_trans (M1001C102)</title>
      <use>The number of RAB setup failures caused by transport for PS data streaming. UPDATED:When the RNC decides to reject the PS data streaming RAB request due to transport failure. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_strea_trans)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_strea_trans (M1001C102)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_strea_rnc">
    <formula>SERVLEV.rab_stp_fail_ps_strea_rnc</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_strea_rnc (M1001C103)</title>
      <use>The number of RAB setup failures caused by RNC for PS data streaming. UPDATED:When the RNC decides to reject the PS data streaming RAB request because of RNC internal failure in the resource allocation phase or because the radio connection to the UE is lost and therefore RRC: RADIO BEARER SETUP message cannot be sent to the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_strea_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_strea_rnc (M1001C103)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_strea_frozbs">
    <formula>SERVLEV.rab_stp_fail_ps_strea_frozbs</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_strea_frozbs (M1001C104)</title>
      <use>The number of RAB setup failures caused by frozen BTS for PS data streaming. UPDATED:When the RNC decides to reject the PS data streaming RAB request because the admission control entity blocks the radio link establishment to ensure the setup of high priority calls. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_strea_frozbs)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_strea_frozbs (M1001C104)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_inter_ac">
    <formula>SERVLEV.rab_stp_fail_ps_inter_ac</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_inter_ac (M1001C105)</title>
      <use>The number of RAB setup failures caused by admission control for PS data interactive. UPDATED:When the RNC decides to reject the PS data interactive RAB request because the admission control entity reports a failure (excluding frozen BTS reason). This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_inter_ac)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_inter_ac (M1001C105)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_inter_trans">
    <formula>SERVLEV.rab_stp_fail_ps_inter_trans</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_inter_trans (M1001C106)</title>
      <use>This counter is not supported from RN4.0 onwards. Original description: The number of DCH setup failures caused by Iub AAL2 transport resource shortage for PS data interactive. The failure can happen in FACH to DCH transition, DCH 0/0 to DCH xx/yy transition, DCH upgrade, soft handover branch addition or Intra-RNC HHO. UPDATED: This counter is not supported from RN4.0 onwards. Original description: When NRT DCH setup fails due to Iub transport resource shortage.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_inter_trans)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_inter_trans (M1001C106)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_inter_rnc">
    <formula>SERVLEV.rab_stp_fail_ps_inter_rnc</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_inter_rnc (M1001C107)</title>
      <use>The number of RAB setup failures caused by RNC for PS data interactive. UPDATED:When the RNC decides to reject the PS data interactive RAB request because of RNC internal failure in the resource allocation phase or because the radio connection to the UE is lost and therefore RRC: RADIO BEARER SETUP message cannot be sent to the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_inter_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_inter_rnc (M1001C107)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_inter_anch">
    <formula>SERVLEV.rab_stp_fail_ps_inter_anch</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_inter_anch (M1001C108)</title>
      <use>The number of RAB setup failures caused by ongoing relocation or hard handover for PS data interactive. UPDATED: When the RNC rejects the PS data interactive RAB assignment request due to ongoing relocation or hard handover.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_inter_anch)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_inter_anch (M1001C108)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_inter_frozbs">
    <formula>SERVLEV.rab_stp_fail_ps_inter_frozbs</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_inter_frozbs (M1001C109)</title>
      <use>The number of RAB setup failures caused by frozen BTS for PS data interactive. UPDATED:When the RNC decides to reject the PS data interactive RAB request because the admission control entity blocks the radio link establishment to ensure the setup of emergency calls. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_inter_frozbs)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_inter_frozbs (M1001C109)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_backg_ac">
    <formula>SERVLEV.rab_stp_fail_ps_backg_ac</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_backg_ac (M1001C110)</title>
      <use>The number of RAB setup failures caused by admission control for PS data background. UPDATED:When the RNC decides to reject the PS data background RAB request because the admission control entity reports a failure (excluding frozen BTS reason). This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_backg_ac)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_backg_ac (M1001C110)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_backg_trans">
    <formula>SERVLEV.rab_stp_fail_ps_backg_trans</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_backg_trans (M1001C111)</title>
      <use>This counter is not supported from RN4.0 onwards. Original description: The number of DCH setup failures caused by Iub AAL2 transport resource shortage for PS data background. The failure can happen in FACH to DCH transition, DCH 0/0 to DCH xx/yy transition, DCH upgrade, soft handover branch addition or Intra-RNC HHO. UPDATED: This counter is not supported from RN4.0 onwards. Original description: When NRT DCH setup fails due to Iub transport resource shortage.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_backg_trans)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_backg_trans (M1001C111)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_backg_rnc">
    <formula>SERVLEV.rab_stp_fail_ps_backg_rnc</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_backg_rnc (M1001C112)</title>
      <use>The number of RAB setup failures caused by RNC for PS data background. UPDATED:When the RNC decides to reject the PS data background RAB request because of RNC internal failure in the resource allocation phase or because the radio connection to the UE is lost and therefore RRC: RADIO BEARER SETUP message cannot be sent to the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_backg_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_backg_rnc (M1001C112)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_backg_anch">
    <formula>SERVLEV.rab_stp_fail_ps_backg_anch</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_backg_anch (M1001C113)</title>
      <use>The number of RAB setup failures caused by ongoing relocation or hard handover for PS data background. UPDATED: When the RNC rejects the PS data background RAB assignment request due to ongoing relocation or hard handover.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_backg_anch)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_backg_anch (M1001C113)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_stp_fail_ps_backg_frozbs">
    <formula>SERVLEV.rab_stp_fail_ps_backg_frozbs</formula>
    <kpi_info>
      <title>rab_stp_fail_ps_backg_frozbs (M1001C114)</title>
      <use>The number of RAB setup failures caused by frozen BTS for PS data background. UPDATED:When the RNC decides to reject the PS data background RAB request because the admission control entity blocks the radio link establishment to ensure the setup of emergency calls. This happens before the RRC: RADIO BEARER SETUP message would be sent to the UE. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_stp_fail_ps_backg_frozbs)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_stp_fail_ps_backg_frozbs (M1001C114)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_comp_cs_voice">
    <formula>SERVLEV.rab_acc_comp_cs_voice</formula>
    <kpi_info>
      <title>rab_acc_comp_cs_voice (M1001C115)</title>
      <use>The number of completed RAB access phases for CS voice. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for CS voice.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_comp_cs_voice)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_comp_cs_voice (M1001C115)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_comp_cs_conv">
    <formula>SERVLEV.rab_acc_comp_cs_conv</formula>
    <kpi_info>
      <title>rab_acc_comp_cs_conv (M1001C116)</title>
      <use>The number of completed RAB access phases for CS data conversational. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for CS data conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_comp_cs_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_comp_cs_conv (M1001C116)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_comp_cs_strea">
    <formula>SERVLEV.rab_acc_comp_cs_strea</formula>
    <kpi_info>
      <title>rab_acc_comp_cs_strea (M1001C117)</title>
      <use>The number of completed RAB access phases for CS data streaming. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for CS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_comp_cs_strea)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_comp_cs_strea (M1001C117)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_comp_ps_conv">
    <formula>SERVLEV.rab_acc_comp_ps_conv</formula>
    <kpi_info>
      <title>rab_acc_comp_ps_conv (M1001C118)</title>
      <use>The number of completed RAB access phases for PS conversational. UPDATED: When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for PS conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_comp_ps_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_comp_ps_conv (M1001C118)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_comp_ps_strea">
    <formula>SERVLEV.rab_acc_comp_ps_strea</formula>
    <kpi_info>
      <title>rab_acc_comp_ps_strea (M1001C119)</title>
      <use>The number of completed RAB access phases for PS data streaming. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for PS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_comp_ps_strea)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_comp_ps_strea (M1001C119)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_comp_ps_inter">
    <formula>SERVLEV.rab_acc_comp_ps_inter</formula>
    <kpi_info>
      <title>rab_acc_comp_ps_inter (M1001C120)</title>
      <use>The number of completed RAB access phases for PS data interactive. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for PS data interactive.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_comp_ps_inter)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_comp_ps_inter (M1001C120)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_comp_ps_backg">
    <formula>SERVLEV.rab_acc_comp_ps_backg</formula>
    <kpi_info>
      <title>rab_acc_comp_ps_backg (M1001C121)</title>
      <use>The number of completed RAB access phases for PS data background. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for PS data background.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_comp_ps_backg)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_comp_ps_backg (M1001C121)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_cs_voice_ms">
    <formula>SERVLEV.rab_acc_fail_cs_voice_ms</formula>
    <kpi_info>
      <title>rab_acc_fail_cs_voice_ms (M1001C122)</title>
      <use>A number of RAB setup access failures for CS Voice Calls caused by the UE. UPDATED:When the RAB access setup for a CS Voice Call fails because of the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_cs_voice_ms)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_cs_voice_ms (M1001C122)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_cs_voice_rnc">
    <formula>SERVLEV.rab_acc_fail_cs_voice_rnc</formula>
    <kpi_info>
      <title>rab_acc_fail_cs_voice_rnc (M1001C123)</title>
      <use>The number of RAB setup access failures for CS Voice Calls caused by factors other than UE related reasons. UPDATED:When the RAB access phase for a CS Voice Call fails caused by factors other than UE related reasons. The most typical reason is that the MGW does not respond IUUP INIT message sent by the RNC.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_cs_voice_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_cs_voice_rnc (M1001C123)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_cs_conv_ms">
    <formula>SERVLEV.rab_acc_fail_cs_conv_ms</formula>
    <kpi_info>
      <title>rab_acc_fail_cs_conv_ms (M1001C124)</title>
      <use>A number of RAB setup access failures for CS Data Calls with conversational class caused by the UE. UPDATED:When the RAB access setup for a CS Data Call fails because of the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_cs_conv_ms)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_cs_conv_ms (M1001C124)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_cs_conv_rnc">
    <formula>SERVLEV.rab_acc_fail_cs_conv_rnc</formula>
    <kpi_info>
      <title>rab_acc_fail_cs_conv_rnc (M1001C125)</title>
      <use>A number of RAB setup access failures for CS Data Calls with conversational class caused by RNC's internal reasons. UPDATED:When the RAB access setup for a CS Data Call with conversational class fails for internal reasons.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_cs_conv_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_cs_conv_rnc (M1001C125)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_cs_strea_ms">
    <formula>SERVLEV.rab_acc_fail_cs_strea_ms</formula>
    <kpi_info>
      <title>rab_acc_fail_cs_strea_ms (M1001C126)</title>
      <use>A number of RAB setup access failures for CS Data Calls with streaming class caused by the UE. UPDATED:When the RAB access setup for a CS Data Call fails because of the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_cs_strea_ms)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_cs_strea_ms (M1001C126)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_cs_strea_rnc">
    <formula>SERVLEV.rab_acc_fail_cs_strea_rnc</formula>
    <kpi_info>
      <title>rab_acc_fail_cs_strea_rnc (M1001C127)</title>
      <use>A number of RAB setup access failures for CS Data Calls with streaming class caused by RNC's internal reasons. UPDATED:When the RAB access setup for a CS data call with streaming class fails for internal reasons.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_cs_strea_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_cs_strea_rnc (M1001C127)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_ps_conv_ms">
    <formula>SERVLEV.rab_acc_fail_ps_conv_ms</formula>
    <kpi_info>
      <title>rab_acc_fail_ps_conv_ms (M1001C128)</title>
      <use>The number of RAB setup access failures for PS conversational class caused by the UE. UPDATED: When the UE responds Radio Bearer Setup Failure or does not respond anything for the Radio Bearer Setup message sent by the RNC.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_ps_conv_ms)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_ps_conv_ms (M1001C128)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_ps_conv_rnc">
    <formula>SERVLEV.rab_acc_fail_ps_conv_rnc</formula>
    <kpi_info>
      <title>rab_acc_fail_ps_conv_rnc (M1001C129)</title>
      <use>The number of RAB setup access failures for PS conversational class due to other than UE related reasons. UPDATED: When the RAB assignment fails after sending Radio Bearer Setup to the UE, for other reasons than the UE responding with failure or not responding at all.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_ps_conv_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_ps_conv_rnc (M1001C129)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_ps_strea_ms">
    <formula>SERVLEV.rab_acc_fail_ps_strea_ms</formula>
    <kpi_info>
      <title>rab_acc_fail_ps_strea_ms (M1001C130)</title>
      <use>A number of RAB setup access failures for PS Calls with streaming class caused by the UE. UPDATED:When the RAB access setup for a PS Data Call fails because of the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_ps_strea_ms)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_ps_strea_ms (M1001C130)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_ps_strea_rnc">
    <formula>SERVLEV.rab_acc_fail_ps_strea_rnc</formula>
    <kpi_info>
      <title>rab_acc_fail_ps_strea_rnc (M1001C131)</title>
      <use>A number of RAB setup access failures for PS Calls with streaming class caused by RNC's internal reasons. UPDATED:When the RAB access setup for a PS Data Call with streaming class fails for internal reasons.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_ps_strea_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_ps_strea_rnc (M1001C131)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_ps_inter_ms">
    <formula>SERVLEV.rab_acc_fail_ps_inter_ms</formula>
    <kpi_info>
      <title>rab_acc_fail_ps_inter_ms (M1001C132)</title>
      <use>A number of RAB setup access failures for PS Calls with interactive class caused by the UE. UPDATED:When the RAB access setup for a PS Data Call fails because of the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_ps_inter_ms)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_ps_inter_ms (M1001C132)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_ps_inter_rnc">
    <formula>SERVLEV.rab_acc_fail_ps_inter_rnc</formula>
    <kpi_info>
      <title>rab_acc_fail_ps_inter_rnc (M1001C133)</title>
      <use>A number of RAB setup access failures for PS Calls with interactive class caused by RNC's internal reasons. UPDATED:When the RAB access setup for a PS Data Call with background class fails for internal reasons.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_ps_inter_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_ps_inter_rnc (M1001C133)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_ps_backg_ms">
    <formula>SERVLEV.rab_acc_fail_ps_backg_ms</formula>
    <kpi_info>
      <title>rab_acc_fail_ps_backg_ms (M1001C134)</title>
      <use>A number of RAB setup access failures for PS Calls with background class caused by the UE. UPDATED:When the RAB access setup for a PS Data Call fails because of the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_ps_backg_ms)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_ps_backg_ms (M1001C134)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_acc_fail_ps_backg_rnc">
    <formula>SERVLEV.rab_acc_fail_ps_backg_rnc</formula>
    <kpi_info>
      <title>rab_acc_fail_ps_backg_rnc (M1001C135)</title>
      <use>A number of RAB setup access failures for PS Calls with background class caused by RNC's internal reasons. UPDATED:When the RAB access setup for a PS Data Call with background class fails for internal reasons.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_acc_fail_ps_backg_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_acc_fail_ps_backg_rnc (M1001C135)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_comp_cs_voice">
    <formula>SERVLEV.rab_act_comp_cs_voice</formula>
    <kpi_info>
      <title>rab_act_comp_cs_voice (M1001C136)</title>
      <use>The number of normal completions of RAB active phases for CS voice. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN after normal RAB release for CS voice.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_comp_cs_voice)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_comp_cs_voice (M1001C136)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_comp_cs_conv">
    <formula>SERVLEV.rab_act_comp_cs_conv</formula>
    <kpi_info>
      <title>rab_act_comp_cs_conv (M1001C137)</title>
      <use>The number of normal completions of RAB active phases for CS data conversational. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN after normal RAB release for CS data conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_comp_cs_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_comp_cs_conv (M1001C137)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_comp_cs_strea">
    <formula>SERVLEV.rab_act_comp_cs_strea</formula>
    <kpi_info>
      <title>rab_act_comp_cs_strea (M1001C138)</title>
      <use>The number of normal completions of RAB active phases for CS data streaming. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN after normal RAB release for CS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_comp_cs_strea)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_comp_cs_strea (M1001C138)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_comp_ps_conv">
    <formula>SERVLEV.rab_act_comp_ps_conv</formula>
    <kpi_info>
      <title>rab_act_comp_ps_conv (M1001C139)</title>
      <use>The number of normal completions of RAB active phases for PS conversational. UPDATED: When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN after normal RAB release for PS conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_comp_ps_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_comp_ps_conv (M1001C139)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_comp_ps_strea">
    <formula>SERVLEV.rab_act_comp_ps_strea</formula>
    <kpi_info>
      <title>rab_act_comp_ps_strea (M1001C140)</title>
      <use>The number of normal completions of RAB active phases for PS data streaming. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN after normal RAB release for PS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_comp_ps_strea)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_comp_ps_strea (M1001C140)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_comp_ps_inter">
    <formula>SERVLEV.rab_act_comp_ps_inter</formula>
    <kpi_info>
      <title>rab_act_comp_ps_inter (M1001C141)</title>
      <use>The number of normal completions of RAB active phases for PS data interactive. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN after normal RAB release for PS data interactive.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_comp_ps_inter)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_comp_ps_inter (M1001C141)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_comp_ps_backg">
    <formula>SERVLEV.rab_act_comp_ps_backg</formula>
    <kpi_info>
      <title>rab_act_comp_ps_backg (M1001C142)</title>
      <use>The number of normal completions of RAB active phases for PS data background. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN after normal RAB release for PS data background.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_comp_ps_backg)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_comp_ps_backg (M1001C142)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_cs_voice_srnc">
    <formula>SERVLEV.rab_act_rel_cs_voice_srnc</formula>
    <kpi_info>
      <title>rab_act_rel_cs_voice_srnc (M1001C143)</title>
      <use>The number of RAB releases due to UE-not-involved SRNC relocation for CS voice calls. Note that from RN5.0 onwards this counter does not include hard handovers because they have dedicated counters. UPDATED:When the RNC receives an RANAP: IU RELEASE COMMAND message from the CN in the end of UE-not-involved SRNC relocation and the RAB type is CS voice.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_cs_voice_srnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_cs_voice_srnc (M1001C143)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_cs_voice_p_emp">
    <formula>SERVLEV.rab_act_rel_cs_voice_p_emp</formula>
    <kpi_info>
      <title>rab_act_rel_cs_voice_p_emp (M1001C144)</title>
      <use>The number of RAB releases due to pre-emption for CS voice calls. UPDATED:When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST (release RAB), or an RANAP: IU RELEASE COMMAND message from the CN after the RNC has sent an RAB/IU RELEASE REQUEST to the CN with the cause "RAB pre-empted" - if the RAB type is CS voice.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_cs_voice_p_emp)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_cs_voice_p_emp (M1001C144)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_voice_iu">
    <formula>SERVLEV.rab_act_fail_cs_voice_iu</formula>
    <kpi_info>
      <title>rab_act_fail_cs_voice_iu (M1001C145)</title>
      <use>The number of RAB active failures caused by Iu-interface related problem for CS voice. UPDATED:When the RAB is released due to some abnormal reason related to Iu-interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_voice_iu)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_voice_iu (M1001C145)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_voice_radio">
    <formula>SERVLEV.rab_act_fail_cs_voice_radio</formula>
    <kpi_info>
      <title>rab_act_fail_cs_voice_radio (M1001C146)</title>
      <use>The number of RAB active failures caused by radio interface synchronisation for CS voice. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or an RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to radio interface synchronisation failure, and the RAB type is CS voice. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_voice_radio)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_voice_radio (M1001C146)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_voice_bts">
    <formula>SERVLEV.rab_act_fail_cs_voice_bts</formula>
    <kpi_info>
      <title>rab_act_fail_cs_voice_bts (M1001C147)</title>
      <use>The number of RAB active failures caused by BTS (for example, radio link setup or reconfiguration problem) for CS voice. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or an RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to BTS failure, and the RAB type is CS voice. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_voice_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_voice_bts (M1001C147)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_voice_iur">
    <formula>SERVLEV.rab_act_fail_cs_voice_iur</formula>
    <kpi_info>
      <title>rab_act_fail_cs_voice_iur (M1001C148)</title>
      <use>The number of RAB active failures caused by drift RNC procedures (for example, radio link reconfiguration failure in DRNC) for CS voice. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or an RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested procedure failure in drift RNC, and the RAB type is CS voice. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_voice_iur)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_voice_iur (M1001C148)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_voice_i_chk">
    <formula>SERVLEV.rab_act_fail_cs_voice_i_chk</formula>
    <kpi_info>
      <title>rab_act_fail_cs_voice_i_chk (M1001C149)</title>
      <use>The original idea of this counter was to measure the number of CS voice RAB releases caused by integrity check failures. However, if integrity check fails the failed user plane message is ignored and the receiving entity does not send any failure related message to the RNC. UPDATED:This counter is never updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_voice_i_chk)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_voice_i_chk (M1001C149)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_voice_rnc">
    <formula>SERVLEV.rab_act_fail_cs_voice_rnc</formula>
    <kpi_info>
      <title>rab_act_fail_cs_voice_rnc (M1001C150)</title>
      <use>The number of RAB active failures caused by some reason not covered by the other failure counters for CS voice. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or an RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to some failure not covered by the other failure counters, and the RAB type is CS voice. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_voice_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_voice_rnc (M1001C150)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_cs_conv_srnc">
    <formula>SERVLEV.rab_act_rel_cs_conv_srnc</formula>
    <kpi_info>
      <title>rab_act_rel_cs_conv_srnc (M1001C151)</title>
      <use>The number of RAB releases due to UE-not-involved SRNC relocation for CS data conversational calls. Note that from RN5.0 onwards this counter does not include hard handovers because they have dedicated counters. UPDATED:When the RNC receives an RANAP: IU RELEASE COMMAND message from the CN in the end of UE-not-involved SRNC relocation procedure, and the RAB type is CS data conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_cs_conv_srnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_cs_conv_srnc (M1001C151)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_cs_conv_p_emp">
    <formula>SERVLEV.rab_act_rel_cs_conv_p_emp</formula>
    <kpi_info>
      <title>rab_act_rel_cs_conv_p_emp (M1001C152)</title>
      <use>The number of RAB releases due to pre-emption for CS data conversational calls. UPDATED:When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST (release RAB), or an RANAP: IU RELEASE COMMAND message from the CN after the RNC has sent an RAB/IU RELEASE REQUEST to the CN with the cause "RAB pre-empted" - if the RAB type is CS data conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_cs_conv_p_emp)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_cs_conv_p_emp (M1001C152)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_cs_strea_srnc">
    <formula>SERVLEV.rab_act_rel_cs_strea_srnc</formula>
    <kpi_info>
      <title>rab_act_rel_cs_strea_srnc (M1001C153)</title>
      <use>The number of RAB releases due to UE-not-involved SRNC relocation for CS data streaming calls. Note that from RN5.0 onwards this counter does not include hard handovers because they have dedicated counters. UPDATED:When the RNC receives an RANAP: IU RELEASE COMMAND message from the CN in the end of UE-not-involved SRNC relocation procedure, and the RAB type is CS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_cs_strea_srnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_cs_strea_srnc (M1001C153)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_cs_strea_p_emp">
    <formula>SERVLEV.rab_act_rel_cs_strea_p_emp</formula>
    <kpi_info>
      <title>rab_act_rel_cs_strea_p_emp (M1001C154)</title>
      <use>The number of RAB releases due to pre-emption for CS data streaming calls. UPDATED:When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST (release RAB), or an RANAP: IU RELEASE COMMAND message from the CN after the RNC has sent an RAB/IU RELEASE REQUEST to the CN with the cause "RAB pre-empted" - if the RAB type is CS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_cs_strea_p_emp)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_cs_strea_p_emp (M1001C154)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_conv_iu">
    <formula>SERVLEV.rab_act_fail_cs_conv_iu</formula>
    <kpi_info>
      <title>rab_act_fail_cs_conv_iu (M1001C155)</title>
      <use>The number of RAB active failures caused by Iu-interface related problem for CS data conversational. UPDATED:When the RAB is released due to some abnormal reason related to Iu-interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_conv_iu)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_conv_iu (M1001C155)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_conv_radio">
    <formula>SERVLEV.rab_act_fail_cs_conv_radio</formula>
    <kpi_info>
      <title>rab_act_fail_cs_conv_radio (M1001C156)</title>
      <use>The number of RAB active failures caused by radio interface synchronisation for CS data conversational. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or an RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to radio interface synchronisation failure, and the RAB type is CS data conversational. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_conv_radio)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_conv_radio (M1001C156)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_conv_bts">
    <formula>SERVLEV.rab_act_fail_cs_conv_bts</formula>
    <kpi_info>
      <title>rab_act_fail_cs_conv_bts (M1001C157)</title>
      <use>The number of RAB active failures caused by BTS (for example, radio link setup or reconfiguration problem) for CS data conversational. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or an RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to BTS failure, and the RAB type is CS data conversational. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_conv_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_conv_bts (M1001C157)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_conv_iur">
    <formula>SERVLEV.rab_act_fail_cs_conv_iur</formula>
    <kpi_info>
      <title>rab_act_fail_cs_conv_iur (M1001C158)</title>
      <use>The number of RAB active failures caused by drift RNC procedures (for example, radio link reconfiguration failure in DRNC) for CS data conversational. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or an RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested procedure failure in drift RNC, and the RAB type is CS data conversational. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_conv_iur)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_conv_iur (M1001C158)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_conv_i_chk">
    <formula>SERVLEV.rab_act_fail_cs_conv_i_chk</formula>
    <kpi_info>
      <title>rab_act_fail_cs_conv_i_chk (M1001C159)</title>
      <use>The original idea of this counter was to measure the number of CS data conversational RAB releases caused by integrity check failures. However, if integrity check fails the failed user plane message is ignored and the receiving entity does not send any failure related message to the RNC. UPDATED:This counter is never updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_conv_i_chk)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_conv_i_chk (M1001C159)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_conv_rnc">
    <formula>SERVLEV.rab_act_fail_cs_conv_rnc</formula>
    <kpi_info>
      <title>rab_act_fail_cs_conv_rnc (M1001C160)</title>
      <use>The number of RAB active failures caused by some reason not covered by the other failure counters for CS data conversational. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to some failure not covered by the other failure counters, and the RAB type is CS data conversational. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_conv_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_conv_rnc (M1001C160)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_strea_iu">
    <formula>SERVLEV.rab_act_fail_cs_strea_iu</formula>
    <kpi_info>
      <title>rab_act_fail_cs_strea_iu (M1001C161)</title>
      <use>The number of RAB active failures caused by Iu-interface related problem for CS data streaming. UPDATED:When the RAB is released due to some abnormal reason related to Iu-interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_strea_iu)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_strea_iu (M1001C161)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_strea_radio">
    <formula>SERVLEV.rab_act_fail_cs_strea_radio</formula>
    <kpi_info>
      <title>rab_act_fail_cs_strea_radio (M1001C162)</title>
      <use>The number of RAB active failures caused by radio interface synchronisation for CS data streaming. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to radio interface synchronisation failure, and the RAB type is CS data streaming. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_strea_radio)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_strea_radio (M1001C162)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_strea_bts">
    <formula>SERVLEV.rab_act_fail_cs_strea_bts</formula>
    <kpi_info>
      <title>rab_act_fail_cs_strea_bts (M1001C163)</title>
      <use>The number of RAB active failures caused by BTS (for example, radio link setup or reconfiguration problem) for CS data streaming. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to BTS failure, and the RAB type is CS data streaming. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_strea_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_strea_bts (M1001C163)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_strea_iur">
    <formula>SERVLEV.rab_act_fail_cs_strea_iur</formula>
    <kpi_info>
      <title>rab_act_fail_cs_strea_iur (M1001C164)</title>
      <use>The number of RAB active failures caused by drift RNC procedures (for example, radio link reconfiguration failure in DRNC) for CS data streaming. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested procedure failure in drift RNC, and the RAB type is CS data streaming. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_strea_iur)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_strea_iur (M1001C164)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_strea_i_chk">
    <formula>SERVLEV.rab_act_fail_cs_strea_i_chk</formula>
    <kpi_info>
      <title>rab_act_fail_cs_strea_i_chk (M1001C165)</title>
      <use>The original idea of this counter was to measure the number of CS data streaming RAB releases caused by integrity check failures. However, if the integrity check fails the failed user plane message is ignored and the receiving entity does not send any failure related message to the RNC. UPDATED:This counter is never updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_strea_i_chk)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_strea_i_chk (M1001C165)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_cs_strea_rnc">
    <formula>SERVLEV.rab_act_fail_cs_strea_rnc</formula>
    <kpi_info>
      <title>rab_act_fail_cs_strea_rnc (M1001C166)</title>
      <use>The number of RAB active failures caused by some reason not covered by the other failure counters for CS data streaming. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to some failure not covered by the other failure counters, and the RAB type is CS data streaming. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_cs_strea_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_cs_strea_rnc (M1001C166)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_ps_conv_srnc">
    <formula>SERVLEV.rab_act_rel_ps_conv_srnc</formula>
    <kpi_info>
      <title>rab_act_rel_ps_conv_srnc (M1001C167)</title>
      <use>The number of RAB releases due to UE-not-involved SRNC relocation for PS conversational calls. Note that from RN5.0 onwards this counter does not include hard handovers because they have dedicated counters. UPDATED: When the RNC receives an RANAP: IU RELEASE COMMAND message from the CN in the end of UE-not-involved SRNC relocation procedure, and the RAB type is PS conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_ps_conv_srnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_ps_conv_srnc (M1001C167)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_ps_conv_p_emp">
    <formula>SERVLEV.rab_act_rel_ps_conv_p_emp</formula>
    <kpi_info>
      <title>rab_act_rel_ps_conv_p_emp (M1001C168)</title>
      <use>The number of RAB releases due to pre-emption for PS conversational calls. UPDATED: When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST (release RAB), or RANAP: IU RELEASE COMMAND message from the CN after the RNC has sent an RAB/IU RELEASE REQUEST to the CN with the cause "RAB pre-empted" - if the RAB type is PS conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_ps_conv_p_emp)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_ps_conv_p_emp (M1001C168)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_ps_strea_srnc">
    <formula>SERVLEV.rab_act_rel_ps_strea_srnc</formula>
    <kpi_info>
      <title>rab_act_rel_ps_strea_srnc (M1001C169)</title>
      <use>The number of RAB releases due to UE-not-involved SRNC relocation for PS data streaming calls. Note that from RN5.0 onwards this counter does not include hard handovers because they have dedicated counters. UPDATED:When the RNC receives an RANAP: IU RELEASE COMMAND message from the CN in the end of UE-not-involved SRNC relocation procedure, and the RAB type is PS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_ps_strea_srnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_ps_strea_srnc (M1001C169)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_ps_strea_p_emp">
    <formula>SERVLEV.rab_act_rel_ps_strea_p_emp</formula>
    <kpi_info>
      <title>rab_act_rel_ps_strea_p_emp (M1001C170)</title>
      <use>The number of RAB releases due to pre-emption for PS data streaming calls. UPDATED:When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST (release RAB), or RANAP: IU RELEASE COMMAND message from the CN after the RNC has sent an RAB/IU RELEASE REQUEST to the CN with the cause "RAB pre-empted" - if the RAB type is PS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_ps_strea_p_emp)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_ps_strea_p_emp (M1001C170)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_ps_inter_srnc">
    <formula>SERVLEV.rab_act_rel_ps_inter_srnc</formula>
    <kpi_info>
      <title>rab_act_rel_ps_inter_srnc (M1001C171)</title>
      <use>The number of RAB releases due to UE-not-involved SRNC relocation for PS data interactive calls. Note that from RN5.0 onwards this counter does not include hard handovers because they have dedicated counters. UPDATED:When the RNC receives an RANAP: IU RELEASE COMMAND message from the CN in the end of UE-not-involved SRNC relocation or Directed Signalling Connection Re-establishment procedure, and the RAB type is PS data interactive.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_ps_inter_srnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_ps_inter_srnc (M1001C171)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_rel_ps_backg_srnc">
    <formula>SERVLEV.rab_act_rel_ps_backg_srnc</formula>
    <kpi_info>
      <title>rab_act_rel_ps_backg_srnc (M1001C172)</title>
      <use>The number of RAB releases due to UE-not-involved SRNC relocation for PS data background calls. Note that from RN5.0 onwards this counter does not include hard handovers because they have dedicated counters. UPDATED:When the RNC receives an RANAP: IU RELEASE COMMAND message from the CN in the end of UE-not-involved SRNC relocation or Directed Signalling Connection Re-establishment procedure, and the RAB type is PS data background.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_rel_ps_backg_srnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_rel_ps_backg_srnc (M1001C172)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_conv_iu">
    <formula>SERVLEV.rab_act_fail_ps_conv_iu</formula>
    <kpi_info>
      <title>rab_act_fail_ps_conv_iu (M1001C173)</title>
      <use>The number of RAB active failures caused by Iu-interface related problem for PS conversational. UPDATED: When the RAB is released due to some abnormal reason related to Iu-interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_conv_iu)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_conv_iu (M1001C173)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_conv_radio">
    <formula>SERVLEV.rab_act_fail_ps_conv_radio</formula>
    <kpi_info>
      <title>rab_act_fail_ps_conv_radio (M1001C174)</title>
      <use>The number of RAB active failures caused by radio interface synchronisation for PS conversational. UPDATED: When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to radio interface synchronisation failure, and the RAB type is PS conversational. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_conv_radio)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_conv_radio (M1001C174)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_conv_bts">
    <formula>SERVLEV.rab_act_fail_ps_conv_bts</formula>
    <kpi_info>
      <title>rab_act_fail_ps_conv_bts (M1001C175)</title>
      <use>The number of RAB active failures caused by BTS (for example, radio link setup or reconfiguration problem) for PS conversational. UPDATED: When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to BTS failure, and the RAB type is PS conversational. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_conv_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_conv_bts (M1001C175)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_conv_iur">
    <formula>SERVLEV.rab_act_fail_ps_conv_iur</formula>
    <kpi_info>
      <title>rab_act_fail_ps_conv_iur (M1001C176)</title>
      <use>The number of RAB active failures caused by drift RNC procedures (for example, radio link reconfiguration failure in DRNC) for PS conversational. UPDATED: When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested procedure failure in drift RNC, and the RAB type is PS conversational. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_conv_iur)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_conv_iur (M1001C176)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_conv_i_chk">
    <formula>SERVLEV.rab_act_fail_ps_conv_i_chk</formula>
    <kpi_info>
      <title>rab_act_fail_ps_conv_i_chk (M1001C177)</title>
      <use>The original idea of this counter was to measure the number of PS data conversational RAB releases caused by integrity check failures. However, if integrity check fails the failed user plane message is ignored and the receiving entity does not send any failure related message to the RNC. UPDATED:This counter is never updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_conv_i_chk)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_conv_i_chk (M1001C177)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_conv_rnc">
    <formula>SERVLEV.rab_act_fail_ps_conv_rnc</formula>
    <kpi_info>
      <title>rab_act_fail_ps_conv_rnc (M1001C178)</title>
      <use>The number of RAB active failures caused by some reason not covered by the other failure counters for PS conversational. UPDATED: When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to some failure not covered by the other failure counters, and the RAB type is PS conversational. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_conv_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_conv_rnc (M1001C178)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_strea_iu">
    <formula>SERVLEV.rab_act_fail_ps_strea_iu</formula>
    <kpi_info>
      <title>rab_act_fail_ps_strea_iu (M1001C179)</title>
      <use>The number of RAB active failures caused by Iu-interface related problem for PS data streaming. UPDATED:When the RAB is released due to some abnormal reason related to Iu-interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_strea_iu)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_strea_iu (M1001C179)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_strea_radio">
    <formula>SERVLEV.rab_act_fail_ps_strea_radio</formula>
    <kpi_info>
      <title>rab_act_fail_ps_strea_radio (M1001C180)</title>
      <use>The number of RAB active failures caused by radio interface synchronisation for PS data streaming. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to radio interface synchronisation failure, and the RAB type is PS data streaming. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_strea_radio)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_strea_radio (M1001C180)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_strea_bts">
    <formula>SERVLEV.rab_act_fail_ps_strea_bts</formula>
    <kpi_info>
      <title>rab_act_fail_ps_strea_bts (M1001C181)</title>
      <use>The number of RAB active failures caused by BTS (for example, radio link setup or reconfiguration problem) for PS data streaming. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to BTS failure, and the RAB type is PS data streaming. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_strea_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_strea_bts (M1001C181)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_strea_iur">
    <formula>SERVLEV.rab_act_fail_ps_strea_iur</formula>
    <kpi_info>
      <title>rab_act_fail_ps_strea_iur (M1001C182)</title>
      <use>The number of RAB active failures caused by drift RNC procedures (for example, radio link reconfiguration failure in DRNC) for PS data streaming. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested procedure failure in drift RNC, and the RAB type is PS data streaming. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_strea_iur)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_strea_iur (M1001C182)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_strea_i_chk">
    <formula>SERVLEV.rab_act_fail_ps_strea_i_chk</formula>
    <kpi_info>
      <title>rab_act_fail_ps_strea_i_chk (M1001C183)</title>
      <use>The original idea of this counter was to measure the number of PS data streaming RAB releases caused by integrity check failures. However, if integrity check fails the failed user plane message is ignored and the receiving entity does not send any failure related message to the RNC. UPDATED:This counter is never updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_strea_i_chk)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_strea_i_chk (M1001C183)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_strea_rnc">
    <formula>SERVLEV.rab_act_fail_ps_strea_rnc</formula>
    <kpi_info>
      <title>rab_act_fail_ps_strea_rnc (M1001C184)</title>
      <use>The number of RAB active failures caused by some reason not covered by the other failure counters for PS data streaming. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to some failure not covered by the other failure counters, and the RAB type is PS data streaming. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. The possible failure reasons updating this counter are for example RNC internal failure, transmission failure or loss of Frame Protocol synchronization.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_strea_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_strea_rnc (M1001C184)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_inter_iu">
    <formula>SERVLEV.rab_act_fail_ps_inter_iu</formula>
    <kpi_info>
      <title>rab_act_fail_ps_inter_iu (M1001C185)</title>
      <use>The number of RAB active failures caused by Iu-interface related problem for PS data interactive. UPDATED:When the RAB is released due to some abnormal reason related to Iu-interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_inter_iu)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_inter_iu (M1001C185)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_inter_radio">
    <formula>SERVLEV.rab_act_fail_ps_inter_radio</formula>
    <kpi_info>
      <title>rab_act_fail_ps_inter_radio (M1001C186)</title>
      <use>The number of RAB active failures caused by radio interface synchronisation for PS data interactive. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to radio interface synchronisation failure, and the RAB type is PS data interactive. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_inter_radio)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_inter_radio (M1001C186)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_inter_bts">
    <formula>SERVLEV.rab_act_fail_ps_inter_bts</formula>
    <kpi_info>
      <title>rab_act_fail_ps_inter_bts (M1001C187)</title>
      <use>The number of RAB active failures caused by BTS (for example, radio link setup or reconfiguration problem) for PS data interactive. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to BTS failure, and the RAB type is PS data interactive. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_inter_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_inter_bts (M1001C187)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_inter_iur">
    <formula>SERVLEV.rab_act_fail_ps_inter_iur</formula>
    <kpi_info>
      <title>rab_act_fail_ps_inter_iur (M1001C188)</title>
      <use>The number of RAB active failures caused by drift RNC procedures (for example, radio link reconfiguration failure in DRNC) for PS data interactive. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested procedure failure in drift RNC, and the RAB type is PS data interactive. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_inter_iur)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_inter_iur (M1001C188)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_inter_i_chk">
    <formula>SERVLEV.rab_act_fail_ps_inter_i_chk</formula>
    <kpi_info>
      <title>rab_act_fail_ps_inter_i_chk (M1001C189)</title>
      <use>The original idea of this counter was to measure the number of PS data interactive RAB releases caused by integrity check failures. However, if integrity check fails the failed user plane message is ignored and the receiving entity does not send any failure related message to the RNC. UPDATED:This counter is never updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_inter_i_chk)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_inter_i_chk (M1001C189)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_inter_rnc">
    <formula>SERVLEV.rab_act_fail_ps_inter_rnc</formula>
    <kpi_info>
      <title>rab_act_fail_ps_inter_rnc (M1001C190)</title>
      <use>The number of RAB active failures caused by some reason not covered by the other failure counters for PS data interactive. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to some failure not covered by the other failure counters, and the RAB type is PS data interactive. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. The possible failure reasons updating this counter are for example RNC internal failure, transmission failure or loss of Frame Protocol synchronization.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_inter_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_inter_rnc (M1001C190)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_backg_iu">
    <formula>SERVLEV.rab_act_fail_ps_backg_iu</formula>
    <kpi_info>
      <title>rab_act_fail_ps_backg_iu (M1001C191)</title>
      <use>The number of RAB active failures caused by Iu-interface related problem for PS data background. UPDATED:When the RAB is released due to some abnormal reason related to Iu-interface.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_backg_iu)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_backg_iu (M1001C191)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_backg_radio">
    <formula>SERVLEV.rab_act_fail_ps_backg_radio</formula>
    <kpi_info>
      <title>rab_act_fail_ps_backg_radio (M1001C192)</title>
      <use>The number of RAB active failures caused by radio interface synchronisation for PS data background. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to radio interface synchronisation failure, and the RAB type is PS data background. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_backg_radio)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_backg_radio (M1001C192)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_backg_bts">
    <formula>SERVLEV.rab_act_fail_ps_backg_bts</formula>
    <kpi_info>
      <title>rab_act_fail_ps_backg_bts (M1001C193)</title>
      <use>The number of RAB active failures caused by BTS (for example, radio link setup or reconfiguration problem) for PS data background. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to BTS failure, and the RAB type is PS data background. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_backg_bts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_backg_bts (M1001C193)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_backg_iur">
    <formula>SERVLEV.rab_act_fail_ps_backg_iur</formula>
    <kpi_info>
      <title>rab_act_fail_ps_backg_iur (M1001C194)</title>
      <use>The number of RAB active failures caused by drift RNC procedures (for example, radio link reconfiguration failure in DRNC) for PS data background. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested procedure failure in drift RNC, and the RAB type is PS data background. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_backg_iur)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_backg_iur (M1001C194)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_backg_i_chk">
    <formula>SERVLEV.rab_act_fail_ps_backg_i_chk</formula>
    <kpi_info>
      <title>rab_act_fail_ps_backg_i_chk (M1001C195)</title>
      <use>The original idea of this counter was to measure the number of PS data background RAB releases caused by integrity check failures. However, if integrity check fails the failed user plane message is ignored and the receiving entity does not send any failure related message to the RNC. UPDATED:This counter is never updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_backg_i_chk)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_backg_i_chk (M1001C195)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_ps_backg_rnc">
    <formula>SERVLEV.rab_act_fail_ps_backg_rnc</formula>
    <kpi_info>
      <title>rab_act_fail_ps_backg_rnc (M1001C196)</title>
      <use>The number of RAB active failures caused by some reason not covered by the other failure counters for PS data background. UPDATED:When the RNC receives either an RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent an IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested due to some failure not covered by the other failure counters, and the RAB type is PS data background. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_ps_backg_rnc)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_ps_backg_rnc (M1001C196)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_reconf_att">
    <formula>SERVLEV.rab_reconf_att</formula>
    <kpi_info>
      <title>rab_reconf_att (M1001C197)</title>
      <use>The number of RAB reconfigurations attempts. UPDATED: When the RNC receives an RAB ASSIGNMENT REQUEST message, the purpose of which is to modify one or more existing RABs, and the RNC accepts the request. This counter is incremented by the number of RABs to be modified.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_reconf_att)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_reconf_att (M1001C197)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_reconf_fail">
    <formula>SERVLEV.rab_reconf_fail</formula>
    <kpi_info>
      <title>rab_reconf_fail (M1001C198)</title>
      <use>The number of RAB reconfigurations failures. UPDATED:When the RNC has sent an RAB ASSIGNMENT RESPONSE message, which indicates that the modification of one or more RABs has failed. This counter is incremented by the number of RABs for which the modification failed.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_reconf_fail)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_reconf_fail (M1001C198)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_hld_tm_cs_voice">
    <formula>SERVLEV.avg_rab_hld_tm_cs_voice</formula>
    <kpi_info>
      <title>avg_rab_hld_tm_cs_voice (M1001C199)</title>
      <use>This counter measures the RAB holding time of CS voice calls. This counter divided by the denominator gives the average holding time for the RAB type in question. UPDATED:When a RAB is released. This counter is updated to the cell where the RAB was released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_hld_tm_cs_voice)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_hld_tm_cs_voice (M1001C199)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_hld_tm_cs_voice">
    <formula>SERVLEV.denom_rab_hld_tm_cs_voice</formula>
    <kpi_info>
      <title>denom_rab_hld_tm_cs_voice (M1001C200)</title>
      <use>The denominator for SUM OF RAB HOLDING TIMES FOR CS VOICE. The number of RAB releases for CS voice calls. UPDATED:In case of CS voice call, when the RNC receives either an RANAP: RAB ASSIGNMENT RESPONSE message with IE: RAB release or an RANAP: IU RELEASE COMMAND message.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_hld_tm_cs_voice)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_hld_tm_cs_voice (M1001C200)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_hld_tm_cs_conv">
    <formula>SERVLEV.avg_rab_hld_tm_cs_conv</formula>
    <kpi_info>
      <title>avg_rab_hld_tm_cs_conv (M1001C201)</title>
      <use>This counter measures the RAB holding time of a CS Data Call with conversational class. This counter divided by the denominator gives the average holding time for the RAB type in question. UPDATED:When an RAB is released. This counter is updated to the cell where the RAB was released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_hld_tm_cs_conv)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_hld_tm_cs_conv (M1001C201)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_hld_tm_cs_conv">
    <formula>SERVLEV.denom_rab_hld_tm_cs_conv</formula>
    <kpi_info>
      <title>denom_rab_hld_tm_cs_conv (M1001C202)</title>
      <use>The denominator for SUM OF RAB HOLDING TIMES FOR CS DATA CONV. The number of RAB releases for CS data conversational calls. UPDATED:In case of CS data conversational call, when the RNC receives either an RANAP: RAB ASSIGNMENT RESPONSE message with IE: RAB release or an RANAP: IU RELEASE COMMAND message.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_hld_tm_cs_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_hld_tm_cs_conv (M1001C202)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_hld_tm_cs_strea">
    <formula>SERVLEV.avg_rab_hld_tm_cs_strea</formula>
    <kpi_info>
      <title>avg_rab_hld_tm_cs_strea (M1001C203)</title>
      <use>This counter measures the RAB holding time of CS Data Calls with streaming class. This counter divided by the denominator gives the average holding time for the RAB type in question. UPDATED:When an RAB is released. This counter is updated to the cell where the RAB was released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_hld_tm_cs_strea)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_hld_tm_cs_strea (M1001C203)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_hld_tm_cs_strea">
    <formula>SERVLEV.denom_rab_hld_tm_cs_strea</formula>
    <kpi_info>
      <title>denom_rab_hld_tm_cs_strea (M1001C204)</title>
      <use>The denominator for SUM OF RAB HOLDING TIMES FOR CS DATA STREAM. The number of RAB releases for CS data streaming calls. UPDATED:In case of CS data streaming call, when the RNC receives either an RANAP: RAB ASSIGNMENT RESPONSE message with IE: RAB release or an RANAP: IU RELEASE COMMAND message.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_hld_tm_cs_strea)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_hld_tm_cs_strea (M1001C204)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_hld_tm_ps_conv">
    <formula>SERVLEV.avg_rab_hld_tm_ps_conv</formula>
    <kpi_info>
      <title>avg_rab_hld_tm_ps_conv (M1001C205)</title>
      <use>Sum of RAB holding times for PS conversational calls. This counter divided by the denominator M1001C206 gives the average RAB holding time of PS conversational calls. --- RAB holding time is defined as the time between the RANAP: RAB ASSIGNMENT RESPONSE message and the RAB release. UPDATED: When the RAB is released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_hld_tm_ps_conv)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_hld_tm_ps_conv (M1001C205)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_hld_tm_ps_conv">
    <formula>SERVLEV.denom_rab_hld_tm_ps_conv</formula>
    <kpi_info>
      <title>denom_rab_hld_tm_ps_conv (M1001C206)</title>
      <use>The denominator for M1001C205 SUM OF RAB HOLDING TIMES FOR PS DATA CONV. UPDATED: This counter is updated by value 1 when the RAB holding time is updated to counter M1001C205.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_hld_tm_ps_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_hld_tm_ps_conv (M1001C206)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_hld_tm_ps_strea">
    <formula>SERVLEV.avg_rab_hld_tm_ps_strea</formula>
    <kpi_info>
      <title>avg_rab_hld_tm_ps_strea (M1001C207)</title>
      <use>This counter measures the RAB holding time of PS Data Calls with streaming class. This counter divided by the denominator gives the average holding time for the RAB type in question. UPDATED:When an RAB is released. This counter is updated to the cell where the RAB was released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_hld_tm_ps_strea)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_hld_tm_ps_strea (M1001C207)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_hld_tm_ps_strea">
    <formula>SERVLEV.denom_rab_hld_tm_ps_strea</formula>
    <kpi_info>
      <title>denom_rab_hld_tm_ps_strea (M1001C208)</title>
      <use>The denominator for SUM OF RAB HOLDING TIMES FOR PS DATA STREAM. The number of RAB releases for PS data streaming calls. UPDATED:In case of PS data streaming call, when the RNC receives either an RANAP: RAB ASSIGNMENT RESPONSE message with IE: RAB release, or an RANAP: IU RELEASE COMMAND message.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_hld_tm_ps_strea)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_hld_tm_ps_strea (M1001C208)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_hld_tm_ps_inter">
    <formula>SERVLEV.avg_rab_hld_tm_ps_inter</formula>
    <kpi_info>
      <title>avg_rab_hld_tm_ps_inter (M1001C209)</title>
      <use>This counter measures the RAB holding time of PS Data Calls with interactive class. This counter divided by the denominator gives the average holding time for the RAB type in question. UPDATED:When an RAB is released. This counter is updated to the cell from the RAB was released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_hld_tm_ps_inter)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_hld_tm_ps_inter (M1001C209)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_hld_tm_ps_inter">
    <formula>SERVLEV.denom_rab_hld_tm_ps_inter</formula>
    <kpi_info>
      <title>denom_rab_hld_tm_ps_inter (M1001C210)</title>
      <use>The denominator for SUM OF RAB HOLDING TIMES FOR PS DATA INTERA. The number of RAB releases for PS data interactive calls. UPDATED:In case of PS data interactive call, when the RNC receives either an RANAP: RAB ASSIGNMENT RESPONSE message with IE: RAB release, or an RANAP: IU RELEASE COMMAND message.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_hld_tm_ps_inter)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_hld_tm_ps_inter (M1001C210)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_hld_tm_ps_backg">
    <formula>SERVLEV.avg_rab_hld_tm_ps_backg</formula>
    <kpi_info>
      <title>avg_rab_hld_tm_ps_backg (M1001C211)</title>
      <use>This counter measures the RAB holding time of PS Calls with background class. This counter divided by the denominator gives the average holding time for the RAB type in question. UPDATED:When an RAB is released. This counter is updated to the cell where the RAB was released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_hld_tm_ps_backg)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_hld_tm_ps_backg (M1001C211)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_hld_tm_ps_backg">
    <formula>SERVLEV.denom_rab_hld_tm_ps_backg</formula>
    <kpi_info>
      <title>denom_rab_hld_tm_ps_backg (M1001C212)</title>
      <use>The denominator for SUM OF RAB HOLDING TIMES FOR PS DATA BACKG. The number of RAB releases for PS data background calls. UPDATED:In case of PS data background call, when the RNC receives either an RANAP: RAB ASSIGNMENT RESPONSE message with IE: RAB release, or an RANAP: IU RELEASE COMMAND message.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_hld_tm_ps_backg)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_hld_tm_ps_backg (M1001C212)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_dch_hld_tm_ps_inter">
    <formula>SERVLEV.avg_dch_hld_tm_ps_inter</formula>
    <kpi_info>
      <title>avg_dch_hld_tm_ps_inter (M1001C213)</title>
      <use>This counter measures the DCH holding time for PS RAB with interactive class service. This counter divided by the denominator gives the average DCH holding time for the RAB type in question. UPDATED:When the RAB type in question is released, this counter is updated by the total duration of DCH holding time during the RAB lifetime.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_dch_hld_tm_ps_inter)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_dch_hld_tm_ps_inter (M1001C213)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_dch_hld_tm_ps_inter">
    <formula>SERVLEV.denom_dch_hld_tm_ps_inter</formula>
    <kpi_info>
      <title>denom_dch_hld_tm_ps_inter (M1001C214)</title>
      <use>The denominator for SUM OF DCH HOLDING TIMES OF PS DATA INTERA. The number of RAB releases for PS data interactive calls. UPDATED:In case of PS data interactive call, when the RNC receives either an RANAP: RAB ASSIGNMENT RESPONSE message with IE: RAB release, or an RANAP: IU RELEASE COMMAND message.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_dch_hld_tm_ps_inter)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_dch_hld_tm_ps_inter (M1001C214)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_dch_hld_tm_ps_backg">
    <formula>SERVLEV.avg_dch_hld_tm_ps_backg</formula>
    <kpi_info>
      <title>avg_dch_hld_tm_ps_backg (M1001C215)</title>
      <use>This counter measures the DCH holding time for PS RAB with background class service. This counter divided by the denominator gives the average DCH holding time for the RAB type in question. UPDATED:When the RAB type in question is released, this counter is updated by the total duration of DCH holding time during the RAB lifetime.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_dch_hld_tm_ps_backg)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_dch_hld_tm_ps_backg (M1001C215)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_dch_hld_tm_ps_backg">
    <formula>SERVLEV.denom_dch_hld_tm_ps_backg</formula>
    <kpi_info>
      <title>denom_dch_hld_tm_ps_backg (M1001C216)</title>
      <use>The denominator for SUM OF DCH HOLDING TIMES OF PS DATA BACKG. The number of RAB releases for PS data background calls. UPDATED:In case of PS data background call, when the RNC receives either an RANAP: RAB ASSIGNMENT RESPONSE message with IE: RAB release, or an RANAP: IU RELEASE COMMAND message.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_dch_hld_tm_ps_backg)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_dch_hld_tm_ps_backg (M1001C216)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="inter_freq_hho_atts">
    <formula>SERVLEV.inter_freq_hho_atts</formula>
    <kpi_info>
      <title>inter_freq_hho_atts (M1001C217)</title>
      <use>The number of inter-RNC inter-frequency hard handover attempts. UPDATED:When the target-RNC receives RANAP: RELOCATION REQUEST from the core network for initiating the hard handover procedure. If however the core network later cancels the procedure, also the counter update is canceled, i.e. the counter includes only those cases where the actual handover attempt was done from UE point of view.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(inter_freq_hho_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>inter_freq_hho_atts (M1001C217)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="inter_freq_hho_fails">
    <formula>SERVLEV.inter_freq_hho_fails</formula>
    <kpi_info>
      <title>inter_freq_hho_fails (M1001C218)</title>
      <use>The number of unsuccessful incoming inter-RNC inter-frequency hard handover attempts. UPDATED: When the incoming hard handover procedure fails either in the resource allocation phase or the target-RNC cannot establish connection with the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(inter_freq_hho_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>inter_freq_hho_fails (M1001C218)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="inter_sys_hho_atts">
    <formula>SERVLEV.inter_sys_hho_atts</formula>
    <kpi_info>
      <title>inter_sys_hho_atts (M1001C219)</title>
      <use>The number of incoming inter-system handover attempts from GSM or LTE. UPDATED:When the target-RNC receives RANAP: RELOCATION REQUEST from the core network for initiating the handover procedure. If however the core network later cancels the procedure, also the counter update is canceled, i.e. the counter includes only those cases where the actual handover attempt was done from UE point of view.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(inter_sys_hho_atts)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>inter_sys_hho_atts (M1001C219)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="inter_system_hho_fails">
    <formula>SERVLEV.inter_system_hho_fails</formula>
    <kpi_info>
      <title>inter_system_hho_fails (M1001C220)</title>
      <use>The number of unsuccessful incoming inter-system hard handover attempts from GSM or LTE. UPDATED:When the incoming handover procedure fails either in the resource allocation phase or the target-RNC cannot establish connection with the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(inter_system_hho_fails)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>inter_system_hho_fails (M1001C220)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rrc_setup_tm">
    <formula>SERVLEV.avg_rrc_setup_tm</formula>
    <kpi_info>
      <title>avg_rrc_setup_tm (M1001C221)</title>
      <use>Sum of RRC setup times. This counter divided by the denominator (see the Dependencies) gives the average RRC setup time. --- RRC setup time is defined as the time between the RRC: RRC CONNECTION REQUEST message and the RRC: RRC CONNECTION SETUP COMPLETE message. NOTE: setup time covers both the RRC Setup and RRC Access phases. UPDATED:When the RNC receives the RRC: RRC CONNECTION SETUP COMPLETE message from the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rrc_setup_tm)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rrc_setup_tm (M1001C221)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rrc_setup_tm">
    <formula>SERVLEV.denom_rrc_setup_tm</formula>
    <kpi_info>
      <title>denom_rrc_setup_tm (M1001C222)</title>
      <use>The denominator for SUM OF RRC SETUP TIMES. The number of successfully completed RRC Access phases. UPDATED:When the RNC receives the RRC: RRC CONNECTION SETUP COMPLETE message from the UE.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rrc_setup_tm)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rrc_setup_tm (M1001C222)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_setup_tm_cs_voice">
    <formula>SERVLEV.avg_rab_setup_tm_cs_voice</formula>
    <kpi_info>
      <title>avg_rab_setup_tm_cs_voice (M1001C223)</title>
      <use>Sum of RAB setup times for CS voice. This counter divided by the denominator (see the Dependencies) gives the average RAB setup time for CS voice. --- RAB setup time is defined as the time between the RANAP: RAB ASSIGNMENT REQUEST and RANAP: RAB ASSIGNMENT RESPONSE messages during RAB establishment. NOTE: setup time covers both the RAB Setup and RAB Access phases. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is CS voice.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_setup_tm_cs_voice)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_setup_tm_cs_voice (M1001C223)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_setup_tm_cs_voice">
    <formula>SERVLEV.denom_rab_setup_tm_cs_voice</formula>
    <kpi_info>
      <title>denom_rab_setup_tm_cs_voice (M1001C224)</title>
      <use>The denominator for SUM OF RAB SETUP TIMES FOR CS VOICE. The number of successfully completed RAB Access phases for CS voice. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is CS voice.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_setup_tm_cs_voice)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_setup_tm_cs_voice (M1001C224)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_setup_tm_cs_conv">
    <formula>SERVLEV.avg_rab_setup_tm_cs_conv</formula>
    <kpi_info>
      <title>avg_rab_setup_tm_cs_conv (M1001C225)</title>
      <use>Sum of RAB setup times for CS data conversational. This counter divided by the denominator (see the Dependencies) gives the average RAB setup time for CS data conversational. --- RAB setup time is defined as the time between the RANAP: RAB ASSIGNMENT REQUEST and RANAP: RAB ASSIGNMENT RESPONSE messages during RAB establishment. NOTE: setup time covers both the RAB Setup and RAB Access phases. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is CS data conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_setup_tm_cs_conv)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_setup_tm_cs_conv (M1001C225)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_setup_tm_cs_conv">
    <formula>SERVLEV.denom_rab_setup_tm_cs_conv</formula>
    <kpi_info>
      <title>denom_rab_setup_tm_cs_conv (M1001C226)</title>
      <use>The denominator for SUM OF RAB SETUP TIMES FOR CS DATA CONV. The number of successfully completed RAB Access phases for CS data conversational. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is CS data conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_setup_tm_cs_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_setup_tm_cs_conv (M1001C226)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_setup_tm_cs_strea">
    <formula>SERVLEV.avg_rab_setup_tm_cs_strea</formula>
    <kpi_info>
      <title>avg_rab_setup_tm_cs_strea (M1001C227)</title>
      <use>Sum of RAB setup times for CS data streaming. This counter divided by the denominator (see the Dependencies) gives the average RAB setup time for CS data streaming. --- RAB setup time is defined as the time between the RANAP: RAB ASSIGNMENT REQUEST and RANAP: RAB ASSIGNMENT RESPONSE messages during RAB establishment. NOTE: setup time covers both the RAB Setup and RAB Access phases. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is CS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_setup_tm_cs_strea)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_setup_tm_cs_strea (M1001C227)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_setup_tm_cs_strea">
    <formula>SERVLEV.denom_rab_setup_tm_cs_strea</formula>
    <kpi_info>
      <title>denom_rab_setup_tm_cs_strea (M1001C228)</title>
      <use>The denominator for SUM OF RAB SETUP TIMES FOR CS DATA STREAM. The number of successfully completed RAB Access phases for CS data streaming. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is CS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_setup_tm_cs_strea)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_setup_tm_cs_strea (M1001C228)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_setup_tm_ps_conv">
    <formula>SERVLEV.avg_rab_setup_tm_ps_conv</formula>
    <kpi_info>
      <title>avg_rab_setup_tm_ps_conv (M1001C229)</title>
      <use>Sum of RAB setup times for PS conversational. This counter divided by the denominator M1001C230 gives the average RAB setup time for PS conversational. --- RAB setup time is defined as the time between the RANAP: RAB ASSIGNMENT REQUEST and RANAP: RAB ASSIGNMENT RESPONSE messages during RAB establishment. UPDATED: When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is PS conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_setup_tm_ps_conv)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_setup_tm_ps_conv (M1001C229)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_setup_tm_ps_conv">
    <formula>SERVLEV.denom_rab_setup_tm_ps_conv</formula>
    <kpi_info>
      <title>denom_rab_setup_tm_ps_conv (M1001C230)</title>
      <use>The denominator for M1001C229 SUM OF RAB SETUP TIMES FOR PS DATA CONV. UPDATED: This counter is updated by value 1 when the RAB setup time is updated to counter M1001C229.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_setup_tm_ps_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_setup_tm_ps_conv (M1001C230)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_setup_tm_ps_strea">
    <formula>SERVLEV.avg_rab_setup_tm_ps_strea</formula>
    <kpi_info>
      <title>avg_rab_setup_tm_ps_strea (M1001C231)</title>
      <use>Sum of RAB setup times for PS data streaming. This counter divided by the denominator (see the Dependencies) gives the average RAB setup time for PS data streaming. --- RAB setup time is defined as the time between the RANAP: RAB ASSIGNMENT REQUEST and RANAP: RAB ASSIGNMENT RESPONSE messages during RAB establishment. NOTE: setup time covers both the RAB Setup and RAB Access phases. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is PS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_setup_tm_ps_strea)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_setup_tm_ps_strea (M1001C231)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_setup_tm_ps_strea">
    <formula>SERVLEV.denom_rab_setup_tm_ps_strea</formula>
    <kpi_info>
      <title>denom_rab_setup_tm_ps_strea (M1001C232)</title>
      <use>The denominator for SUM OF RAB SETUP TIMES FOR PS DATA STREAM. Number of successfully completed RAB Access phases for PS data streaming. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is PS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_setup_tm_ps_strea)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_setup_tm_ps_strea (M1001C232)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_setup_tm_ps_inter">
    <formula>SERVLEV.avg_rab_setup_tm_ps_inter</formula>
    <kpi_info>
      <title>avg_rab_setup_tm_ps_inter (M1001C233)</title>
      <use>Sum of RAB setup times for PS data interactive. This counter divided by the denominator (see the Dependencies) gives the average RAB setup time for PS data interactive. --- RAB setup time is defined as the time between the RANAP: RAB ASSIGNMENT REQUEST and RANAP: RAB ASSIGNMENT RESPONSE messages during RAB establishment. NOTE: setup time covers both the RAB Setup and RAB Access phases. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is PS data interactive.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_setup_tm_ps_inter)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_setup_tm_ps_inter (M1001C233)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_setup_tm_ps_inter">
    <formula>SERVLEV.denom_rab_setup_tm_ps_inter</formula>
    <kpi_info>
      <title>denom_rab_setup_tm_ps_inter (M1001C234)</title>
      <use>The denominator for SUM OF RAB SETUP TIMES FOR PS DATA INTERA. The number of successfully completed RAB Access phases for PS data interactive. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is PS data interactive.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_setup_tm_ps_inter)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_setup_tm_ps_inter (M1001C234)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="avg_rab_setup_tm_ps_backg">
    <formula>SERVLEV.avg_rab_setup_tm_ps_backg</formula>
    <kpi_info>
      <title>avg_rab_setup_tm_ps_backg (M1001C235)</title>
      <use>Sum of RAB setup times for PS data background. This counter divided by the denominator (see the Dependencies) gives the average RAB setup time for PS data background. --- RAB setup time is defined as the time between the RANAP: RAB ASSIGNMENT REQUEST and RANAP: RAB ASSIGNMENT RESPONSE messages during RAB establishment. NOTE: setup time covers both the RAB Setup and RAB Access phases. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is PS data background.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(avg_rab_setup_tm_ps_backg)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>avg_rab_setup_tm_ps_backg (M1001C235)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="denom_rab_setup_tm_ps_backg">
    <formula>SERVLEV.denom_rab_setup_tm_ps_backg</formula>
    <kpi_info>
      <title>denom_rab_setup_tm_ps_backg (M1001C236)</title>
      <use>The denominator for SUM OF RAB SETUP TIMES FOR PS DATA BACKG. The number of successfully completed RAB Access phases for PS data background. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN, and the type of RAB is PS data background.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(denom_rab_setup_tm_ps_backg)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>denom_rab_setup_tm_ps_backg (M1001C236)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_multi_amr_nrt">
    <formula>SERVLEV.rab_act_fail_multi_amr_nrt</formula>
    <kpi_info>
      <title>rab_act_fail_multi_amr_nrt (M1001C237)</title>
      <use>The number of RAB Active Failures for Multi-RAB with AMR and PS NRT connections. This counter is updated only if both the CS and the PS RABs drop simultaneously, which does not usually occur in live network scenarios because the CS re-establishment timer is shorter than the PS re-establishment timer. Therefore, it is recommended to monitor Multi RAB drops using counter M1001C703, which is updated when either the PS or the CS RAB drops, regardless of whether the drop is simultaneous or not. UPDATED:When a call with Multi-RAB combination of AMR and PS NRT RAB is dropped.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_multi_amr_nrt)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_multi_amr_nrt (M1001C237)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_multi_amr_conv">
    <formula>SERVLEV.rab_act_fail_multi_amr_conv</formula>
    <kpi_info>
      <title>rab_act_fail_multi_amr_conv (M1001C238)</title>
      <use>This counter counts the number of RAB Active Failures for Multi-RAB connection with CS Conversational data and PS NRT RABs. UPDATED:When a call with Multi-RAB combination of CS Conversational Data and PS NRT RAB is dropped.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_multi_amr_conv)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_multi_amr_conv (M1001C238)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_multi_amr_stre">
    <formula>SERVLEV.rab_act_fail_multi_amr_stre</formula>
    <kpi_info>
      <title>rab_act_fail_multi_amr_stre (M1001C239)</title>
      <use>This counter counts the number of RAB Active Failures for Multi-RAB connection with CS Streaming data and PS NRT RABs. UPDATED:When a call with Multi-RAB combination of CS Streaming Data and PS NRT RAB is dropped.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_multi_amr_stre)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_multi_amr_stre (M1001C239)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="rab_act_fail_multi_nrt">
    <formula>SERVLEV.rab_act_fail_multi_nrt</formula>
    <kpi_info>
      <title>rab_act_fail_multi_nrt (M1001C240)</title>
      <use>The counter counts the number of RAB Active Failures for Multi-RAB connection with multiple PS NRT RABs. UPDATED:When a call with multiple PS NRT RABs is dropped.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(rab_act_fail_multi_nrt)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>rab_act_fail_multi_nrt (M1001C240)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_ACC_REL_CELL_RESEL">
    <formula>SERVLEV.RRC_CONN_ACC_REL_CELL_RESEL</formula>
    <kpi_info>
      <title>RRC_CONN_ACC_REL_CELL_RESEL (M1001C241)</title>
      <use>The number of RRC Connection Access releases due to cell reselection. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC Connection attempt is released before the RRC Connection Setup Complete is received from the UE due to a new RRC Connection Request to another cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_ACC_REL_CELL_RESEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_ACC_REL_CELL_RESEL (M1001C241)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_SETUP_ATT_REPEAT">
    <formula>SERVLEV.RRC_CONN_SETUP_ATT_REPEAT</formula>
    <kpi_info>
      <title>RRC_CONN_SETUP_ATT_REPEAT (M1001C242)</title>
      <use>The number of RRC Connection Request retransmissions (successfully received by the RNC) from the same UE if the RRC connection request is rejected due to an unsuccessful resource reservation attempt in RNC. This counter is used for gathering information on RRC connection request retransmissions eventually leading to the successful RRC connection establishment (i.e. the retransmissions were not caused by a failure in the Uu). UPDATED: When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s This counter is not updated if the previous RRC Connection Request was rejected due to uplink scrambling code allocation failure.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_SETUP_ATT_REPEAT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_SETUP_ATT_REPEAT (M1001C242)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_IPHC_CONV">
    <formula>SERVLEV.RAB_ACT_COMP_PS_IPHC_CONV</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_IPHC_CONV (M1001C243)</title>
      <use>The number of RAB active completions for the PS data calls with conversational class using RFC2507 IP header compression. UPDATED:The counter is updated when RAB active is completed for the PS data call with conversational class using RFC2507 IP header compression.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_IPHC_CONV)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_IPHC_CONV (M1001C243)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_IPHC_STREA">
    <formula>SERVLEV.RAB_ACT_COMP_PS_IPHC_STREA</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_IPHC_STREA (M1001C244)</title>
      <use>The number of RAB active completions for the PS data calls with streaming class using RFC2507 IP header compression. UPDATED:The counter is updated when RAB active is completed for the PS data call with streaming class using RFC2507 IP header compression.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_IPHC_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_IPHC_STREA (M1001C244)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_ROHC_CONV">
    <formula>SERVLEV.RAB_ACT_COMP_PS_ROHC_CONV</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_ROHC_CONV (M1001C245)</title>
      <use>The number of RAB active completions for the PS data calls with conversational class using ROHC IP header compression. UPDATED:The counter is updated when RAB active is completed for the PS data call with conversational class using ROHC IP header compression.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_ROHC_CONV)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_ROHC_CONV (M1001C245)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_ROHC_STREA">
    <formula>SERVLEV.RAB_ACT_COMP_PS_ROHC_STREA</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_ROHC_STREA (M1001C246)</title>
      <use>The number of RAB active completions for the PS data calls with streaming class using ROHC IP header compression. UPDATED:The counter is updated when RAB active is completed for the PS data call with streaming class using ROHC IP header compression.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_ROHC_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_ROHC_STREA (M1001C246)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_STP_FAIL_RNTI_ALLO">
    <formula>SERVLEV.RRC_CONN_STP_FAIL_RNTI_ALLO</formula>
    <kpi_info>
      <title>RRC_CONN_STP_FAIL_RNTI_ALLO (M1001C247)</title>
      <use>This counter is not supported. UPDATED:Never.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_STP_FAIL_RNTI_ALLO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_STP_FAIL_RNTI_ALLO (M1001C247)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_CS_VOICE_SAMECE">
    <formula>SERVLEV.RAB_ACT_COMP_CS_VOICE_SAMECE</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_CS_VOICE_SAMECE (M1001C248)</title>
      <use>Number of normal completions of RAB active phases for CS voice, when the RAB is established and released in the same cell. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN during normal CS voice RAB release - if the RAB is established and released in the same cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_CS_VOICE_SAMECE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_CS_VOICE_SAMECE (M1001C248)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_CS_CONV_SAMECE">
    <formula>SERVLEV.RAB_ACT_COMP_CS_CONV_SAMECE</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_CS_CONV_SAMECE (M1001C249)</title>
      <use>Number of normal completions of RAB active phases for CS data conversational, when the RAB is established and released in the same cell. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN during normal CS data conversational RAB release - if the RAB is established and released in the same cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_CS_CONV_SAMECE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_CS_CONV_SAMECE (M1001C249)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_CS_STREA_SAMECE">
    <formula>SERVLEV.RAB_ACT_COMP_CS_STREA_SAMECE</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_CS_STREA_SAMECE (M1001C250)</title>
      <use>Number of normal completions of RAB active phases for CS data streaming, when the RAB is established and released in the same cell. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN during normal CS data streaming RAB release - if the RAB is established and released in the same cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_CS_STREA_SAMECE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_CS_STREA_SAMECE (M1001C250)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_CONV_SAMECE">
    <formula>SERVLEV.RAB_ACT_COMP_PS_CONV_SAMECE</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_CONV_SAMECE (M1001C251)</title>
      <use>The number RAB normal releases in the same cell where the RAB was established. UPDATED: When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN during normal PS conversational RAB release - if the RAB is established and released in the same cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_CONV_SAMECE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_CONV_SAMECE (M1001C251)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_STREA_SAMECE">
    <formula>SERVLEV.RAB_ACT_COMP_PS_STREA_SAMECE</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_STREA_SAMECE (M1001C252)</title>
      <use>Number of normal completions of RAB active phases for PS data streaming, when the RAB is established and released in the same cell. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN during normal PS data streaming RAB release - if the RAB is established and released in the same cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_STREA_SAMECE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_STREA_SAMECE (M1001C252)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_INTER_SAMECE">
    <formula>SERVLEV.RAB_ACT_COMP_PS_INTER_SAMECE</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_INTER_SAMECE (M1001C253)</title>
      <use>Number of normal completions of RAB active phases for PS data interactive, when the RAB is established and released in the same cell. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN during normal PS data interactive RAB release - if the RAB is established and released in the same cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_INTER_SAMECE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_INTER_SAMECE (M1001C253)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_BACKG_SAMECE">
    <formula>SERVLEV.RAB_ACT_COMP_PS_BACKG_SAMECE</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_BACKG_SAMECE (M1001C254)</title>
      <use>Number of normal completions of RAB active phases for PS data background, when the RAB is established and released in the same cell. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN during normal PS data background RAB release - if the RAB is established and released in the same cell.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_BACKG_SAMECE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_BACKG_SAMECE (M1001C254)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_NOT_SUPP_PAR">
    <formula>SERVLEV.RAB_STP_FAIL_CS_NOT_SUPP_PAR</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_NOT_SUPP_PAR (M1001C255)</title>
      <use>The number of occasions when the CS RAB setup attempt is not started due to requested parameters are not supported by the RNC. The RAB setup attempt counter is not updated in this case. UPDATED:The counter is updated when RANAP: RAB ASSIGNMENT RESPONSE with error information is sent to the CN as a result of that the requested parameters are not supported.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_NOT_SUPP_PAR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_NOT_SUPP_PAR (M1001C255)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_UE_CAPA">
    <formula>SERVLEV.RAB_STP_FAIL_CS_UE_CAPA</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_UE_CAPA (M1001C256)</title>
      <use>The number of occasions when the CS RAB setup attempt is not started due to requested parameters are not supported by the UE. The RAB setup attempt counter is not updated in this case. UPDATED:The counter is updated when RANAP: RAB ASSIGNMENT RESPONSE with error information is sent to the CN as a result of that the requested parameters are not supported.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_UE_CAPA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_UE_CAPA (M1001C256)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_PS_NOT_SUPP_PAR">
    <formula>SERVLEV.RAB_STP_FAIL_PS_NOT_SUPP_PAR</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_PS_NOT_SUPP_PAR (M1001C257)</title>
      <use>The number of occasions when the PS RAB setup attempt is not started due to requested parameters are not supported by the RNC. The RAB setup attempt counter is not updated in this case. UPDATED:The counter is updated when RANAP: RAB ASSIGNMENT RESPONSE with error information is sent to the CN as a result of that the requested parameters are not supported.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_PS_NOT_SUPP_PAR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_PS_NOT_SUPP_PAR (M1001C257)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_PS_UE_CAPA">
    <formula>SERVLEV.RAB_STP_FAIL_PS_UE_CAPA</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_PS_UE_CAPA (M1001C258)</title>
      <use>The number of occasions when the PS RAB setup attempt is not started due to requested parameters are not supported by the UE. The RAB setup attempt counter is not updated in this case. UPDATED:The counter is updated when RANAP: RAB ASSIGNMENT RESPONSE with error information is sent to the CN as a result of that the requested parameters are not supported.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_PS_UE_CAPA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_PS_UE_CAPA (M1001C258)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_SETUP_COMP_AFT_DIR">
    <formula>SERVLEV.RRC_CONN_SETUP_COMP_AFT_DIR</formula>
    <kpi_info>
      <title>RRC_CONN_SETUP_COMP_AFT_DIR (M1001C259)</title>
      <use>The RRC connection setup is completed after directed to the cell. This counter is updated to that cell to which the RRC connection is directed. UPDATED:The counter is updated when the RRC connection setup is sent with new cell carrier information.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_SETUP_COMP_AFT_DIR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_SETUP_COMP_AFT_DIR (M1001C259)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CON_SETUP_COMP_DIRECTED">
    <formula>SERVLEV.RRC_CON_SETUP_COMP_DIRECTED</formula>
    <kpi_info>
      <title>RRC_CON_SETUP_COMP_DIRECTED (M1001C260)</title>
      <use>RRC Connection setup completed and directed to another cell. This counter is updated for the cell where the RRC CONNECTION REQUEST was received. UPDATED:Updated when RRC CONNECTION SETUP is sent with new cell carrier information.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CON_SETUP_COMP_DIRECTED)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CON_SETUP_COMP_DIRECTED (M1001C260)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_CS_AMR_MULTIM">
    <formula>SERVLEV.RAB_SETUP_ATT_CS_AMR_MULTIM</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_CS_AMR_MULTIM (M1001C261)</title>
      <use>The number of RAB setup attempts for CS AMR Multimode calls. Also M1001C66 is updated along with this counter. UPDATED:When the RAB setup for a CS AMR Multimode call starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_CS_AMR_MULTIM)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_CS_AMR_MULTIM (M1001C261)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_CS_AMR_MULTIM">
    <formula>SERVLEV.RAB_ACC_COMP_CS_AMR_MULTIM</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_CS_AMR_MULTIM (M1001C262)</title>
      <use>Number of RAB access completions for CS AMR Multimode calls. UPDATED:When the RAB access for a CS AMR Multimode call is completed.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_CS_AMR_MULTIM)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_CS_AMR_MULTIM (M1001C262)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_CS_CONV_64">
    <formula>SERVLEV.RAB_SETUP_ATT_CS_CONV_64</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_CS_CONV_64 (M1001C263)</title>
      <use>Number of RAB setup attempts for CS Conversational 64 kbps. UPDATED:When the RAB setup attempt for a CS Conversational 64 kbps starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_CS_CONV_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_CS_CONV_64 (M1001C263)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_CS_CONV_64">
    <formula>SERVLEV.RAB_ACC_COMP_CS_CONV_64</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_CS_CONV_64 (M1001C264)</title>
      <use>Number of completed RAB access phases for 64 kbps CS data conversational. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for 64 kbps CS data conversational.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_CS_CONV_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_CS_CONV_64 (M1001C264)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_CS_STREAM_14_4">
    <formula>SERVLEV.RAB_SETUP_ATT_CS_STREAM_14_4</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_CS_STREAM_14_4 (M1001C265)</title>
      <use>Number of RAB setup attempt for CS Streaming 14.4 kbps. UPDATED:When the RAB setup attempt for a CS Streaming 14.4 kbps starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_CS_STREAM_14_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_CS_STREAM_14_4 (M1001C265)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_CS_STREAM_14_4">
    <formula>SERVLEV.RAB_ACC_COMP_CS_STREAM_14_4</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_CS_STREAM_14_4 (M1001C266)</title>
      <use>Number of completed RAB access phases for 14.4 kbps CS data streaming. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for 14.4 kbps CS data streaming.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_CS_STREAM_14_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_CS_STREAM_14_4 (M1001C266)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_CS_STREA_57_6">
    <formula>SERVLEV.RAB_SETUP_ATT_CS_STREA_57_6</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_CS_STREA_57_6 (M1001C267)</title>
      <use>Number of RAB setup attempts for CS Streaming 57.6 kbps. UPDATED:When the RAB setup attempt for a CS Streaming 57.6 kbps starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_CS_STREA_57_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_CS_STREA_57_6 (M1001C267)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_CS_STREA_57_6">
    <formula>SERVLEV.RAB_ACC_COMP_CS_STREA_57_6</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_CS_STREA_57_6 (M1001C268)</title>
      <use>Number of RAB access completions for CS Streaming 57.6 kbps. UPDATED:When the RAB access for a CS Streaming 57.6 kbps is completed.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_CS_STREA_57_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_CS_STREA_57_6 (M1001C268)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SET_A_PS_S_16_64_G_16_64">
    <formula>SERVLEV.RAB_SET_A_PS_S_16_64_G_16_64</formula>
    <kpi_info>
      <title>RAB_SET_A_PS_S_16_64_G_16_64 (M1001C269)</title>
      <use>Number of RAB setup attempts for PS Streaming RAB with a maximum bitrate of 16 kbps uplink/64 kbps downlink and guaranteed bitrate of 16 kbps uplink/64 kbps downlink. UPDATED:When the RAB setup for a PS Streaming starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SET_A_PS_S_16_64_G_16_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SET_A_PS_S_16_64_G_16_64 (M1001C269)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_C_PS_S_16_64_G_16_64">
    <formula>SERVLEV.RAB_ACC_C_PS_S_16_64_G_16_64</formula>
    <kpi_info>
      <title>RAB_ACC_C_PS_S_16_64_G_16_64 (M1001C270)</title>
      <use>Number of RAB access completions for PS Streaming RAB with a maximum bitrate of 16 kbps uplink/64 kbps downlink and guaranteed bitrate of 16 kbps uplink/64 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for PS data streaming call with maximum and guaranteed bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_C_PS_S_16_64_G_16_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_C_PS_S_16_64_G_16_64 (M1001C270)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SET_A_PS_S_16_64_G_8_32">
    <formula>SERVLEV.RAB_SET_A_PS_S_16_64_G_8_32</formula>
    <kpi_info>
      <title>RAB_SET_A_PS_S_16_64_G_8_32 (M1001C271)</title>
      <use>Number of RAB setup attempts for PS Streaming RAB with a maximum bitrate of 16 kbps uplink/64 kbps downlink and guaranteed bitrate of 8 kbps uplink/32 kbps downlink. UPDATED:When the RAB setup for a PS Streaming starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SET_A_PS_S_16_64_G_8_32)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SET_A_PS_S_16_64_G_8_32 (M1001C271)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_C_PS_S_16_64_G_8_32">
    <formula>SERVLEV.RAB_ACC_C_PS_S_16_64_G_8_32</formula>
    <kpi_info>
      <title>RAB_ACC_C_PS_S_16_64_G_8_32 (M1001C272)</title>
      <use>Number of RAB access completions for PS Streaming RAB with a maximum bitrate of 16 kbps uplink/64 kbps downlink and guaranteed bitrate of 8 kbps uplink/32 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful RAB establishment for PS data streaming call with maximum and guaranteed bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_C_PS_S_16_64_G_8_32)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_C_PS_S_16_64_G_8_32 (M1001C272)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_PS_NRT_64_64">
    <formula>SERVLEV.RAB_SETUP_ATT_PS_NRT_64_64</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_PS_NRT_64_64 (M1001C273)</title>
      <use>Number of RAB setup attempts for PS NRT RAB with a bit rate of 64 kbps uplink/64 kbps downlink. UPDATED:When the RAB setup for a PS NRT RAB starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_PS_NRT_64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_PS_NRT_64_64 (M1001C273)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_PS_NRT_64_128">
    <formula>SERVLEV.RAB_SETUP_ATT_PS_NRT_64_128</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_PS_NRT_64_128 (M1001C274)</title>
      <use>Number of RAB setup attempts for PS NRT RAB with a bit rate of 64 kbps uplink/128 kbps downlink. UPDATED:When the RAB setup for a PS NRT RAB starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_PS_NRT_64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_PS_NRT_64_128 (M1001C274)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_PS_NRT_64_256">
    <formula>SERVLEV.RAB_SETUP_ATT_PS_NRT_64_256</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_PS_NRT_64_256 (M1001C275)</title>
      <use>Number of RAB setup attempts for PS NRT RAB with a bit rate of 64 kbps uplink/256 kbps downlink. UPDATED:When the RAB setup for a PS NRT RAB starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_PS_NRT_64_256)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_PS_NRT_64_256 (M1001C275)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_PS_NRT_64_384">
    <formula>SERVLEV.RAB_SETUP_ATT_PS_NRT_64_384</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_PS_NRT_64_384 (M1001C276)</title>
      <use>Number of RAB setup attempts for PS NRT RAB with a bit rate of 64 kbps uplink/384 kbps downlink. UPDATED:When the RAB setup for a PS NRT starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_PS_NRT_64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_PS_NRT_64_384 (M1001C276)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_NRT_64_64">
    <formula>SERVLEV.RAB_ACC_COMP_PS_NRT_64_64</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_NRT_64_64 (M1001C277)</title>
      <use>Number of RAB access completions for PS NRT RAB with a bit rate of 64 kbps uplink/64 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful PS NRT RAB establishment with uplink and downlink bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_NRT_64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_NRT_64_64 (M1001C277)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_NRT_64_128">
    <formula>SERVLEV.RAB_ACC_COMP_PS_NRT_64_128</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_NRT_64_128 (M1001C278)</title>
      <use>Number of RAB access completions for PS NRT RAB with a bit rate of 64 kbps uplink/128 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful PS NRT RAB establishment with uplink and downlink bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_NRT_64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_NRT_64_128 (M1001C278)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_NRT_64_256">
    <formula>SERVLEV.RAB_ACC_COMP_PS_NRT_64_256</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_NRT_64_256 (M1001C279)</title>
      <use>Number of RAB access completions for PS NRT RAB with a bit rate of 64 kbps uplink/256 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful PS NRT RAB establishment with uplink and downlink bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_NRT_64_256)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_NRT_64_256 (M1001C279)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_NRT_64_384">
    <formula>SERVLEV.RAB_ACC_COMP_PS_NRT_64_384</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_NRT_64_384 (M1001C280)</title>
      <use>Number of RAB access completions for PS NRT RAB with a bit rate of 64 kbps uplink/384 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful PS NRT RAB establishment with uplink and downlink bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_NRT_64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_NRT_64_384 (M1001C280)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_12_2_1PSNRT64_64">
    <formula>SERVLEV.RAB_S_A_CS_12_2_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_S_A_CS_12_2_1PSNRT64_64 (M1001C281)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR 12.2 + PS NRT (64/64)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_12_2_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_12_2_1PSNRT64_64 (M1001C281)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_12_2_1PSNRT64_128">
    <formula>SERVLEV.RAB_S_A_CS_12_2_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_S_A_CS_12_2_1PSNRT64_128 (M1001C282)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR 12.2 + PS NRT (64/128)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_12_2_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_12_2_1PSNRT64_128 (M1001C282)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_12_2_2PSNRT_I_I">
    <formula>SERVLEV.RAB_S_A_CS_12_2_2PSNRT_I_I</formula>
    <kpi_info>
      <title>RAB_S_A_CS_12_2_2PSNRT_I_I (M1001C283)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR 12.2 + 2 PS NRT (INTERACTIVE and INTERACTIVE)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when one or two of the RABs already are established (for example, 1 CS + 1 PS NRT) and CN requests that a third RAB be set up (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_12_2_2PSNRT_I_I)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_12_2_2PSNRT_I_I (M1001C283)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_12_2_2PSNRT_I_B">
    <formula>SERVLEV.RAB_S_A_CS_12_2_2PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_S_A_CS_12_2_2PSNRT_I_B (M1001C284)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR 12.2 + 2 PS NRT (INTERACTIVE and BACKGROUND)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when one or two of the RABs already are established (for example, 1 CS + 1 PS NRT) and CN requests that a third RAB be set up (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_12_2_2PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_12_2_2PSNRT_I_B (M1001C284)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_12_2_2PSNRT_B_B">
    <formula>SERVLEV.RAB_S_A_CS_12_2_2PSNRT_B_B</formula>
    <kpi_info>
      <title>RAB_S_A_CS_12_2_2PSNRT_B_B (M1001C285)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR 12.2 + 2 PS NRT (BACKGROUND and BACKGROUND)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when one or two of the RABs already are established (for example, 1 CS + 1 PS NRT) and CN requests that a third RAB be set up (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_12_2_2PSNRT_B_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_12_2_2PSNRT_B_B (M1001C285)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_12_2_3PSNRT">
    <formula>SERVLEV.RAB_S_A_CS_12_2_3PSNRT</formula>
    <kpi_info>
      <title>RAB_S_A_CS_12_2_3PSNRT (M1001C286)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR 12.2+3PS NRT". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when one or more of the RABs already are established and CN requests that one or more new RABs be set up (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_12_2_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_12_2_3PSNRT (M1001C286)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS12_2_1PSNRT64_64">
    <formula>SERVLEV.RAB_ACCC_CS12_2_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_ACCC_CS12_2_1PSNRT64_64 (M1001C287)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR 12.2+1PS NRT(64/64)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS12_2_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS12_2_1PSNRT64_64 (M1001C287)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS12_2_1PSNRT64_128">
    <formula>SERVLEV.RAB_ACCC_CS12_2_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_ACCC_CS12_2_1PSNRT64_128 (M1001C288)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR 12.2+1PS NRT(64/128)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS12_2_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS12_2_1PSNRT64_128 (M1001C288)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS12_2_2PSNRT_I_I">
    <formula>SERVLEV.RAB_ACCC_CS12_2_2PSNRT_I_I</formula>
    <kpi_info>
      <title>RAB_ACCC_CS12_2_2PSNRT_I_I (M1001C289)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR 12.2+2PS NRT(INTERACTIVE and INTERACTIVE)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when one or more of the RABs are already established and one or more new RABs are successfully established (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS12_2_2PSNRT_I_I)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS12_2_2PSNRT_I_I (M1001C289)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS12_2_2PSNRT_I_B">
    <formula>SERVLEV.RAB_ACCC_CS12_2_2PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_ACCC_CS12_2_2PSNRT_I_B (M1001C290)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR 12.2+2PS NRT(INTERACTIVE and BACKGROUND)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when one or more of the RABs are already established and one or more new RABs are successfully established (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS12_2_2PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS12_2_2PSNRT_I_B (M1001C290)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS12_2_2PSNRT_B_B">
    <formula>SERVLEV.RAB_ACCC_CS12_2_2PSNRT_B_B</formula>
    <kpi_info>
      <title>RAB_ACCC_CS12_2_2PSNRT_B_B (M1001C291)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR 12.2+2PS NRT(BACKGROUND and BACKGROUND)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when one or more of the RABs are already established and one or more new RABs are successfully established (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS12_2_2PSNRT_B_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS12_2_2PSNRT_B_B (M1001C291)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS12_2_3PSNRT">
    <formula>SERVLEV.RAB_ACCC_CS12_2_3PSNRT</formula>
    <kpi_info>
      <title>RAB_ACCC_CS12_2_3PSNRT (M1001C292)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR 12.2 + 3 PS NRT". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when one or more of the RABs are already established and one or more new RABs are successfully established (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS12_2_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS12_2_3PSNRT (M1001C292)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_AMM_1PSNRT64_64">
    <formula>SERVLEV.RAB_S_A_CS_AMM_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_S_A_CS_AMM_1PSNRT64_64 (M1001C293)</title>
      <use>The number of RAB setup attempts the result of which would be a multi-RAB combination 'CS AMR MULTIMODE + 1 PS NRT (64/64)'. UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_AMM_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_AMM_1PSNRT64_64 (M1001C293)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_AMM_1PSNRT64_128">
    <formula>SERVLEV.RAB_S_A_CS_AMM_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_S_A_CS_AMM_1PSNRT64_128 (M1001C294)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR MULTIMODE + 1 PS NRT (64/128)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_AMM_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_AMM_1PSNRT64_128 (M1001C294)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_AMM_2PSNRT_I_I">
    <formula>SERVLEV.RAB_S_A_CS_AMM_2PSNRT_I_I</formula>
    <kpi_info>
      <title>RAB_S_A_CS_AMM_2PSNRT_I_I (M1001C295)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR MULTIMODE + 2 PS NRT (INTERACTIVE and INTERACTIVE)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when one or two of the RABs are already established (for example, 1 CS + 1 PS NRT), and CN requests that a third RAB be set up (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_AMM_2PSNRT_I_I)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_AMM_2PSNRT_I_I (M1001C295)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_AMM_2PSNRT_I_B">
    <formula>SERVLEV.RAB_S_A_CS_AMM_2PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_S_A_CS_AMM_2PSNRT_I_B (M1001C296)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR MULTIMODE + 2 PS NRT (INTERACTIVE and BACKGROUND)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when one or two of the RABs are already established (for example, 1 CS + 1 PS NRT) and CN requests that a third RAB be set up (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_AMM_2PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_AMM_2PSNRT_I_B (M1001C296)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_AMM_2PSNRT_B_B">
    <formula>SERVLEV.RAB_S_A_CS_AMM_2PSNRT_B_B</formula>
    <kpi_info>
      <title>RAB_S_A_CS_AMM_2PSNRT_B_B (M1001C297)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR MULTIMODE + 2 PS NRT (BACKGROUND and BACKGROUND)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when one or two of the RABs are already established (for example, 1 CS + 1 PS NRT), and CN requests that a third RAB be set up (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_AMM_2PSNRT_B_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_AMM_2PSNRT_B_B (M1001C297)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_AMM_3PSNRT">
    <formula>SERVLEV.RAB_S_A_CS_AMM_3PSNRT</formula>
    <kpi_info>
      <title>RAB_S_A_CS_AMM_3PSNRT (M1001C298)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR MULTIMODE + 3 PS NRT". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when one or two of the RABs are already established (for example, 1 CS + 1 PS NRT), and CN requests that a third RAB be set up (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_AMM_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_AMM_3PSNRT (M1001C298)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS_AMM_1PSNRT64_64">
    <formula>SERVLEV.RAB_ACCC_CS_AMM_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_ACCC_CS_AMM_1PSNRT64_64 (M1001C299)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR MULTIMODE + 1 PS NRT (64/64)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS_AMM_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS_AMM_1PSNRT64_64 (M1001C299)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS_AMM_1PSNRT64_128">
    <formula>SERVLEV.RAB_ACCC_CS_AMM_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_ACCC_CS_AMM_1PSNRT64_128 (M1001C300)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR MULTIMODE + 1 PS NRT (64/128)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS_AMM_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS_AMM_1PSNRT64_128 (M1001C300)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS_AMM_2PSNRT_I_I">
    <formula>SERVLEV.RAB_ACCC_CS_AMM_2PSNRT_I_I</formula>
    <kpi_info>
      <title>RAB_ACCC_CS_AMM_2PSNRT_I_I (M1001C301)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR MULTIMODE + 2 PS NRT (INTERACTIVE and INTERACTIVE)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when one or more of the RABs are already established and one or more new RABs are succesfully established (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS_AMM_2PSNRT_I_I)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS_AMM_2PSNRT_I_I (M1001C301)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS_AMM_2PSNRT_I_B">
    <formula>SERVLEV.RAB_ACCC_CS_AMM_2PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_ACCC_CS_AMM_2PSNRT_I_B (M1001C302)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR MULTIMODE + 2 PS NRT (INTERACTIVE and BACKGROUND)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when one or more of the RABs are already established and one or more new RABs are succesfully established (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS_AMM_2PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS_AMM_2PSNRT_I_B (M1001C302)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS_AMM_2PSNRT_B_B">
    <formula>SERVLEV.RAB_ACCC_CS_AMM_2PSNRT_B_B</formula>
    <kpi_info>
      <title>RAB_ACCC_CS_AMM_2PSNRT_B_B (M1001C303)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR MULTIMODE + 2 PS NRT (BACKGROUND and BACKGROUND)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when one or more of the RABs are already established and one or more new RABs are successfully established (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS_AMM_2PSNRT_B_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS_AMM_2PSNRT_B_B (M1001C303)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS_AMM_3PSNRT">
    <formula>SERVLEV.RAB_ACCC_CS_AMM_3PSNRT</formula>
    <kpi_info>
      <title>RAB_ACCC_CS_AMM_3PSNRT (M1001C304)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS AMR MULTIMODE + 3 PS NRT". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when one or more of the RABs are already established and one or more new RABs are successfully established (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS_AMM_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS_AMM_3PSNRT (M1001C304)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_2PSNRT_I_I">
    <formula>SERVLEV.RAB_SETUP_ATT_2PSNRT_I_I</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_2PSNRT_I_I (M1001C305)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "2 PS NRT (INTERACTIVE and INTERACTIVE)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a PS RAB already exists and a new PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_2PSNRT_I_I)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_2PSNRT_I_I (M1001C305)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_2PSNRT_I_B">
    <formula>SERVLEV.RAB_SETUP_ATT_2PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_2PSNRT_I_B (M1001C306)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "2 PS NRT (INTERACTIVE and BACKGROUND)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a PS RAB already exists and a new PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_2PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_2PSNRT_I_B (M1001C306)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_2PSNRT_B_B">
    <formula>SERVLEV.RAB_SETUP_ATT_2PSNRT_B_B</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_2PSNRT_B_B (M1001C307)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "2 PS NRT (BACKGROUND and BACKGROUND)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a PS RAB already exists and a new PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_2PSNRT_B_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_2PSNRT_B_B (M1001C307)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMPL_2PSNRT_I_I">
    <formula>SERVLEV.RAB_ACC_COMPL_2PSNRT_I_I</formula>
    <kpi_info>
      <title>RAB_ACC_COMPL_2PSNRT_I_I (M1001C308)</title>
      <use>The number of RAB access completed for a multi-RAB combination "2 PS NRT (INTERACTIVE and INTERACTIVE)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a PS RAB already exists and a new PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMPL_2PSNRT_I_I)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMPL_2PSNRT_I_I (M1001C308)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMPL_2PSNRT_I_B">
    <formula>SERVLEV.RAB_ACC_COMPL_2PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_ACC_COMPL_2PSNRT_I_B (M1001C309)</title>
      <use>The number of RAB access completed for a multi-RAB combination "2 PS NRT (INTERACTIVE and BACKGROUND)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a PS RAB already exists and a new PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMPL_2PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMPL_2PSNRT_I_B (M1001C309)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMPL_2PSNRT_B_B">
    <formula>SERVLEV.RAB_ACC_COMPL_2PSNRT_B_B</formula>
    <kpi_info>
      <title>RAB_ACC_COMPL_2PSNRT_B_B (M1001C310)</title>
      <use>The number of RAB access completed for a multi-RAB combination "2 PS NRT (BACKGROUND and BACKGROUND)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a PS RAB already exists and a new PS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMPL_2PSNRT_B_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMPL_2PSNRT_B_B (M1001C310)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_3PSNRT">
    <formula>SERVLEV.RAB_SETUP_ATT_3PSNRT</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_3PSNRT (M1001C311)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "3 PS NRT". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when one or two PS RABs already exist and one or two new PS RABs are set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_3PSNRT (M1001C311)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMPL_3PSNRT">
    <formula>SERVLEV.RAB_ACC_COMPL_3PSNRT</formula>
    <kpi_info>
      <title>RAB_ACC_COMPL_3PSNRT (M1001C312)</title>
      <use>The number of RAB access completed for a multi-RAB combination "3 PS NRT". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when one or two PS RABs already exist and one or two new PS RABs are set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMPL_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMPL_3PSNRT (M1001C312)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_PSS_GEM_1PSNRT64_64">
    <formula>SERVLEV.RAB_S_A_PSS_GEM_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_S_A_PSS_GEM_1PSNRT64_64 (M1001C313)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "PS Streaming with guaranteed bitrate the same as maximum bitrate" + "PS NRT (64 kpbs uplink/64 kbps downlink)". UPDATED:When a RAB setup is started for PS NRT (64/64) RAB while the UE already has a PS Streaming RAB with a guaranteed bit rate the same as the maximum bit rate; When a RAB setup is started for PS Streaming RAB with a guaranteed bit rate the same as the maximum bit rate while the UE already has one PS NRT (64/64) RAB; When a RAB setup is started simultaneously (in the same RAB ASSIGNMENT REQUEST) for both PS Streaming RAB with a guaranteed bit rate the same the as maximum bitrate and PS NRT (64/64) while the UE has no existing RABs.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_PSS_GEM_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_PSS_GEM_1PSNRT64_64 (M1001C313)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_PSS_GEM_1PSNRT64_128">
    <formula>SERVLEV.RAB_S_A_PSS_GEM_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_S_A_PSS_GEM_1PSNRT64_128 (M1001C314)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "PS Streaming with guaranteed bitrate the same as maximum bitrate" + "PS NRT (64 kpbs uplink/128 kbps downlink)". UPDATED:When a RAB setup is started for PS NRT (64/128) RAB while the UE already has a PS Streaming RAB with guaranteed bitrate the same as maximum bitrate; When a RAB setup is started for PS Streaming RAB with guaranteed bitrate the same as maximum bitrate while the UE already has one PS NRT (64/128) RAB; When a RAB setup is started simultaneously (in the same RAB ASSIGNMENT REQUEST) for both PS Streaming RAB with guaranteed bitrate the same as maximum bitrate and PS NRT (64/128) while the UE has no existing RABs.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_PSS_GEM_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_PSS_GEM_1PSNRT64_128 (M1001C314)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_PSS_GEM_1PSNRT64_384">
    <formula>SERVLEV.RAB_S_A_PSS_GEM_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_S_A_PSS_GEM_1PSNRT64_384 (M1001C315)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "PS Streaming with guaranteed bitrate the same as maximum bitrate" + "PS NRT (64 kpbs uplink/384 kbps downlink)". UPDATED:When a RAB setup is started for PS NRT (64/384) RAB while the UE already has a PS Streaming RAB with guaranteed bitrate the same as maximum bitrate; When a RAB setup is started for PS Streaming RAB with guaranteed bitrate the same as maximum bitrate while the UE already has one PS NRT (64/384) RAB; When a RAB setup is started simultaneously (in the same RAB ASSIGNMENT REQUEST) for both PS Streaming RAB with guaranteed bitrate the same as maximum bitrate and PS NRT (64/384) while the UE has no existing RABs.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_PSS_GEM_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_PSS_GEM_1PSNRT64_384 (M1001C315)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_PSS_GLM_1PSNRT64_64">
    <formula>SERVLEV.RAB_S_A_PSS_GLM_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_S_A_PSS_GLM_1PSNRT64_64 (M1001C316)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "PS Streaming with guaranteed bitrate less than maximum bitrate" + "PS NRT (64 kpbs uplink/64 kbps downlink)". UPDATED:When a RAB setup is started for PS NRT (64/64) RAB while the UE already has a PS Streaming RAB with guaranteed bitrate less than maximum bitrate; When a RAB setup is started for PS Streaming RAB with guaranteed bitrate less than maximum bitrate while the UE already has one PS NRT (64/64) RAB; When a RAB setup is started simultaneously (in the same RAB ASSIGNMENT REQUEST) for both PS Streaming RAB with guaranteed bitrate less than maximum bitrate and PS NRT (64/64) while the UE has no existing RABs.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_PSS_GLM_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_PSS_GLM_1PSNRT64_64 (M1001C316)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_PSS_GLM_1PSNRT64_128">
    <formula>SERVLEV.RAB_S_A_PSS_GLM_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_S_A_PSS_GLM_1PSNRT64_128 (M1001C317)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "PS Streaming with guaranteed bitrate less than maximum bitrate" + "PS NRT (64 kpbs uplink/128 kbps downlink)". UPDATED:When a RAB setup is started for PS NRT (64/128) RAB while the UE already has a PS Streaming RAB with guaranteed bitrate less than maximum bitrate; When a RAB setup is started for PS Streaming RAB with guaranteed bitrate less than maximum bitrate while the UE already has one PS NRT (64/128) RAB; When a RAB setup is started simultaneously (in the same RAB ASSIGNMENT REQUEST) for both PS Streaming RAB with guaranteed bitrate less than maximum bitrate and PS NRT (64/128) while the UE has no existing RABs.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_PSS_GLM_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_PSS_GLM_1PSNRT64_128 (M1001C317)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_PSS_GLM_1PSNRT64_384">
    <formula>SERVLEV.RAB_S_A_PSS_GLM_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_S_A_PSS_GLM_1PSNRT64_384 (M1001C318)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "PS Streaming with guaranteed bitrate less than maximum bitrate" + "PS NRT (64 kpbs uplink/384 kbps downlink)". UPDATED:When a RAB setup is started for PS NRT (64/384) RAB while the UE already has a PS Streaming RAB with guaranteed bitrate less than maximum bitrate; When a RAB setup is started for PS Streaming RAB with guaranteed bitrate less than maximum bitrate while the UE already has one PS NRT (64/384) RAB; When a RAB setup is started simultaneously (in the same RAB ASSIGNMENT REQUEST) for both PS Streaming RAB with guaranteed bitrate less than maximum bitrate and PS NRT (64/384) while the UE has no existing RABs.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_PSS_GLM_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_PSS_GLM_1PSNRT64_384 (M1001C318)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_PSS_GEM_1PSNRT64_64">
    <formula>SERVLEV.RAB_ACC_PSS_GEM_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_ACC_PSS_GEM_1PSNRT64_64 (M1001C319)</title>
      <use>The number of RAB access complete for a multi-RAB combination "PS Streaming with guaranteed bitrate the same as maximum bitrate" + "PS NRT (64 kpbs uplink/64 kbps downlink)". UPDATED:When a setup complete message is received from the UE, creating the multi-RAB combination in question, and response message is sent to the CN. This is the case when the UE already has "PS Streaming RAB with guaranteed bitrate the same as maximum bitrate" or "PS NRT (64 kpbs uplink/64 kbps downlink)" and "PS Streaming RAB with guaranteed bitrate the same as maximum bitrate" or "PS NRT (64 kpbs uplink/64 kbps downlink)" is added for the UE. Updated also if both PS RABs are established simultaneously.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_PSS_GEM_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_PSS_GEM_1PSNRT64_64 (M1001C319)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_PSS_GEM_1PSNRT64_128">
    <formula>SERVLEV.RAB_ACC_PSS_GEM_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_ACC_PSS_GEM_1PSNRT64_128 (M1001C320)</title>
      <use>The number of RAB access complete for a multi-RAB combination "PS Streaming with guaranteed bitrate the same as maximum bitrate" + "PS NRT (64 kpbs uplink/128 kbps downlink)". UPDATED:When a setup complete message is received from the UE, creating the multi-RAB combination in question, and response message is sent to the CN. This is the case when the UE already has "PS Streaming RAB with guaranteed bitrate the same as maximum bitrate" or "PS NRT (64 kpbs uplink/128 kbps downlink)" and "PS Streaming RAB with guaranteed bitrate the same as maximum bitrate" or "PS NRT (64 kpbs uplink/128 kbps downlink)" is added for the UE. Updated also if both PS RABs are established simultaneously.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_PSS_GEM_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_PSS_GEM_1PSNRT64_128 (M1001C320)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_PSS_GEM_1PSNRT64_384">
    <formula>SERVLEV.RAB_ACC_PSS_GEM_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_ACC_PSS_GEM_1PSNRT64_384 (M1001C321)</title>
      <use>The number of RAB access complete for a multi-RAB combination "PS Streaming with guaranteed bitrate the same as maximum bitrate" + "PS NRT (64 kpbs uplink/384 kbps downlink)". UPDATED:When a setup complete message is received from the UE, creating the multi-RAB combination in question, and response message is sent to the CN. This is the case when the UE already has "PS Streaming RAB with guaranteed bitrate the same as maximum bitrate" or "PS NRT (64 kpbs uplink/384 kbps downlink)" and "PS Streaming RAB with guaranteed bitrate the same as maximum bitrate" or "PS NRT (64 kpbs uplink/384 kbps downlink)" is added for the UE. Updated also if both PS RABs are established simultaneously.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_PSS_GEM_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_PSS_GEM_1PSNRT64_384 (M1001C321)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_PSS_GLM_1PSNRT64_64">
    <formula>SERVLEV.RAB_ACC_PSS_GLM_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_ACC_PSS_GLM_1PSNRT64_64 (M1001C322)</title>
      <use>The number of RAB access complete for a multi-RAB combination "PS Streaming with guaranteed bitrate less than maximum bitrate" + "PS NRT (64 kpbs uplink/64 kbps downlink)". UPDATED:When a setup complete message is received from the UE, creating the multi-RAB combination in question, and response message is sent to the CN. This is the case when the UE already has "PS Streaming RAB with guaranteed bitrate less than maximum bitrate" or "PS NRT (64 kpbs uplink/64 kbps downlink)" and "PS Streaming RAB with guaranteed bitrate less than maximum bitrate" or "PS NRT (64 kpbs uplink/64 kbps downlink)" is added for the UE. Updated also if both PS RABs are established simultaneously.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_PSS_GLM_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_PSS_GLM_1PSNRT64_64 (M1001C322)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_PSS_GLM_1PSNRT64_128">
    <formula>SERVLEV.RAB_ACC_PSS_GLM_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_ACC_PSS_GLM_1PSNRT64_128 (M1001C323)</title>
      <use>The number of RAB access complete for a multi-RAB combination "PS Streaming with guaranteed bitrate less than maximum bitrate" + "PS NRT (64 kpbs uplink/128 kbps downlink)". UPDATED:When a setup complete message is received from the UE, creating the multi-RAB combination in question, and response message is sent to the CN. This is the case while the UE already has "PS Streaming RAB with guaranteed bitrate less than maximum bitrate" or "PS NRT (64 kpbs uplink/128 kbps downlink)" and "PS Streaming RAB with guaranteed bitrate less than maximum bitrate" or "PS NRT (64 kpbs uplink/128 kbps downlink)" is added for the UE. Updated also if both PS RABs are established simultaneously.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_PSS_GLM_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_PSS_GLM_1PSNRT64_128 (M1001C323)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_PSS_GLM_1PSNRT64_384">
    <formula>SERVLEV.RAB_ACC_PSS_GLM_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_ACC_PSS_GLM_1PSNRT64_384 (M1001C324)</title>
      <use>The number of RAB access complete for a multi-RAB combination "PS Streaming with guaranteed bitrate less than maximum bitrate" + "PS NRT (64 kpbs uplink/384 kbps downlink)". UPDATED:When a setup complete message is received from the UE, creating the multi-RAB combination in question, and response message is sent to the CN. This is the case when the UE already has "PS Streaming RAB with guaranteed bitrate less than maximum bitrate" or "PS NRT (64 kpbs uplink/384 kbps downlink)" and "PS Streaming RAB with guaranteed bitrate less than maximum bitrate" or "PS NRT (64 kpbs uplink/384 kbps downlink)" is added for the UE. Updated also if both PS RABs are established simultaneously.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_PSS_GLM_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_PSS_GLM_1PSNRT64_384 (M1001C324)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_CONV_1PSNRT64_64">
    <formula>SERVLEV.RAB_S_A_CS_CONV_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_S_A_CS_CONV_1PSNRT64_64 (M1001C325)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS CONVERSATIONAL + 1 PS NRT (64/64)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a CS/PS RAB already exists and a PS/CS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_CONV_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_CONV_1PSNRT64_64 (M1001C325)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_CONV_1PSNRT64_128">
    <formula>SERVLEV.RAB_S_A_CS_CONV_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_S_A_CS_CONV_1PSNRT64_128 (M1001C326)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS CONVERSATIONAL + 1 PS NRT (64/128)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a CS/PS RAB already exists and a PS/CS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_CONV_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_CONV_1PSNRT64_128 (M1001C326)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_CONV_1PSNRT64_384">
    <formula>SERVLEV.RAB_S_A_CS_CONV_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_S_A_CS_CONV_1PSNRT64_384 (M1001C327)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS CONVERSATIONAL + 1 PS NRT (64/384)". UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a CS/PS RAB already exists and a PS/CS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_CONV_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_CONV_1PSNRT64_384 (M1001C327)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_CS_CONV_1PSNRT64_64">
    <formula>SERVLEV.RAB_ACC_CS_CONV_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_ACC_CS_CONV_1PSNRT64_64 (M1001C328)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS CONVERSATIONAL + 1 PS NRT (64/64)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a CS/PS RAB already exists and a PS/CS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_CS_CONV_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_CS_CONV_1PSNRT64_64 (M1001C328)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_CS_CONV_1PSNRT64_128">
    <formula>SERVLEV.RAB_ACC_CS_CONV_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_ACC_CS_CONV_1PSNRT64_128 (M1001C329)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS CONVERSATIONAL + 1 PS NRT (64/128)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a CS/PS RAB already exists and a PS/CS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_CS_CONV_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_CS_CONV_1PSNRT64_128 (M1001C329)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_CS_CONV_1PSNRT64_384">
    <formula>SERVLEV.RAB_ACC_CS_CONV_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_ACC_CS_CONV_1PSNRT64_384 (M1001C330)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CS CONVERSATIONAL + 1 PS NRT (64/384)". UPDATED:This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a CS/PS RAB already exists and a PS/CS RAB is set up in addition to it (for the same RRC connection).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_CS_CONV_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_CS_CONV_1PSNRT64_384 (M1001C330)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMPL_CS_AMR_MULTIM">
    <formula>SERVLEV.RAB_ACT_COMPL_CS_AMR_MULTIM</formula>
    <kpi_info>
      <title>RAB_ACT_COMPL_CS_AMR_MULTIM (M1001C331)</title>
      <use>The number of RAB active completions and active releases for CS AMR Multimode. UPDATED:When RAB active is completed for a RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMPL_CS_AMR_MULTIM)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMPL_CS_AMR_MULTIM (M1001C331)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMPL_CS_CONV_64">
    <formula>SERVLEV.RAB_ACT_COMPL_CS_CONV_64</formula>
    <kpi_info>
      <title>RAB_ACT_COMPL_CS_CONV_64 (M1001C332)</title>
      <use>The number of RAB active completions and active releases for CS Conversational 64 kbps. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMPL_CS_CONV_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMPL_CS_CONV_64 (M1001C332)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMPL_CS_STREAM_14_4">
    <formula>SERVLEV.RAB_ACT_COMPL_CS_STREAM_14_4</formula>
    <kpi_info>
      <title>RAB_ACT_COMPL_CS_STREAM_14_4 (M1001C333)</title>
      <use>The number of RAB active completions and active releases for CS Streaming 14.4 kbps. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMPL_CS_STREAM_14_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMPL_CS_STREAM_14_4 (M1001C333)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMPL_CS_STREAM_57_6">
    <formula>SERVLEV.RAB_ACT_COMPL_CS_STREAM_57_6</formula>
    <kpi_info>
      <title>RAB_ACT_COMPL_CS_STREAM_57_6 (M1001C334)</title>
      <use>The number of RAB active completions and active releases for CS Streaming 57.6 kbps. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMPL_CS_STREAM_57_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMPL_CS_STREAM_57_6 (M1001C334)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_C_PS_S_16_64_G_16_64">
    <formula>SERVLEV.RAB_ACT_C_PS_S_16_64_G_16_64</formula>
    <kpi_info>
      <title>RAB_ACT_C_PS_S_16_64_G_16_64 (M1001C335)</title>
      <use>The number of RAB active completions and active releases for PS Streaming RAB with a maximum bitrate of 16 kbps uplink/64 kbps downlink and a guaranteed bitrate of 16 kbps uplink/64 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_C_PS_S_16_64_G_16_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_C_PS_S_16_64_G_16_64 (M1001C335)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_C_PS_S_16_64_G_8_32">
    <formula>SERVLEV.RAB_ACT_C_PS_S_16_64_G_8_32</formula>
    <kpi_info>
      <title>RAB_ACT_C_PS_S_16_64_G_8_32 (M1001C336)</title>
      <use>The number of RAB active completions and active releases for PS Streaming RAB with a maximum bitrate of 16 kbps uplink/64 kbps downlink and a guaranteed bitrate of 8 kbps uplink/32 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_C_PS_S_16_64_G_8_32)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_C_PS_S_16_64_G_8_32 (M1001C336)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_NRT_64_64">
    <formula>SERVLEV.RAB_ACT_COMP_PS_NRT_64_64</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_NRT_64_64 (M1001C337)</title>
      <use>The number of RAB active completions and active releases for PS NRT RAB with a bitrate of 64 kbps uplink/64 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_NRT_64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_NRT_64_64 (M1001C337)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_NRT_64_128">
    <formula>SERVLEV.RAB_ACT_COMP_PS_NRT_64_128</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_NRT_64_128 (M1001C338)</title>
      <use>The number of RAB active completions and active releases for PS NRT RAB with a bitrate of 64 kbps uplink/128 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_NRT_64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_NRT_64_128 (M1001C338)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_NRT_64_256">
    <formula>SERVLEV.RAB_ACT_COMP_PS_NRT_64_256</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_NRT_64_256 (M1001C339)</title>
      <use>The number of RAB active completions and active releases for PS NRT RAB with a bitrate of 64 kbps uplink/256 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_NRT_64_256)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_NRT_64_256 (M1001C339)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_NRT_64_384">
    <formula>SERVLEV.RAB_ACT_COMP_PS_NRT_64_384</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_NRT_64_384 (M1001C340)</title>
      <use>The number of RAB active completions and active releases for PS NRT RAB with a bitrate of64 kbps uplink/384 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_NRT_64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_NRT_64_384 (M1001C340)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS12_2_1PSNRT64_64">
    <formula>SERVLEV.RAB_ACTC_CS12_2_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_ACTC_CS12_2_1PSNRT64_64 (M1001C341)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR 12.2 + 1 PS NRT (64/64)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS12_2_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS12_2_1PSNRT64_64 (M1001C341)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS12_2_1PSNRT64_128">
    <formula>SERVLEV.RAB_ACTC_CS12_2_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_ACTC_CS12_2_1PSNRT64_128 (M1001C342)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR 12.2 + 1 PS NRT (64/128)". UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS12_2_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS12_2_1PSNRT64_128 (M1001C342)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS12_2_2PSNRT_I_I">
    <formula>SERVLEV.RAB_ACTC_CS12_2_2PSNRT_I_I</formula>
    <kpi_info>
      <title>RAB_ACTC_CS12_2_2PSNRT_I_I (M1001C343)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR 12.2 + 2 PS NRT (INTERACTIVE and INTERACTIVE)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS12_2_2PSNRT_I_I)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS12_2_2PSNRT_I_I (M1001C343)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS12_2_2PSNRT_I_B">
    <formula>SERVLEV.RAB_ACTC_CS12_2_2PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_ACTC_CS12_2_2PSNRT_I_B (M1001C344)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR 12.2 + 2 PS NRT (INTERACTIVE and BACKGROUND)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS12_2_2PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS12_2_2PSNRT_I_B (M1001C344)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS12_2_2PSNRT_B_B">
    <formula>SERVLEV.RAB_ACTC_CS12_2_2PSNRT_B_B</formula>
    <kpi_info>
      <title>RAB_ACTC_CS12_2_2PSNRT_B_B (M1001C345)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR 12.2 + 2 PS NRT (BACKGROUND and BACKGROUND)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS12_2_2PSNRT_B_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS12_2_2PSNRT_B_B (M1001C345)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS12_2_3PSNRT">
    <formula>SERVLEV.RAB_ACTC_CS12_2_3PSNRT</formula>
    <kpi_info>
      <title>RAB_ACTC_CS12_2_3PSNRT (M1001C346)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR 12.2 + 3 PS NRT". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS12_2_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS12_2_3PSNRT (M1001C346)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS_AMM_1PSNRT64_64">
    <formula>SERVLEV.RAB_ACTC_CS_AMM_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_ACTC_CS_AMM_1PSNRT64_64 (M1001C347)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR MULTIMODE + 1 PS NRT (64/64)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS_AMM_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS_AMM_1PSNRT64_64 (M1001C347)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS_AMM_1PSNRT64_128">
    <formula>SERVLEV.RAB_ACTC_CS_AMM_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_ACTC_CS_AMM_1PSNRT64_128 (M1001C348)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR MULTIMODE + 1 PS NRT (64/128)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS_AMM_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS_AMM_1PSNRT64_128 (M1001C348)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS_AMM_2PSNRT_I_I">
    <formula>SERVLEV.RAB_ACTC_CS_AMM_2PSNRT_I_I</formula>
    <kpi_info>
      <title>RAB_ACTC_CS_AMM_2PSNRT_I_I (M1001C349)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR MULTIMODE + 2 PS NRT (INTERACTIVE and INTERACTIVE)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS_AMM_2PSNRT_I_I)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS_AMM_2PSNRT_I_I (M1001C349)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS_AMM_2PSNRT_I_B">
    <formula>SERVLEV.RAB_ACTC_CS_AMM_2PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_ACTC_CS_AMM_2PSNRT_I_B (M1001C350)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR MULTIMODE + 2 PS NRT (INTERACTIVE and BACKGROUND)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS_AMM_2PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS_AMM_2PSNRT_I_B (M1001C350)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS_AMM_2PSNRT_B_B">
    <formula>SERVLEV.RAB_ACTC_CS_AMM_2PSNRT_B_B</formula>
    <kpi_info>
      <title>RAB_ACTC_CS_AMM_2PSNRT_B_B (M1001C351)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR MULTIMODE + 2 PS NRT (BACKGROUND and BACKGROUND)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS_AMM_2PSNRT_B_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS_AMM_2PSNRT_B_B (M1001C351)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS_AMM_3PSNRT">
    <formula>SERVLEV.RAB_ACTC_CS_AMM_3PSNRT</formula>
    <kpi_info>
      <title>RAB_ACTC_CS_AMM_3PSNRT (M1001C352)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR MULTIMODE + 3 PS NRT". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS_AMM_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS_AMM_3PSNRT (M1001C352)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMPL_2PSNRT_I_I">
    <formula>SERVLEV.RAB_ACT_COMPL_2PSNRT_I_I</formula>
    <kpi_info>
      <title>RAB_ACT_COMPL_2PSNRT_I_I (M1001C353)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "2 PS NRT (INTERACTIVE and INTERACTIVE)". UPDATED:This counter is updated when the first RAB or RABs of the multi-RAB combination in question are completed.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMPL_2PSNRT_I_I)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMPL_2PSNRT_I_I (M1001C353)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMPL_2PSNRT_I_B">
    <formula>SERVLEV.RAB_ACT_COMPL_2PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_ACT_COMPL_2PSNRT_I_B (M1001C354)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "2 PS NRT (INTERACTIVE and BACKGROUND)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMPL_2PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMPL_2PSNRT_I_B (M1001C354)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMPL_2PSNRT_B_B">
    <formula>SERVLEV.RAB_ACT_COMPL_2PSNRT_B_B</formula>
    <kpi_info>
      <title>RAB_ACT_COMPL_2PSNRT_B_B (M1001C355)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "2 PS NRT (BACKGROUND and BACKGROUND)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMPL_2PSNRT_B_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMPL_2PSNRT_B_B (M1001C355)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMPL_3PSNRT">
    <formula>SERVLEV.RAB_ACT_COMPL_3PSNRT</formula>
    <kpi_info>
      <title>RAB_ACT_COMPL_3PSNRT (M1001C356)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "3 PS NRT". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMPL_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMPL_3PSNRT (M1001C356)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_PSS_GEM_1PSNRT64_64">
    <formula>SERVLEV.RAB_ACT_PSS_GEM_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_ACT_PSS_GEM_1PSNRT64_64 (M1001C357)</title>
      <use>The number of RAB active completions for the multi-RAB combination "PS Streaming RAB with guaranteed bitrate equal to max bitrate + 1 PS NRT RAB(64 kbps uplink/64 kbps downlink)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_PSS_GEM_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_PSS_GEM_1PSNRT64_64 (M1001C357)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_PSS_GEM_1PSNRT64_128">
    <formula>SERVLEV.RAB_ACT_PSS_GEM_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_ACT_PSS_GEM_1PSNRT64_128 (M1001C358)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "PS Streaming RAB with guaranteed bitrate equal to max bitrate + 1 PS NRT RAB (64kbps uplink/128kbps downlink)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_PSS_GEM_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_PSS_GEM_1PSNRT64_128 (M1001C358)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_PSS_GEM_1PSNRT64_384">
    <formula>SERVLEV.RAB_ACT_PSS_GEM_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_ACT_PSS_GEM_1PSNRT64_384 (M1001C359)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "PS Streaming RAB with guaranteed bitrate equal to max bitrate + 1 PS NRT RAB (64 kbps uplink/384kbps downlink)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_PSS_GEM_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_PSS_GEM_1PSNRT64_384 (M1001C359)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_PSS_GLM_1PSNRT64_64">
    <formula>SERVLEV.RAB_ACT_PSS_GLM_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_ACT_PSS_GLM_1PSNRT64_64 (M1001C360)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "PS Streaming RAB with guaranteed bitrate less than max bitrate + 1 PS NRT RAB (64 kbps uplink/64 kbps downlink)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_PSS_GLM_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_PSS_GLM_1PSNRT64_64 (M1001C360)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_PSS_GLM_1PSNRT64_128">
    <formula>SERVLEV.RAB_ACT_PSS_GLM_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_ACT_PSS_GLM_1PSNRT64_128 (M1001C361)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "PS Streaming RAB with guaranteed bitrate less than max bitrate + 1 PS NRT RAB (64 kbps uplink/128 kbps downlink)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_PSS_GLM_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_PSS_GLM_1PSNRT64_128 (M1001C361)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_PSS_GLM_1PSNRT64_384">
    <formula>SERVLEV.RAB_ACT_PSS_GLM_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_ACT_PSS_GLM_1PSNRT64_384 (M1001C362)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "PS Streaming RAB with guaranteed bitrate less than max bitrate + 1 PS NRT RAB (64 kbps uplink/384 kbps downlink)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_PSS_GLM_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_PSS_GLM_1PSNRT64_384 (M1001C362)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_CS_CONV_1PSNRT64_64">
    <formula>SERVLEV.RAB_ACT_CS_CONV_1PSNRT64_64</formula>
    <kpi_info>
      <title>RAB_ACT_CS_CONV_1PSNRT64_64 (M1001C363)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS CONVERSATIONAL + 1 PS NRT (64 kbps uplink/64 kbps downlink)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_CS_CONV_1PSNRT64_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_CS_CONV_1PSNRT64_64 (M1001C363)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_CS_CONV_1PSNRT64_128">
    <formula>SERVLEV.RAB_ACT_CS_CONV_1PSNRT64_128</formula>
    <kpi_info>
      <title>RAB_ACT_CS_CONV_1PSNRT64_128 (M1001C364)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS CONVERSATIONAL + 1 PS NRT (64 kbps uplink/128 kbps downlink)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_CS_CONV_1PSNRT64_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_CS_CONV_1PSNRT64_128 (M1001C364)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_CS_CONV_1PSNRT64_384">
    <formula>SERVLEV.RAB_ACT_CS_CONV_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_ACT_CS_CONV_1PSNRT64_384 (M1001C365)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS CONVERSATIONAL + 1 PS NRT (64 kbps uplink/384 kbps downlink)". UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_CS_CONV_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_CS_CONV_1PSNRT64_384 (M1001C365)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_HOLD_TIME_CS_AMR_MULTIM">
    <formula>SERVLEV.RAB_HOLD_TIME_CS_AMR_MULTIM</formula>
    <kpi_info>
      <title>RAB_HOLD_TIME_CS_AMR_MULTIM (M1001C366)</title>
      <use>This counter measures the RAB holding time of a CS AMR Multimode call. This counter divided by the denominator gives the average RAB holding time for the RAB type in question. UPDATED:When a RAB is released. This counter is updated to the cell where the RAB was released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_HOLD_TIME_CS_AMR_MULTIM)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_HOLD_TIME_CS_AMR_MULTIM (M1001C366)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_FOR_CS_AMR_MULTIM">
    <formula>SERVLEV.DENOM_FOR_CS_AMR_MULTIM</formula>
    <kpi_info>
      <title>DENOM_FOR_CS_AMR_MULTIM (M1001C367)</title>
      <use>Denominator for RAB holding time for CS AMR Multimode calls. UPDATED:When a RAB is released this counter is increased by one (1).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_FOR_CS_AMR_MULTIM)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_FOR_CS_AMR_MULTIM (M1001C367)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_HOLD_TIME_CS_CONV_64">
    <formula>SERVLEV.RAB_HOLD_TIME_CS_CONV_64</formula>
    <kpi_info>
      <title>RAB_HOLD_TIME_CS_CONV_64 (M1001C368)</title>
      <use>This counter measures the RAB holding time of a CS Conversational 64 kpbs data call. This counter divided by the denominator gives the average RAB holding time for the RAB type in question. UPDATED:When a RAB is released, this counter is updated to the cell where the RAB was released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_HOLD_TIME_CS_CONV_64)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_HOLD_TIME_CS_CONV_64 (M1001C368)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_FOR_CS_CONV_64">
    <formula>SERVLEV.DENOM_FOR_CS_CONV_64</formula>
    <kpi_info>
      <title>DENOM_FOR_CS_CONV_64 (M1001C369)</title>
      <use>Denominator for RAB holding time for CS Conversational 64 kbps data calls. UPDATED:When a RAB is released this counter is increased by one (1).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_FOR_CS_CONV_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_FOR_CS_CONV_64 (M1001C369)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_HOLD_TIME_CS_STREAM_14_4">
    <formula>SERVLEV.RAB_HOLD_TIME_CS_STREAM_14_4</formula>
    <kpi_info>
      <title>RAB_HOLD_TIME_CS_STREAM_14_4 (M1001C370)</title>
      <use>This counter measures the RAB holding time of a CS Streaming 14.4 kbps data call. This counter divided by the denominator gives the average RAB holding time for the RAB type in question. UPDATED:When a RAB is released, this counter is updated to the cell where the RAB was released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_HOLD_TIME_CS_STREAM_14_4)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_HOLD_TIME_CS_STREAM_14_4 (M1001C370)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_FOR_CS_STREAM_14_4">
    <formula>SERVLEV.DENOM_FOR_CS_STREAM_14_4</formula>
    <kpi_info>
      <title>DENOM_FOR_CS_STREAM_14_4 (M1001C371)</title>
      <use>Denominator for RAB holding time for CS Streaming 14.4 kbps data calls. UPDATED:When a RAB is released this counter is increased by one (1).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_FOR_CS_STREAM_14_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_FOR_CS_STREAM_14_4 (M1001C371)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_HOLD_TIME_CS_STREAM_57_6">
    <formula>SERVLEV.RAB_HOLD_TIME_CS_STREAM_57_6</formula>
    <kpi_info>
      <title>RAB_HOLD_TIME_CS_STREAM_57_6 (M1001C372)</title>
      <use>This counter measures the RAB holding time of a CS Streaming 57.6 kbps data call. This counter divided by the denominator gives the average RAB holding time for the RAB type in question. UPDATED:When a RAB is released, this counter is updated to the cell where the RAB was released.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_HOLD_TIME_CS_STREAM_57_6)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_HOLD_TIME_CS_STREAM_57_6 (M1001C372)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_FOR_CS_STREAM_57_6">
    <formula>SERVLEV.DENOM_FOR_CS_STREAM_57_6</formula>
    <kpi_info>
      <title>DENOM_FOR_CS_STREAM_57_6 (M1001C373)</title>
      <use>Denominator for RAB holding time for CS Streaming 57.6 kbps data calls. UPDATED:When a RAB is released this counter is increased by one (1).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_FOR_CS_STREAM_57_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_FOR_CS_STREAM_57_6 (M1001C373)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_PS_NRT_128_64">
    <formula>SERVLEV.RAB_SETUP_ATT_PS_NRT_128_64</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_PS_NRT_128_64 (M1001C374)</title>
      <use>The number of RAB setup attempts for PS NRT RAB with a bitrate of 128 kbps uplink/64 kbps downlink. UPDATED:When the RAB setup attempt for the RAB type in question starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_PS_NRT_128_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_PS_NRT_128_64 (M1001C374)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_PS_NRT_128_128">
    <formula>SERVLEV.RAB_SETUP_ATT_PS_NRT_128_128</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_PS_NRT_128_128 (M1001C375)</title>
      <use>The number of RAB setup attempts for PS NRT RAB with a bitrate of 128 kbps uplink/128 kbps downlink. UPDATED:When the RAB setup attempt for the RAB type in question starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_PS_NRT_128_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_PS_NRT_128_128 (M1001C375)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_PS_NRT_128_384">
    <formula>SERVLEV.RAB_SETUP_ATT_PS_NRT_128_384</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_PS_NRT_128_384 (M1001C376)</title>
      <use>The number of RAB setup attempts for PS NRT RAB with a bitrate of 128 kbps uplink/384 kbps downlink. UPDATED:When the RAB setup attempt for the RAB type in question starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_PS_NRT_128_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_PS_NRT_128_384 (M1001C376)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_PS_NRT_384_384">
    <formula>SERVLEV.RAB_SETUP_ATT_PS_NRT_384_384</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_PS_NRT_384_384 (M1001C377)</title>
      <use>The number of RAB setup attempts for PS NRT RAB with a bitrate of 384 kbps uplink/384 kbps downlink. UPDATED:When the RAB setup attempt for the RAB type in question starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_PS_NRT_384_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_PS_NRT_384_384 (M1001C377)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_PS_NRT_384_64">
    <formula>SERVLEV.RAB_SETUP_ATT_PS_NRT_384_64</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_PS_NRT_384_64 (M1001C378)</title>
      <use>The number of RAB setup attempts for PS NRT RAB with a bitrate of 384 kbps uplink/64 kbps downlink. UPDATED:When the RAB setup attempt for the RAB type in question starts.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_PS_NRT_384_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_PS_NRT_384_64 (M1001C378)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_NRT_128_64">
    <formula>SERVLEV.RAB_ACC_COMP_PS_NRT_128_64</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_NRT_128_64 (M1001C379)</title>
      <use>The number of RAB access completions for PS NRT RAB with a bit rate of 128 kbps uplink/64 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful PS NRT RAB establishment with uplink and downlink bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_NRT_128_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_NRT_128_64 (M1001C379)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_NRT_128_128">
    <formula>SERVLEV.RAB_ACC_COMP_PS_NRT_128_128</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_NRT_128_128 (M1001C380)</title>
      <use>The number of RAB access completions for PS NRT RAB with a bit rate of 128 kbps uplink/128 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful PS NRT RAB establishment with uplink and downlink bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_NRT_128_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_NRT_128_128 (M1001C380)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_NRT_128_384">
    <formula>SERVLEV.RAB_ACC_COMP_PS_NRT_128_384</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_NRT_128_384 (M1001C381)</title>
      <use>The number of RAB access completions for PS NRT RAB with a bit rate of 128 kbps uplink/384 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful PS NRT RAB establishment with uplink and downlink bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_NRT_128_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_NRT_128_384 (M1001C381)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_NRT_384_384">
    <formula>SERVLEV.RAB_ACC_COMP_PS_NRT_384_384</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_NRT_384_384 (M1001C382)</title>
      <use>The number of RAB access completions for PS NRT RAB with a bit rate of 384 kbps uplink/384 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful PS NRT RAB establishment with uplink and downlink bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_NRT_384_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_NRT_384_384 (M1001C382)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_NRT_384_64">
    <formula>SERVLEV.RAB_ACC_COMP_PS_NRT_384_64</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_NRT_384_64 (M1001C383)</title>
      <use>The number of RAB access completions for PS NRT RAB with a bit rate of 384 kbps uplink/64 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful PS NRT RAB establishment with uplink and downlink bit rates as described in the description field.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_NRT_384_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_NRT_384_64 (M1001C383)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_NRT_128_64">
    <formula>SERVLEV.RAB_ACT_COMP_PS_NRT_128_64</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_NRT_128_64 (M1001C384)</title>
      <use>The number of RAB active completions and active releases for PS NRT RAB with a bit rate of 128 kbps uplink/64 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_NRT_128_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_NRT_128_64 (M1001C384)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_NRT_128_128">
    <formula>SERVLEV.RAB_ACT_COMP_PS_NRT_128_128</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_NRT_128_128 (M1001C385)</title>
      <use>The number of RAB active completions and active releases for PS NRT RAB with a bit rate of 128 kbps uplink/128 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_NRT_128_128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_NRT_128_128 (M1001C385)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_NRT_128_384">
    <formula>SERVLEV.RAB_ACT_COMP_PS_NRT_128_384</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_NRT_128_384 (M1001C386)</title>
      <use>The number of RAB active completions and active releases for PS NRT RAB with a bit rate of 128 kbps uplink/384 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_NRT_128_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_NRT_128_384 (M1001C386)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_NRT_384_384">
    <formula>SERVLEV.RAB_ACT_COMP_PS_NRT_384_384</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_NRT_384_384 (M1001C387)</title>
      <use>The number of RAB active completions and active releases for PS NRT RAB with a bit rate of 384 kbps uplink/384 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_NRT_384_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_NRT_384_384 (M1001C387)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_NRT_384_64">
    <formula>SERVLEV.RAB_ACT_COMP_PS_NRT_384_64</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_NRT_384_64 (M1001C388)</title>
      <use>The number of RAB active completions and active releases for PS NRT RAB with a bit rate of 384 kbps uplink/64 kbps downlink. UPDATED:This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_NRT_384_64)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_NRT_384_64 (M1001C388)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPPORT_FOR_IPHC">
    <formula>SERVLEV.UE_SUPPORT_FOR_IPHC</formula>
    <kpi_info>
      <title>UE_SUPPORT_FOR_IPHC (M1001C389)</title>
      <use>The number RRC connection establishments by UEs that support RFC2507 IP header compression. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPPORT_FOR_IPHC)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPPORT_FOR_IPHC (M1001C389)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPPORT_FOR_ROHC">
    <formula>SERVLEV.UE_SUPPORT_FOR_ROHC</formula>
    <kpi_info>
      <title>UE_SUPPORT_FOR_ROHC (M1001C390)</title>
      <use>The number RRC connection establishments by UEs that support RFC3095 (ROHC) IP header compression. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPPORT_FOR_ROHC)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPPORT_FOR_ROHC (M1001C390)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_ACT_FAIL_UE">
    <formula>SERVLEV.RRC_CONN_ACT_FAIL_UE</formula>
    <kpi_info>
      <title>RRC_CONN_ACT_FAIL_UE (M1001C391)</title>
      <use>Number of RRC active failures due to UE. UPDATED:When the RRC connection is released due to the UE not responding to an RRC message or responding with such failure message that the connection must be released. After this, the RNC sends a RANAP: IU RELEASE REQUEST to all involved CNs. (See the section "Failure and abnormal release causes" for more details)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_ACT_FAIL_UE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_ACT_FAIL_UE (M1001C391)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_CS_VOICE_UE">
    <formula>SERVLEV.RAB_ACT_FAIL_CS_VOICE_UE</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_CS_VOICE_UE (M1001C392)</title>
      <use>Number of RAB active failures caused by UE for CS voice. UPDATED:When the RNC receives either RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested because the UE is not responding to an RRC message or the UE is responding with such failure message that the connection must be released, and the RAB type is CS voice. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_CS_VOICE_UE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_CS_VOICE_UE (M1001C392)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_CS_CONV_UE">
    <formula>SERVLEV.RAB_ACT_FAIL_CS_CONV_UE</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_CS_CONV_UE (M1001C393)</title>
      <use>Number of RAB active failures caused by UE for CS data conversational. UPDATED:When the RNC receives either RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested because the UE is not responding to an RRC message or the UE is responding with such failure message that the connection must be released, and the RAB type is CS data conversational. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_CS_CONV_UE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_CS_CONV_UE (M1001C393)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_CS_STREA_UE">
    <formula>SERVLEV.RAB_ACT_FAIL_CS_STREA_UE</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_CS_STREA_UE (M1001C394)</title>
      <use>Number of RAB active failures caused by UE for CS data streaming. UPDATED:When the RNC receives either RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested because the UE is not responding to an RRC message or the UE is responding with such failure message that the connection must be released, and the RAB type is CS data streaming. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_CS_STREA_UE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_CS_STREA_UE (M1001C394)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PS_CONV_UE">
    <formula>SERVLEV.RAB_ACT_FAIL_PS_CONV_UE</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PS_CONV_UE (M1001C395)</title>
      <use>The number of RAB active failures caused by UE for PS conversational. UPDATED: When the RNC receives either RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested because the UE is not responding to an RRC message or the UE is responding with such failure message that the connection must be released, and the RAB type is PS conversational. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PS_CONV_UE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PS_CONV_UE (M1001C395)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PS_STREA_UE">
    <formula>SERVLEV.RAB_ACT_FAIL_PS_STREA_UE</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PS_STREA_UE (M1001C396)</title>
      <use>Number of RAB active failures caused by UE for PS data streaming. UPDATED:When the RNC receives either RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested because the UE is not responding to an RRC message or the UE is responding with such failure message that the connection must be released, and the RAB type is PS data streaming. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PS_STREA_UE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PS_STREA_UE (M1001C396)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PS_INTER_UE">
    <formula>SERVLEV.RAB_ACT_FAIL_PS_INTER_UE</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PS_INTER_UE (M1001C397)</title>
      <use>Number of RAB active failures caused by UE for PS data interactive. UPDATED:When the RNC receives either RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested because the UE is not responding to an RRC message or the UE is responding with such failure message that the connection must be released, and the RAB type is PS data interactive. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PS_INTER_UE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PS_INTER_UE (M1001C397)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PS_BACKG_UE">
    <formula>SERVLEV.RAB_ACT_FAIL_PS_BACKG_UE</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PS_BACKG_UE (M1001C398)</title>
      <use>Number of RAB active failures caused by UE for PS data background. UPDATED:When the RNC receives either RANAP: RAB ASSIGNMENT REQUEST (release RAB) or RANAP: IU RELEASE COMMAND message from the CN, and the RNC has sent IU/RAB RELEASE REQUEST message to the CN before that, and the release is requested because the UE is not responding to an RRC message or the UE is responding with such failure message that the connection must be released, and the RAB type is PS data background. If the CN does not send a release message to the RNC within certain time period, the RAB is released anyway and this counter is updated. (See the section "Failure and abnormal release causes" for more details.)
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PS_BACKG_UE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PS_BACKG_UE (M1001C398)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SPARE_1_SERVICELEVEL">
    <formula>SERVLEV.SPARE_1_SERVICELEVEL</formula>
    <kpi_info>
      <title>SPARE_1_SERVICELEVEL (M1001C399)</title>
      <use>Spare counter for internal use. UPDATED:Spare counter for internal use.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SPARE_1_SERVICELEVEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SPARE_1_SERVICELEVEL (M1001C399)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SPARE_2_SERVICELEVEL">
    <formula>SERVLEV.SPARE_2_SERVICELEVEL</formula>
    <kpi_info>
      <title>SPARE_2_SERVICELEVEL (M1001C400)</title>
      <use>Spare counter for internal use. UPDATED:Spare counter for internal use.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SPARE_2_SERVICELEVEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SPARE_2_SERVICELEVEL (M1001C400)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SPARE_3_SERVICELEVEL">
    <formula>SERVLEV.SPARE_3_SERVICELEVEL</formula>
    <kpi_info>
      <title>SPARE_3_SERVICELEVEL (M1001C401)</title>
      <use>Spare counter for internal use. UPDATED:Spare counter for internal use.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SPARE_3_SERVICELEVEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SPARE_3_SERVICELEVEL (M1001C401)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SPARE_4_SERVICELEVEL">
    <formula>SERVLEV.SPARE_4_SERVICELEVEL</formula>
    <kpi_info>
      <title>SPARE_4_SERVICELEVEL (M1001C402)</title>
      <use>Spare counter for internal use. UPDATED:Spare counter for internal use.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SPARE_4_SERVICELEVEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SPARE_4_SERVICELEVEL (M1001C402)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SPARE_5_SERVICELEVEL">
    <formula>SERVLEV.SPARE_5_SERVICELEVEL</formula>
    <kpi_info>
      <title>SPARE_5_SERVICELEVEL (M1001C403)</title>
      <use>Spare counter for internal use. UPDATED:Spare counter for internal use.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SPARE_5_SERVICELEVEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SPARE_5_SERVICELEVEL (M1001C403)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_STRATUM_REL_IND_4">
    <formula>SERVLEV.ACCESS_STRATUM_REL_IND_4</formula>
    <kpi_info>
      <title>ACCESS_STRATUM_REL_IND_4 (M1001C404)</title>
      <use>The number of RRC connection establishments by UEs with access stratum release indicator release 4. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_STRATUM_REL_IND_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_STRATUM_REL_IND_4 (M1001C404)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_STRATUM_REL_IND_99">
    <formula>SERVLEV.ACCESS_STRATUM_REL_IND_99</formula>
    <kpi_info>
      <title>ACCESS_STRATUM_REL_IND_99 (M1001C405)</title>
      <use>The number of RRC connection establishments by UEs with access stratum release indicator release 99. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_STRATUM_REL_IND_99)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_STRATUM_REL_IND_99 (M1001C405)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPPORT_GSM">
    <formula>SERVLEV.UE_SUPPORT_GSM</formula>
    <kpi_info>
      <title>UE_SUPPORT_GSM (M1001C406)</title>
      <use>The number of RRC connection establishments by UEs that support GSM. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPPORT_GSM)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPPORT_GSM (M1001C406)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPPORT_MULTICARRIER_CDMA">
    <formula>SERVLEV.UE_SUPPORT_MULTICARRIER_CDMA</formula>
    <kpi_info>
      <title>UE_SUPPORT_MULTICARRIER_CDMA (M1001C407)</title>
      <use>The number of RRC connection establishments by UEs that support multi-carrier CDMA. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPPORT_MULTICARRIER_CDMA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPPORT_MULTICARRIER_CDMA (M1001C407)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_RXTX_POSITION_CAPAB_2">
    <formula>SERVLEV.UE_RXTX_POSITION_CAPAB_2</formula>
    <kpi_info>
      <title>UE_RXTX_POSITION_CAPAB_2 (M1001C408)</title>
      <use>The number of RRC connection establishments by UEs that support RX-TX time difference positioning capability type 2. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_RXTX_POSITION_CAPAB_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_RXTX_POSITION_CAPAB_2 (M1001C408)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_COMP_PS_STRE_GUAR_UL">
    <formula>SERVLEV.RAB_STP_COMP_PS_STRE_GUAR_UL</formula>
    <kpi_info>
      <title>RAB_STP_COMP_PS_STRE_GUAR_UL (M1001C409)</title>
      <use>The number of RAB setups completed for PS calls in streaming traffic class with resources reserved according to guaranteed bit rate UL in RAB parameters. UPDATED:When RRC:RADIO BEARER SETUP message is sent to the UE. Not updated if guaranteed bit rate is equal to max bit rate in RAB parameters.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_COMP_PS_STRE_GUAR_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_COMP_PS_STRE_GUAR_UL (M1001C409)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_COMP_PS_STRE_GUAR_DL">
    <formula>SERVLEV.RAB_STP_COMP_PS_STRE_GUAR_DL</formula>
    <kpi_info>
      <title>RAB_STP_COMP_PS_STRE_GUAR_DL (M1001C410)</title>
      <use>The number of RAB setups completed for PS calls in streaming traffic class with resources reserved according to guaranteed bit rate DL in RAB parameters. UPDATED:When RRC:RADIO BEARER SETUP message is sent to the UE. Not updated if guaranteed bit rate is equal to max bit rate in RAB parameters.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_COMP_PS_STRE_GUAR_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_COMP_PS_STRE_GUAR_DL (M1001C410)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_COMP_CS_STRE_GUAR_UL">
    <formula>SERVLEV.RAB_STP_COMP_CS_STRE_GUAR_UL</formula>
    <kpi_info>
      <title>RAB_STP_COMP_CS_STRE_GUAR_UL (M1001C411)</title>
      <use>The number of RAB setups completed for non-transparent CS data calls in streaming traffic class with resources reserved according to guaranteed bit rate UL in RAB parameters. Possible only for CS non-transparent data in streaming class. UPDATED:When RRC:RADIO BEARER SETUP message is sent to the UE. Not updated if guaranteed bit rate is equal to max bit rate in RAB parameters.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_COMP_CS_STRE_GUAR_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_COMP_CS_STRE_GUAR_UL (M1001C411)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_COMP_CS_STRE_GUAR_DL">
    <formula>SERVLEV.RAB_STP_COMP_CS_STRE_GUAR_DL</formula>
    <kpi_info>
      <title>RAB_STP_COMP_CS_STRE_GUAR_DL (M1001C412)</title>
      <use>The number of RAB setups completed for non-transparent CS data calls in streaming traffic class with resources reserved according to guaranteed bit rate DL in RAB parameters. Possible only for CS non-transparent data in streaming class. UPDATED:When RRC:RADIO BEARER SETUP message is sent to the UE. Not updated if guaranteed bit rate is equal to max bit rate in RAB parameters.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_COMP_CS_STRE_GUAR_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_COMP_CS_STRE_GUAR_DL (M1001C412)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_CS_STRE_GUAR_UL">
    <formula>SERVLEV.RAB_ACC_COMP_CS_STRE_GUAR_UL</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_CS_STRE_GUAR_UL (M1001C413)</title>
      <use>The number of RAB access completed for CS streaming calls in case resources for the RAB are allocated according to guaranteed bit rate UL defined in RAB parameters. Possible only for CS non-transparent data in streaming class. UPDATED:When a RAB access is completed and resources for the RAB are allocated according to guaranteed bit rate UL in RAB parameters. Not updated if guaranteed bit rate is equal to max bit rate in RAB parameters.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_CS_STRE_GUAR_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_CS_STRE_GUAR_UL (M1001C413)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_CS_STRE_GUAR_DL">
    <formula>SERVLEV.RAB_ACC_COMP_CS_STRE_GUAR_DL</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_CS_STRE_GUAR_DL (M1001C414)</title>
      <use>The number of RAB access completed for CS streaming calls in case resources for the RAB are allocated according to guaranteed bit rate DL defined in RAB parameters. Possible only for CS non-transparent data in streaming class. UPDATED:When a RAB access is completed and resources for the RAB are allocated according to guaranteed bit rate DL in RAB parameters. Not updated if guaranteed bit rate is equal to max bit rate in RAB parameters.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_CS_STRE_GUAR_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_CS_STRE_GUAR_DL (M1001C414)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_STRE_GUAR_UL">
    <formula>SERVLEV.RAB_ACC_COMP_PS_STRE_GUAR_UL</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_STRE_GUAR_UL (M1001C415)</title>
      <use>The number of RAB access completed for PS streaming calls in case resources for the RAB are allocated according to guaranteed bit rate UL defined in RAB parameters. Possible only for PS RT data in streaming class. UPDATED:When a RAB access is completed and resources for the RAB are allocated according to guaranteed bit rate UL in RAB parameters. Not updated if guaranteed bit rate is equal to max bit rate in RAB parameters.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_STRE_GUAR_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_STRE_GUAR_UL (M1001C415)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_STRE_GUAR_DL">
    <formula>SERVLEV.RAB_ACC_COMP_PS_STRE_GUAR_DL</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_STRE_GUAR_DL (M1001C416)</title>
      <use>The number of RAB access completed for PS streaming calls in case resources for the RAB are allocated according to guaranteed bit rate DL defined in RAB parameters. Possible only for PS RT data in streaming class. UPDATED:When a RAB access is completed and resources for the RAB are allocated according to guaranteed bit rate DL in RAB parameters. Not updated if guaranteed bit rate is equal to max bit rate in RAB parameters.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_STRE_GUAR_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_STRE_GUAR_DL (M1001C416)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_CS_STRE_GUAR_UL">
    <formula>SERVLEV.RAB_ACT_COMP_CS_STRE_GUAR_UL</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_CS_STRE_GUAR_UL (M1001C417)</title>
      <use>The number of RAB active completions for CS streaming calls in case resources for the RAB are reserved according to the guaranteed bit rate in uplink. UPDATED:When the RAB active is completed for the RAB type in question and the resources are reserved according to the guaranteed bit rate in uplink. Not updated if the guaranteed bit rate is equal to the maximum bit rate.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_CS_STRE_GUAR_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_CS_STRE_GUAR_UL (M1001C417)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_CS_STRE_GUAR_DL">
    <formula>SERVLEV.RAB_ACT_COMP_CS_STRE_GUAR_DL</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_CS_STRE_GUAR_DL (M1001C418)</title>
      <use>The number of RAB active completions for CS streaming calls in case resources for the RAB are reserved according to guaranteed bit rate DL defined in RAB parameters . Possible only for CS non-transparent data in streaming class. UPDATED:When the RAB active is completed for the RAB type in question and the resources are reserved according to the guaranteed bit rate in downlink. Not updated if the guaranteed bit rate is equal to the maximum bit rate.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_CS_STRE_GUAR_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_CS_STRE_GUAR_DL (M1001C418)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_STRE_GUAR_UL">
    <formula>SERVLEV.RAB_ACT_COMP_PS_STRE_GUAR_UL</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_STRE_GUAR_UL (M1001C419)</title>
      <use>The number of RAB active completions for PS streaming calls in case resources for the RAB are reserved according to the guaranteed bit rate in uplink. Possible only for PS RT data in streaming class. UPDATED:When the RAB active is completed for the RAB type in question and the resources are reserved according to the guaranteed bit rate in uplink. Not updated if the guaranteed bit rate is equal to the maximum bit rate.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_STRE_GUAR_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_STRE_GUAR_UL (M1001C419)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_STRE_GUAR_DL">
    <formula>SERVLEV.RAB_ACT_COMP_PS_STRE_GUAR_DL</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_STRE_GUAR_DL (M1001C420)</title>
      <use>The number of RAB active completions for PS streaming calls in which resources for the RAB are reserved according to the guaranteed bit rate in downlink. Possible only for PS RT data in streaming class. UPDATED:When the RAB active is completed for the RAB type in question and the resources are reserved according to the guaranteed bit rate in downlink. Not updated if the guaranteed bit rate is equal to the maximum bit rate.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_STRE_GUAR_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_STRE_GUAR_DL (M1001C420)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_ACT_REL_UNSPEC_CN">
    <formula>SERVLEV.RRC_CONN_ACT_REL_UNSPEC_CN</formula>
    <kpi_info>
      <title>RRC_CONN_ACT_REL_UNSPEC_CN (M1001C421)</title>
      <use>The number of RRC connection active releases with "unspecified failure" cause received from CN. Also M1001C12 is updated along with this counter. UPDATED:When a RANAP:IU RELEASE COMMAND message with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_ACT_REL_UNSPEC_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_ACT_REL_UNSPEC_CN (M1001C421)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_V_UNSPE_ER_CN">
    <formula>SERVLEV.RAB_ACT_REL_CS_V_UNSPE_ER_CN</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_V_UNSPE_ER_CN (M1001C422)</title>
      <use>The number of RAB active releases for CS voice calls with "unspecified failure" cause received from CN. Also M1001C136 is updated along with this counter. UPDATED:When a RANAP:IU RELEASE COMMAND or RAB ASSIGNMENT REQUEST message for releasing a RAB with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_V_UNSPE_ER_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_V_UNSPE_ER_CN (M1001C422)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_C_UNSPE_ER_CN">
    <formula>SERVLEV.RAB_ACT_REL_CS_C_UNSPE_ER_CN</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_C_UNSPE_ER_CN (M1001C423)</title>
      <use>The number of RAB active releases for CS conversational calls with "unspecified failure" cause received from CN. Also M1001C137 is updated along with this counter. UPDATED:When a RANAP:IU RELEASE COMMAND or RAB ASSIGNMENT REQUEST message for releasing a RAB with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_C_UNSPE_ER_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_C_UNSPE_ER_CN (M1001C423)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_S_UNSPE_ER_CN">
    <formula>SERVLEV.RAB_ACT_REL_CS_S_UNSPE_ER_CN</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_S_UNSPE_ER_CN (M1001C424)</title>
      <use>The number of RAB active releases for CS streaming calls with "unspecified failure" cause received from CN. Also M1001C138 is updated along with this counter. UPDATED:When a RANAP:IU RELEASE COMMAND or RAB ASSIGNMENT REQUEST message for releasing a RAB with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_S_UNSPE_ER_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_S_UNSPE_ER_CN (M1001C424)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_S_GUL_UNSP_CN">
    <formula>SERVLEV.RAB_ACT_REL_CS_S_GUL_UNSP_CN</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_S_GUL_UNSP_CN (M1001C425)</title>
      <use>The number of RAB active releases for CS streaming class calls with "unspecified failure" cause received from CN in cases where RAB has UL resources according to the guaranteed bit rate UL in RAB parameters. Also M1001C417 is updated along with this counter.UPDATED:When a RANAP:IU RELEASE COMMAND or RAB ASSIGNMENT REQUEST message for releasing a RAB with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_S_GUL_UNSP_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_S_GUL_UNSP_CN (M1001C425)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_S_GDL_UNSP_CN">
    <formula>SERVLEV.RAB_ACT_REL_CS_S_GDL_UNSP_CN</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_S_GDL_UNSP_CN (M1001C426)</title>
      <use>The number of RAB active releases for CS streaming class calls with "unspecified failure" cause received from CN in cases where RAB has DL resources according to the guaranteed bit rate DL in RAB parameters. Also M1001C418 is updated along with this counter.UPDATED:When a RANAP:IU RELEASE COMMAND or RAB ASSIGNMENT REQUEST message for releasing a RAB with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_S_GDL_UNSP_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_S_GDL_UNSP_CN (M1001C426)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_S_GU_UL_SRNC">
    <formula>SERVLEV.RAB_ACT_REL_CS_S_GU_UL_SRNC</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_S_GU_UL_SRNC (M1001C427)</title>
      <use>The number of RAB active releases for CS streaming class calls due to SRNC relocation in case RAB has UL resources according to guaranteed bitrate UL in RAB parameters. NOTE! This counter includes SRNS relocations, inter-RNC intra-frequency hard handovers, inter-RNC inter-frequency hard handovers and inter-system hard handovers.UPDATED:When a CS streaming call is released during the RAB active phase due to SRNC relocation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_S_GU_UL_SRNC)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_S_GU_UL_SRNC (M1001C427)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_S_GU_DL_SRNC">
    <formula>SERVLEV.RAB_ACT_REL_CS_S_GU_DL_SRNC</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_S_GU_DL_SRNC (M1001C428)</title>
      <use>The number of RAB active releases for CS streaming class calls due to SRNC relocation in case RAB has DL resources according to guaranteed bitrate DL in RAB parameters. NOTE! This counter includes SRNS relocations, inter-RNC intra-frequency hard handovers, inter-RNC inter-frequency hard handovers and inter-system hard handovers.UPDATED:When a CS streaming call is released during the RAB active phase due to SRNC relocation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_S_GU_DL_SRNC)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_S_GU_DL_SRNC (M1001C428)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_S_GUL_PRE_EMP">
    <formula>SERVLEV.RAB_ACT_REL_CS_S_GUL_PRE_EMP</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_S_GUL_PRE_EMP (M1001C429)</title>
      <use>The number of RAB active releases for CS streaming calls due to pre-emption when RAB has UL resources reserved according to guaranteed bitrate in uplink. UPDATED:When a CS streaming call is released during the RAB active phase due to pre-emption. Not updated if the guaranteed bitrate is equal to the maximum bitrate.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_S_GUL_PRE_EMP)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_S_GUL_PRE_EMP (M1001C429)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_S_GDL_PRE_EMP">
    <formula>SERVLEV.RAB_ACT_REL_CS_S_GDL_PRE_EMP</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_S_GDL_PRE_EMP (M1001C430)</title>
      <use>The number of RAB active releases for CS streaming calls due to pre-emption when RAB has DL resources reserved according to guaranteed bitrate in downlink. UPDATED:When a CS streaming call is released during the RAB active phase due to pre-emption. Not updated if the guaranteed bitrate is equal to the maximum bitrate.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_S_GDL_PRE_EMP)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_S_GDL_PRE_EMP (M1001C430)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_S_UNSPE_ER_CN">
    <formula>SERVLEV.RAB_ACT_REL_PS_S_UNSPE_ER_CN</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_S_UNSPE_ER_CN (M1001C431)</title>
      <use>The number of RAB active releases for PS streaming class calls with "unspecified failure" cause received from CN. Also M1001C140 is updated along with this counter.UPDATED:When a RANAP:IU RELEASE COMMAND or RAB ASSIGNMENT REQUEST message for releasing a RAB with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_S_UNSPE_ER_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_S_UNSPE_ER_CN (M1001C431)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_I_UNSPE_ER_CN">
    <formula>SERVLEV.RAB_ACT_REL_PS_I_UNSPE_ER_CN</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_I_UNSPE_ER_CN (M1001C432)</title>
      <use>The number of RAB active releases for PS interactive class calls with "unspecified failure" cause received from CN. Also M1001C141 is updated along with this counter. UPDATED:When a RANAP:IU RELEASE COMMAND or RAB ASSIGNMENT REQUEST message for releasing a RAB with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_I_UNSPE_ER_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_I_UNSPE_ER_CN (M1001C432)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_B_UNSPE_ER_CN">
    <formula>SERVLEV.RAB_ACT_REL_PS_B_UNSPE_ER_CN</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_B_UNSPE_ER_CN (M1001C433)</title>
      <use>The number of RAB active releases for PS background class calls with "unspecified failure" cause received from CN. Also M1001C142 is updated along with this counter. UPDATED:When a RANAP:IU RELEASE COMMAND or RAB ASSIGNMENT REQUEST message for releasing a RAB with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_B_UNSPE_ER_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_B_UNSPE_ER_CN (M1001C433)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_S_GUL_UNSP_CN">
    <formula>SERVLEV.RAB_ACT_REL_PS_S_GUL_UNSP_CN</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_S_GUL_UNSP_CN (M1001C434)</title>
      <use>The number of RAB active releases for PS streaming class calls with "unspecified failure" cause received from CN in cases where RAB has UL resources according to the guaranteed bit rate UL in RAB parameters. Also M1001C419 is updated along with this counter. UPDATED:When a RANAP:IU RELEASE COMMAND or RAB ASSIGNMENT REQUEST message for releasing a RAB with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_S_GUL_UNSP_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_S_GUL_UNSP_CN (M1001C434)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_S_GDL_UNSP_CN">
    <formula>SERVLEV.RAB_ACT_REL_PS_S_GDL_UNSP_CN</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_S_GDL_UNSP_CN (M1001C435)</title>
      <use>The number of RAB active releases for PS streaming class calls with "unspecified failure" cause received from CN in case of RAB has DL resources according to the guaranteed bit rate DL in RAB parameters. Also M1001C420 is updated along with this counter. UPDATED:When a RANAP:IU RELEASE COMMAND or RAB ASSIGNMENT REQUEST message for releasing a RAB with cause "unspecified failure" is received from CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_S_GDL_UNSP_CN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_S_GDL_UNSP_CN (M1001C435)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_S_GUL_SRNC">
    <formula>SERVLEV.RAB_ACT_REL_PS_S_GUL_SRNC</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_S_GUL_SRNC (M1001C436)</title>
      <use>The number of RAB active releases for PS streaming class calls due to SRNC relocation in case RAB has UL resources according to guaranteed bit rate UL in RAB parameters. NOTE! This counter includes SRNS relocations, inter-RNC intra-frequency hard handovers, inter-RNC inter-frequency hard handovers and inter-system hard handovers. UPDATED:When a PS streaming call is released during the RAB active phase due to SRNC relocation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_S_GUL_SRNC)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_S_GUL_SRNC (M1001C436)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_S_GDL_SRNC">
    <formula>SERVLEV.RAB_ACT_REL_PS_S_GDL_SRNC</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_S_GDL_SRNC (M1001C437)</title>
      <use>The number of RAB active releases for PS streaming class calls due to SRNC relocation in case RAB has DL resources according to guaranteed bit rate DL in RAB parameters. NOTE! This counter includes SRNS relocations, inter-RNC intra-frequency hard handovers, inter-RNC inter-frequency hard handovers and inter-system hard handovers. UPDATED:When a PS streaming call is released during the RAB active phase due to SRNC relocation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_S_GDL_SRNC)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_S_GDL_SRNC (M1001C437)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_S_GUL_PRE_EMP">
    <formula>SERVLEV.RAB_ACT_REL_PS_S_GUL_PRE_EMP</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_S_GUL_PRE_EMP (M1001C438)</title>
      <use>The number of RAB active releases for PS streaming calls due to pre-emption in case RAB has UL resources according to guaranteed bit rate UL in RAB parameters. UPDATED: When a PS streaming call is released during the RAB active phase due to pre-emption.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_S_GUL_PRE_EMP)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_S_GUL_PRE_EMP (M1001C438)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_S_GDL_PRE_EMP">
    <formula>SERVLEV.RAB_ACT_REL_PS_S_GDL_PRE_EMP</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_S_GDL_PRE_EMP (M1001C439)</title>
      <use>The number of RAB active releases for PS streaming calls due to pre-emption in case RAB has DL resources according to guaranteed bit rate DL in RAB parameters. UPDATED: When a PS streaming call is released during the RAB active phase due to pre-emption.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_S_GDL_PRE_EMP)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_S_GDL_PRE_EMP (M1001C439)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_S_A_CS_12_2_1PSNRT64_384">
    <formula>SERVLEV.RAB_S_A_CS_12_2_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_S_A_CS_12_2_1PSNRT64_384 (M1001C440)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination "CS AMR 12.2 + PS NRT (64/384)" UPDATED:This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_S_A_CS_12_2_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_S_A_CS_12_2_1PSNRT64_384 (M1001C440)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACCC_CS12_2_1PSNRT64_384">
    <formula>SERVLEV.RAB_ACCC_CS12_2_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_ACCC_CS12_2_1PSNRT64_384 (M1001C441)</title>
      <use>The number of RAB access completed for a multi-RAB combination "CSAMR 12.2 + 1PS NRT(64/384)". Updated: This counter is updated when the RNC receives setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends response message to CN indicating that the RAB is successfully established. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACCC_CS12_2_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACCC_CS12_2_1PSNRT64_384 (M1001C441)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACTC_CS12_2_1PSNRT64_384">
    <formula>SERVLEV.RAB_ACTC_CS12_2_1PSNRT64_384</formula>
    <kpi_info>
      <title>RAB_ACTC_CS12_2_1PSNRT64_384 (M1001C442)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination "CS AMR 12.2 + 1 PS NRT (64/384)". Updated: This counter is updated when the first RAB of the Multi-RAB combination in question is completed. Also RAB active releases due to SRNC Relocation,Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACTC_CS12_2_1PSNRT64_384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACTC_CS12_2_1PSNRT64_384 (M1001C442)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_OUT_REF_CELL">
    <formula>SERVLEV.RRC_CONN_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RRC_CONN_OUT_REF_CELL (M1001C443)</title>
      <use>The number of RRC Connections that have left from the old reference cell. Updated: When the RRC connection leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_OUT_REF_CELL (M1001C443)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_VOICE_OUT_REF_CELL">
    <formula>SERVLEV.RAB_CS_VOICE_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_VOICE_OUT_REF_CELL (M1001C444)</title>
      <use>The number of RAB CS voice connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_VOICE_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_VOICE_OUT_REF_CELL (M1001C444)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_CONV_OUT_REF_CELL">
    <formula>SERVLEV.RAB_CS_CONV_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_CONV_OUT_REF_CELL (M1001C445)</title>
      <use>The number of RAB CS data connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_CONV_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_CONV_OUT_REF_CELL (M1001C445)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_STR_OUT_REF_CELL">
    <formula>SERVLEV.RAB_CS_STR_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_STR_OUT_REF_CELL (M1001C446)</title>
      <use>The number of RAB CS streaming connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_STR_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_STR_OUT_REF_CELL (M1001C446)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_CONV_OUT_REF_CELL">
    <formula>SERVLEV.RAB_PS_CONV_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_PS_CONV_OUT_REF_CELL (M1001C447)</title>
      <use>The number of RAB PS conversational connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_CONV_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_CONV_OUT_REF_CELL (M1001C447)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_STR_OUT_REF_CELL">
    <formula>SERVLEV.RAB_PS_STR_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_PS_STR_OUT_REF_CELL (M1001C448)</title>
      <use>The number of RAB PS streaming connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_STR_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_STR_OUT_REF_CELL (M1001C448)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_INTR_OUT_REF_CELL">
    <formula>SERVLEV.RAB_PS_INTR_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_PS_INTR_OUT_REF_CELL (M1001C449)</title>
      <use>The number of RAB PS interactive connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_INTR_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_INTR_OUT_REF_CELL (M1001C449)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_BGR_OUT_REF_CELL">
    <formula>SERVLEV.RAB_PS_BGR_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_PS_BGR_OUT_REF_CELL (M1001C450)</title>
      <use>The number of RAB PS background connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_BGR_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_BGR_OUT_REF_CELL (M1001C450)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_AMR122_OUT_REF_CELL">
    <formula>SERVLEV.RAB_CS_AMR122_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_AMR122_OUT_REF_CELL (M1001C451)</title>
      <use>The number of RAB CS AMR 12.2 kbit/s connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_AMR122_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_AMR122_OUT_REF_CELL (M1001C451)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_CONV_64_OUT_REF_CELL">
    <formula>SERVLEV.RAB_CS_CONV_64_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_CONV_64_OUT_REF_CELL (M1001C452)</title>
      <use>The number of RAB CS data conversational 64 kbit/s connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_CONV_64_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_CONV_64_OUT_REF_CELL (M1001C452)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_STR_144_OUT_REF_CELL">
    <formula>SERVLEV.RAB_CS_STR_144_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_STR_144_OUT_REF_CELL (M1001C453)</title>
      <use>The number of RAB CS data streaming 14.4 kbit/s connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_STR_144_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_STR_144_OUT_REF_CELL (M1001C453)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_STR_576_OUT_REF_CELL">
    <formula>SERVLEV.RAB_CS_STR_576_OUT_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_STR_576_OUT_REF_CELL (M1001C454)</title>
      <use>The number of RAB CS data streaming 57.6 kbit/s connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_STR_576_OUT_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_STR_576_OUT_REF_CELL (M1001C454)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="PS_STR_1664_G_1664_OUT_REF_C">
    <formula>SERVLEV.PS_STR_1664_G_1664_OUT_REF_C</formula>
    <kpi_info>
      <title>PS_STR_1664_G_1664_OUT_REF_C (M1001C455)</title>
      <use>The number of RAB CS data streaming with maximum and guaranteed bitrates 16 kbit/s for uplink and 64 kbit/s for downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(PS_STR_1664_G_1664_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>PS_STR_1664_G_1664_OUT_REF_C (M1001C455)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="PS_STR_1664_G_832_OUT_REF_C">
    <formula>SERVLEV.PS_STR_1664_G_832_OUT_REF_C</formula>
    <kpi_info>
      <title>PS_STR_1664_G_832_OUT_REF_C (M1001C456)</title>
      <use>The number of RAB CS data streaming with maximum and guaranteed bitrates 16 kbit/s for uplink and 64 kbit/s for downlink and guaranteed bitrates 8 kbit/s for uplink and 32 kbit/s for downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(PS_STR_1664_G_832_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>PS_STR_1664_G_832_OUT_REF_C (M1001C456)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_6464_OUT_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_6464_OUT_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_6464_OUT_REF_C (M1001C457)</title>
      <use>The number of RAB PS NRT 64 kbit/s uplink and 64 kbit/s downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_6464_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_6464_OUT_REF_C (M1001C457)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_64128_OUT_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_64128_OUT_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_64128_OUT_REF_C (M1001C458)</title>
      <use>The number of RAB PS NRT 64 kbit/s uplink and 128 kbit/s downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_64128_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_64128_OUT_REF_C (M1001C458)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_64256_OUT_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_64256_OUT_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_64256_OUT_REF_C (M1001C459)</title>
      <use>The number of RAB PS NRT 64 kbit/s uplink and 256 kbit/s downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_64256_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_64256_OUT_REF_C (M1001C459)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_64384_OUT_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_64384_OUT_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_64384_OUT_REF_C (M1001C460)</title>
      <use>The number of RAB PS NRT 64 kbit/s uplink and 384 kbit/s downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_64384_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_64384_OUT_REF_C (M1001C460)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_12864_OUT_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_12864_OUT_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_12864_OUT_REF_C (M1001C461)</title>
      <use>The number of RAB PS NRT 128 kbit/s uplink and 64 kbit/s downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_12864_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_12864_OUT_REF_C (M1001C461)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_128128_OUT_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_128128_OUT_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_128128_OUT_REF_C (M1001C462)</title>
      <use>The number of RAB PS NRT 128 kbit/s uplink and 128 kbit/s downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_128128_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_128128_OUT_REF_C (M1001C462)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_128384_OUT_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_128384_OUT_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_128384_OUT_REF_C (M1001C463)</title>
      <use>The number of RAB PS NRT 128 kbit/s uplink and 384 kbit/s downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_128384_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_128384_OUT_REF_C (M1001C463)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_384384_OUT_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_384384_OUT_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_384384_OUT_REF_C (M1001C464)</title>
      <use>The number of RAB PS NRT 384 kbit/s uplink and 384 kbit/s downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_384384_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_384384_OUT_REF_C (M1001C464)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_38464_OUT_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_38464_OUT_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_38464_OUT_REF_C (M1001C465)</title>
      <use>The number of RAB PS NRT 384 kbit/s uplink and 64 kbit/s downlink connections that have left from the old reference cell. Updated: When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_38464_OUT_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_38464_OUT_REF_C (M1001C465)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_IN_REF_CELL">
    <formula>SERVLEV.RRC_CONN_IN_REF_CELL</formula>
    <kpi_info>
      <title>RRC_CONN_IN_REF_CELL (M1001C466)</title>
      <use>The number of RRC Connections that enter a new reference cell. Updated: When the RRC connection enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_IN_REF_CELL (M1001C466)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_VOICE_IN_REF_CELL">
    <formula>SERVLEV.RAB_CS_VOICE_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_VOICE_IN_REF_CELL (M1001C467)</title>
      <use>The number of RAB CS voice connections that enter a new reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_VOICE_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_VOICE_IN_REF_CELL (M1001C467)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_CONV_IN_REF_CELL">
    <formula>SERVLEV.RAB_CS_CONV_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_CONV_IN_REF_CELL (M1001C468)</title>
      <use>The number of RAB CS data connections that enter a new reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_CONV_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_CONV_IN_REF_CELL (M1001C468)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_STR_IN_REF_CELL">
    <formula>SERVLEV.RAB_CS_STR_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_STR_IN_REF_CELL (M1001C469)</title>
      <use>The number of RAB CS streaming connections that enter a new reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_STR_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_STR_IN_REF_CELL (M1001C469)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_CONV_IN_REF_CELL">
    <formula>SERVLEV.RAB_PS_CONV_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_PS_CONV_IN_REF_CELL (M1001C470)</title>
      <use>The number of RAB PS conversational connections that enter a new reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_CONV_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_CONV_IN_REF_CELL (M1001C470)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_STR_IN_REF_CELL">
    <formula>SERVLEV.RAB_PS_STR_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_PS_STR_IN_REF_CELL (M1001C471)</title>
      <use>The number of RAB PS streaming connections+E4 reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_STR_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_STR_IN_REF_CELL (M1001C471)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_INTR_IN_REF_CELL">
    <formula>SERVLEV.RAB_PS_INTR_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_PS_INTR_IN_REF_CELL (M1001C472)</title>
      <use>The number of RAB PS interactive connections that enter a new reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_INTR_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_INTR_IN_REF_CELL (M1001C472)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_BGR_IN_REF_CELL">
    <formula>SERVLEV.RAB_PS_BGR_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_PS_BGR_IN_REF_CELL (M1001C473)</title>
      <use>The number of RAB PS background connections that enter a new reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_BGR_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_BGR_IN_REF_CELL (M1001C473)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_AMR122_IN_REF_CELL">
    <formula>SERVLEV.RAB_CS_AMR122_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_AMR122_IN_REF_CELL (M1001C474)</title>
      <use>The number of RAB CS AMR 12.2 kbit/s connections that enter a new reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_AMR122_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_AMR122_IN_REF_CELL (M1001C474)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_CONV_64_IN_REF_CELL">
    <formula>SERVLEV.RAB_CS_CONV_64_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_CONV_64_IN_REF_CELL (M1001C475)</title>
      <use>The number of RAB CS data conversational 64 kbit/s connections that enter a new reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_CONV_64_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_CONV_64_IN_REF_CELL (M1001C475)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_STR_144_IN_REF_CELL">
    <formula>SERVLEV.RAB_CS_STR_144_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_STR_144_IN_REF_CELL (M1001C476)</title>
      <use>The number of RAB CS data streaming 14.4 kbit/s connections that enter a new reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_STR_144_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_STR_144_IN_REF_CELL (M1001C476)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_STR_576_IN_REF_CELL">
    <formula>SERVLEV.RAB_CS_STR_576_IN_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_STR_576_IN_REF_CELL (M1001C477)</title>
      <use>The number of RAB CS data streaming 57.6 kbit/s connections that enter a new reference cell. UPDATED: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_STR_576_IN_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_STR_576_IN_REF_CELL (M1001C477)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="PS_STR_1664_G_1664_IN_REF_C">
    <formula>SERVLEV.PS_STR_1664_G_1664_IN_REF_C</formula>
    <kpi_info>
      <title>PS_STR_1664_G_1664_IN_REF_C (M1001C478)</title>
      <use>The number of RAB CS data streaming with maximum and guaranteed bitrates 16 kbit/s for uplink and 64 kbit/s for downlink connections that enter a new reference cell. Updated: When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(PS_STR_1664_G_1664_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>PS_STR_1664_G_1664_IN_REF_C (M1001C478)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="PS_STR_1664_G_832_IN_REF_C">
    <formula>SERVLEV.PS_STR_1664_G_832_IN_REF_C</formula>
    <kpi_info>
      <title>PS_STR_1664_G_832_IN_REF_C (M1001C479)</title>
      <use>The number of RAB CS data streaming with maximum bit rates 16 kbit/s for uplink and 64 kbit/s for downlink and guaranteed bitrates 8 kbit/s for uplink and 32 kbit/s for downlink connections that enter a new reference cell. UPDATED:When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(PS_STR_1664_G_832_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>PS_STR_1664_G_832_IN_REF_C (M1001C479)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_6464_IN_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_6464_IN_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_6464_IN_REF_C (M1001C480)</title>
      <use>The number of RAB PS NRT 64 kbit/s uplink and 64 kbit/s downlink connections that enter a new reference cell. UPDATED:When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_6464_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_6464_IN_REF_C (M1001C480)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_64128_IN_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_64128_IN_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_64128_IN_REF_C (M1001C481)</title>
      <use>The number of RAB PS NRT 64 kbit/s uplink and 128 kbit/s downlink connections that enter a new reference cell. UPDATED:When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_64128_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_64128_IN_REF_C (M1001C481)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_64256_IN_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_64256_IN_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_64256_IN_REF_C (M1001C482)</title>
      <use>The number of RAB PS NRT 64 kbit/s uplink and 256 kbit/s downlink connections that enter a new reference cell. UPDATED:When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_64256_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_64256_IN_REF_C (M1001C482)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_64384_IN_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_64384_IN_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_64384_IN_REF_C (M1001C483)</title>
      <use>The number of RAB PS NRT 64 kbit/s uplink and 384 kbit/s downlink connections that enter a new reference cell. UPDATED:When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_64384_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_64384_IN_REF_C (M1001C483)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_12864_IN_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_12864_IN_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_12864_IN_REF_C (M1001C484)</title>
      <use>The number of RAB PS NRT 128 kbit/s uplink and 64 kbit/s downlink connections that enter a new reference cell. UPDATED:When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_12864_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_12864_IN_REF_C (M1001C484)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_128128_IN_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_128128_IN_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_128128_IN_REF_C (M1001C485)</title>
      <use>The number of RAB PS NRT 128 kbit/s uplink and 128 kbit/s downlink connections that enter a new reference cell. UPDATED:When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_128128_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_128128_IN_REF_C (M1001C485)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_128384_IN_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_128384_IN_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_128384_IN_REF_C (M1001C486)</title>
      <use>The number of RAB PS NRT 128 kbit/s uplink and 384 kbit/s downlink connections that enter a new reference cell. UPDATED:When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_128384_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_128384_IN_REF_C (M1001C486)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_384384_IN_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_384384_IN_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_384384_IN_REF_C (M1001C487)</title>
      <use>The number of RAB PS NRT 384 kbit/s uplink and 384 kbit/s downlink connections that enter a new reference cell. UPDATED:When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_384384_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_384384_IN_REF_C (M1001C487)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_PS_NRT_38464_IN_REF_C">
    <formula>SERVLEV.RAB_PS_NRT_38464_IN_REF_C</formula>
    <kpi_info>
      <title>RAB_PS_NRT_38464_IN_REF_C (M1001C488)</title>
      <use>The number of RAB PS NRT 384 kbit/s uplink and 64 kbit/s downlink connections that enter a new reference cell. UPDATED:When the RAB type in question enters a new reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_PS_NRT_38464_IN_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_PS_NRT_38464_IN_REF_C (M1001C488)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_V_HLD_TM_REF_CELL">
    <formula>SERVLEV.RAB_CS_V_HLD_TM_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_V_HLD_TM_REF_CELL (M1001C489)</title>
      <use>The RAB holding time in reference cell for CS voice calls. This counter divided by the Denominator for RAB holding time in reference cell for CS voice calls gives an average holding time for the call type in question. UPDATED:When the RAB type in question leaves the reference cell or RAB is released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_V_HLD_TM_REF_CELL)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_V_HLD_TM_REF_CELL (M1001C489)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_CS_V_HLD_TM_REF_CELL">
    <formula>SERVLEV.DENOM_CS_V_HLD_TM_REF_CELL</formula>
    <kpi_info>
      <title>DENOM_CS_V_HLD_TM_REF_CELL (M1001C490)</title>
      <use>The Denominator for RAB holding time in reference cell for CS voice calls. UPDATED:When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_CS_V_HLD_TM_REF_CELL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_CS_V_HLD_TM_REF_CELL (M1001C490)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_CONV_HLD_TM_REF_CELL">
    <formula>SERVLEV.RAB_CS_CONV_HLD_TM_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_CONV_HLD_TM_REF_CELL (M1001C491)</title>
      <use>The RAB holding time in reference cell for CS conversational class calls. This counter divided by the Denominator for RAB holding time in reference cell for CS voice calls gives an average holding time for the call type in question. UPDATED:When the RAB type in question leaves the reference cell or RAB is released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_CONV_HLD_TM_REF_CELL)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_CONV_HLD_TM_REF_CELL (M1001C491)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_CS_CONV_HLD_TM_REF_C">
    <formula>SERVLEV.DENOM_CS_CONV_HLD_TM_REF_C</formula>
    <kpi_info>
      <title>DENOM_CS_CONV_HLD_TM_REF_C (M1001C492)</title>
      <use>The Denominator for RAB holding time in reference cell for CS conversational class calls. UPDATED:When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_CS_CONV_HLD_TM_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_CS_CONV_HLD_TM_REF_C (M1001C492)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_STR_HLD_TM_REF_CELL">
    <formula>SERVLEV.RAB_CS_STR_HLD_TM_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_STR_HLD_TM_REF_CELL (M1001C493)</title>
      <use>The RAB holding time in reference cell for CS streaming class calls. This counter divided by the Denominator for RAB holding time in reference cell for CS streaming class calls gives an average holding time for the call type in question. UPDATED:When the RAB type in question leaves the reference cell or RAB is released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_STR_HLD_TM_REF_CELL)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_STR_HLD_TM_REF_CELL (M1001C493)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_CS_STR_HLD_TM_REF_C">
    <formula>SERVLEV.DENOM_CS_STR_HLD_TM_REF_C</formula>
    <kpi_info>
      <title>DENOM_CS_STR_HLD_TM_REF_C (M1001C494)</title>
      <use>The Denominator for RAB holding time in reference cell for CS streaming class calls. UPDATED:When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_CS_STR_HLD_TM_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_CS_STR_HLD_TM_REF_C (M1001C494)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_AMR122_HLD_TM_REF_CELL">
    <formula>SERVLEV.RAB_AMR122_HLD_TM_REF_CELL</formula>
    <kpi_info>
      <title>RAB_AMR122_HLD_TM_REF_CELL (M1001C495)</title>
      <use>RAB holding time in reference cell for AMR 12.2 kbit/s calls gives an average holding time for the call type in question. UPDATED:When the RAB type in question leaves the reference cell or RAB is released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_AMR122_HLD_TM_REF_CELL)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_AMR122_HLD_TM_REF_CELL (M1001C495)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_AMR122_HLD_TM_REF_C">
    <formula>SERVLEV.DENOM_AMR122_HLD_TM_REF_C</formula>
    <kpi_info>
      <title>DENOM_AMR122_HLD_TM_REF_C (M1001C496)</title>
      <use>The Denominator for RAB holding time in reference cell for AMR 12.2 kbit/s calls. UPDATED:When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_AMR122_HLD_TM_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_AMR122_HLD_TM_REF_C (M1001C496)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_CONV64_TM_REF_CELL">
    <formula>SERVLEV.RAB_CS_CONV64_TM_REF_CELL</formula>
    <kpi_info>
      <title>RAB_CS_CONV64_TM_REF_CELL (M1001C497)</title>
      <use>The RAB holding time in reference cell for CS conversational class 64 kbit/s calls. This counter divided by the Denominator for RAB holding time in reference cell for CS conversational class 64 kbit/s calls gives an average holding time for the call type in question. UPDATED:When the RAB type in question leaves the reference cell or RAB is released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_CONV64_TM_REF_CELL)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_CONV64_TM_REF_CELL (M1001C497)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_CS_CONV64_HLD_TM_REF_C">
    <formula>SERVLEV.DENOM_CS_CONV64_HLD_TM_REF_C</formula>
    <kpi_info>
      <title>DENOM_CS_CONV64_HLD_TM_REF_C (M1001C498)</title>
      <use>The Denominator for RAB holding time in reference cell for CS conversational class 64 kbit/s calls. UPDATED:When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_CS_CONV64_HLD_TM_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_CS_CONV64_HLD_TM_REF_C (M1001C498)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_STR144_HLD_TM_REF_C">
    <formula>SERVLEV.RAB_CS_STR144_HLD_TM_REF_C</formula>
    <kpi_info>
      <title>RAB_CS_STR144_HLD_TM_REF_C (M1001C499)</title>
      <use>The RAB holding time in reference cell for CS streaming class 14.4 kbit/s calls. This counter divided by the Denominator for RAB holding time in reference cell for CS streaming class 14.4 kbit/s calls gives an average holding time for the call type in question. UPDATED:When the RAB type in question leaves the reference cell or RAB is released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_STR144_HLD_TM_REF_C)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_STR144_HLD_TM_REF_C (M1001C499)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_CS_STR144_HLD_TM_REF_C">
    <formula>SERVLEV.DENOM_CS_STR144_HLD_TM_REF_C</formula>
    <kpi_info>
      <title>DENOM_CS_STR144_HLD_TM_REF_C (M1001C500)</title>
      <use>The Denominator for RAB holding time in reference cell for CS streaming class 14.4 kbit/s calls. UPDATED:When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_CS_STR144_HLD_TM_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_CS_STR144_HLD_TM_REF_C (M1001C500)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_CS_STR576_HLD_TM_REF_C">
    <formula>SERVLEV.RAB_CS_STR576_HLD_TM_REF_C</formula>
    <kpi_info>
      <title>RAB_CS_STR576_HLD_TM_REF_C (M1001C501)</title>
      <use>The RAB holding time in reference cell for CS streaming class 57.6 kbit/s calls. This counter divided by the Denominator for RAB holding time in reference cell for CS streaming class 57.6 kbit/s calls gives an average holding time for the call type in question. UPDATED:When the RAB type in question leaves the reference cell or RAB is released.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_CS_STR576_HLD_TM_REF_C)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_CS_STR576_HLD_TM_REF_C (M1001C501)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_CS_STR576_HLD_TM_REF_C">
    <formula>SERVLEV.DENOM_CS_STR576_HLD_TM_REF_C</formula>
    <kpi_info>
      <title>DENOM_CS_STR576_HLD_TM_REF_C (M1001C502)</title>
      <use>The Denominator for RAB holding time in reference cell for CS streaming class 57.6 kbit/s calls. UPDATED:When the RAB type in question leaves the old reference cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_CS_STR576_HLD_TM_REF_C)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_CS_STR576_HLD_TM_REF_C (M1001C502)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMR122_PSNRT6464">
    <formula>SERVLEV.RAB_FAIL_AMR122_PSNRT6464</formula>
    <kpi_info>
      <title>RAB_FAIL_AMR122_PSNRT6464 (M1001C503)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR 12.2 kbit/s + PS NRT 64 kbit/s uplink and 64 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMR122_PSNRT6464)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMR122_PSNRT6464 (M1001C503)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMR122_PSNRT64128">
    <formula>SERVLEV.RAB_FAIL_AMR122_PSNRT64128</formula>
    <kpi_info>
      <title>RAB_FAIL_AMR122_PSNRT64128 (M1001C504)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR 12.2 kbit/s + PS NRT 64 kbit/s uplink and 128 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMR122_PSNRT64128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMR122_PSNRT64128 (M1001C504)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMR122_PSNRT64384">
    <formula>SERVLEV.RAB_FAIL_AMR122_PSNRT64384</formula>
    <kpi_info>
      <title>RAB_FAIL_AMR122_PSNRT64384 (M1001C505)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR 12.2 kbit/s + PS NRT 64 kbit/s uplink and 384 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMR122_PSNRT64384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMR122_PSNRT64384 (M1001C505)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMR122_2PSNRTI">
    <formula>SERVLEV.RAB_FAIL_AMR122_2PSNRTI</formula>
    <kpi_info>
      <title>RAB_FAIL_AMR122_2PSNRTI (M1001C506)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR 12.2 kbit/s + 2 PS NRT interactive class. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMR122_2PSNRTI)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMR122_2PSNRTI (M1001C506)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMR122_PSNRT_I_B">
    <formula>SERVLEV.RAB_FAIL_AMR122_PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_FAIL_AMR122_PSNRT_I_B (M1001C507)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR 12.2 kbit/s + 1 PS NRT interactive class + 1 PS NRT background class. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMR122_PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMR122_PSNRT_I_B (M1001C507)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMR122_2PSNRTB">
    <formula>SERVLEV.RAB_FAIL_AMR122_2PSNRTB</formula>
    <kpi_info>
      <title>RAB_FAIL_AMR122_2PSNRTB (M1001C508)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR 12.2 kbit/s + 2 PS NRT background class. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMR122_2PSNRTB)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMR122_2PSNRTB (M1001C508)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMR122_3PSNRT">
    <formula>SERVLEV.RAB_FAIL_AMR122_3PSNRT</formula>
    <kpi_info>
      <title>RAB_FAIL_AMR122_3PSNRT (M1001C509)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR 12.2 kbit/s + 3 PS NRT. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMR122_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMR122_3PSNRT (M1001C509)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMRMM_PSNRT6464">
    <formula>SERVLEV.RAB_FAIL_AMRMM_PSNRT6464</formula>
    <kpi_info>
      <title>RAB_FAIL_AMRMM_PSNRT6464 (M1001C510)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR Multimode + PS NRT 64 kbit/s uplink and 64 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMRMM_PSNRT6464)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMRMM_PSNRT6464 (M1001C510)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMRMM_PSNRT64128">
    <formula>SERVLEV.RAB_FAIL_AMRMM_PSNRT64128</formula>
    <kpi_info>
      <title>RAB_FAIL_AMRMM_PSNRT64128 (M1001C511)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR Multimode + PS NRT 64 kbit/s uplink and 128 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMRMM_PSNRT64128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMRMM_PSNRT64128 (M1001C511)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMRMM_PSNRT64384">
    <formula>SERVLEV.RAB_FAIL_AMRMM_PSNRT64384</formula>
    <kpi_info>
      <title>RAB_FAIL_AMRMM_PSNRT64384 (M1001C512)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR Multimode + PS NRT 64 kbit/s uplink and 384 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMRMM_PSNRT64384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMRMM_PSNRT64384 (M1001C512)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMRMM_2PSNRTI">
    <formula>SERVLEV.RAB_FAIL_AMRMM_2PSNRTI</formula>
    <kpi_info>
      <title>RAB_FAIL_AMRMM_2PSNRTI (M1001C513)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR Multimode + 2 PS NRT interactive class. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMRMM_2PSNRTI)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMRMM_2PSNRTI (M1001C513)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMRMM_PSNRT_I_B">
    <formula>SERVLEV.RAB_FAIL_AMRMM_PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_FAIL_AMRMM_PSNRT_I_B (M1001C514)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR Multimode + 1 PS NRT interactive class + 1 PS NRT background class. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMRMM_PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMRMM_PSNRT_I_B (M1001C514)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMRMM_2PSNRTB">
    <formula>SERVLEV.RAB_FAIL_AMRMM_2PSNRTB</formula>
    <kpi_info>
      <title>RAB_FAIL_AMRMM_2PSNRTB (M1001C515)</title>
      <use>The number of RAB active failures for multi RAB combination CS AMR Multimode + 2 PS NRT background class. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMRMM_2PSNRTB)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMRMM_2PSNRTB (M1001C515)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_AMRMM_3PSNRT">
    <formula>SERVLEV.RAB_FAIL_AMRMM_3PSNRT</formula>
    <kpi_info>
      <title>RAB_FAIL_AMRMM_3PSNRT (M1001C516)</title>
      <use>The number of RAB active failures for multi RAB combination AMR Multimode + 3 PS NRT. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_AMRMM_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_AMRMM_3PSNRT (M1001C516)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_CSCONV_PSNRT6464">
    <formula>SERVLEV.RAB_FAIL_CSCONV_PSNRT6464</formula>
    <kpi_info>
      <title>RAB_FAIL_CSCONV_PSNRT6464 (M1001C517)</title>
      <use>The number of RAB active failures for multi RAB combination CS conversational class + PS NRT 64 kbit/s uplink and 64 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_CSCONV_PSNRT6464)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_CSCONV_PSNRT6464 (M1001C517)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_CSCONV_PSNRT64128">
    <formula>SERVLEV.RAB_FAIL_CSCONV_PSNRT64128</formula>
    <kpi_info>
      <title>RAB_FAIL_CSCONV_PSNRT64128 (M1001C518)</title>
      <use>The number of RAB active failures for multi RAB combination CS conversational class + PS NRT 64 kbit/s uplink and 128 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_CSCONV_PSNRT64128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_CSCONV_PSNRT64128 (M1001C518)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_CSCONV_PSNRT64384">
    <formula>SERVLEV.RAB_FAIL_CSCONV_PSNRT64384</formula>
    <kpi_info>
      <title>RAB_FAIL_CSCONV_PSNRT64384 (M1001C519)</title>
      <use>The number of RAB active failures for multi RAB combination CS conversational class + PS NRT 64 kbit/s uplink and 384 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_CSCONV_PSNRT64384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_CSCONV_PSNRT64384 (M1001C519)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_PSS_GEM_PSNRT6464">
    <formula>SERVLEV.RAB_FAIL_PSS_GEM_PSNRT6464</formula>
    <kpi_info>
      <title>RAB_FAIL_PSS_GEM_PSNRT6464 (M1001C520)</title>
      <use>The number of RAB active failures for multi RAB combination PS streaming class in which the guaranteed bit rate equals the maximum bitrate + PS NRT 64 kbit/s uplink and 64 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_PSS_GEM_PSNRT6464)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_PSS_GEM_PSNRT6464 (M1001C520)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_PSS_GEM_PSNRT64128">
    <formula>SERVLEV.RAB_FAIL_PSS_GEM_PSNRT64128</formula>
    <kpi_info>
      <title>RAB_FAIL_PSS_GEM_PSNRT64128 (M1001C521)</title>
      <use>The number of RAB active failures for multi RAB combination PS streaming class in which the guaranteed bit rate equals the maximum bitrate + PS NRT 64 kbit/s uplink and 128 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_PSS_GEM_PSNRT64128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_PSS_GEM_PSNRT64128 (M1001C521)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_PSS_GEM_PSNRT64384">
    <formula>SERVLEV.RAB_FAIL_PSS_GEM_PSNRT64384</formula>
    <kpi_info>
      <title>RAB_FAIL_PSS_GEM_PSNRT64384 (M1001C522)</title>
      <use>The number of RAB active failures for multi RAB combination PS streaming class in which the guaranteed bit rate equals the maximum bitrate + PS NRT 64 kbit/s uplink and 384 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_PSS_GEM_PSNRT64384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_PSS_GEM_PSNRT64384 (M1001C522)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_PSS_GLM_PSNRT6464">
    <formula>SERVLEV.RAB_FAIL_PSS_GLM_PSNRT6464</formula>
    <kpi_info>
      <title>RAB_FAIL_PSS_GLM_PSNRT6464 (M1001C523)</title>
      <use>The number of RAB active failures for multi RAB combination PS streaming class in which the guaranteed bit rate is less than the maximum bitrate + PS NRT 64 kbit/s uplink and 64 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_PSS_GLM_PSNRT6464)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_PSS_GLM_PSNRT6464 (M1001C523)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_PSS_GLM_PSNRT64128">
    <formula>SERVLEV.RAB_FAIL_PSS_GLM_PSNRT64128</formula>
    <kpi_info>
      <title>RAB_FAIL_PSS_GLM_PSNRT64128 (M1001C524)</title>
      <use>The number of RAB active failures for multi RAB combination PS streaming class in which the guaranteed bit rate is less than the maximum bitrate + PS NRT 64 kbit/s uplink and 128 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_PSS_GLM_PSNRT64128)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_PSS_GLM_PSNRT64128 (M1001C524)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_FAIL_PSS_GLM_PSNRT64384">
    <formula>SERVLEV.RAB_FAIL_PSS_GLM_PSNRT64384</formula>
    <kpi_info>
      <title>RAB_FAIL_PSS_GLM_PSNRT64384 (M1001C525)</title>
      <use>The number of RAB active failures for multi RAB combination PS streaming class in which the guaranteed bit rate is less than the maximum bitrate + PS NRT 64 kbit/s uplink and 384 kbit/s downlink. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_FAIL_PSS_GLM_PSNRT64384)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_FAIL_PSS_GLM_PSNRT64384 (M1001C525)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_2PSNRTI">
    <formula>SERVLEV.RAB_ACT_FAIL_2PSNRTI</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_2PSNRTI (M1001C526)</title>
      <use>The number of RAB active failures for multi RAB combination 2 PS NRT interactive class. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_2PSNRTI)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_2PSNRTI (M1001C526)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PSNRT_I_B">
    <formula>SERVLEV.RAB_ACT_FAIL_PSNRT_I_B</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PSNRT_I_B (M1001C527)</title>
      <use>The number of RAB active failures for multi RAB combination 1 PS NRT interactive class + 1 PS NRT background class. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PSNRT_I_B)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PSNRT_I_B (M1001C527)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_2PSNRTB">
    <formula>SERVLEV.RAB_ACT_FAIL_2PSNRTB</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_2PSNRTB (M1001C528)</title>
      <use>The number of RAB active failures for multi RAB combination 2 PS NRT background class. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_2PSNRTB)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_2PSNRTB (M1001C528)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_3PSNRT">
    <formula>SERVLEV.RAB_ACT_FAIL_3PSNRT</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_3PSNRT (M1001C529)</title>
      <use>The number of RAB active failures for multi RAB combination 3 PS NRT. UPDATED:When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_3PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_3PSNRT (M1001C529)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_STP_FAIL_IUB_AAL2">
    <formula>SERVLEV.RRC_CONN_STP_FAIL_IUB_AAL2</formula>
    <kpi_info>
      <title>RRC_CONN_STP_FAIL_IUB_AAL2 (M1001C530)</title>
      <use>The number of RRC setup failures caused by Iub AAL2 transport resource shortage. UPDATED:When the RNC decides to reject the RRC connection request due to Iub transport resource shortage between RNC and WBTS. After this the RNC sends an RRC: RRC CONNECTION REJECT message to the UE. (For more information, see the section "Failure and abnormal release causes".) Note that from RN5.0 onwards this counter does not include incoming relocation and hard handover failures.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_STP_FAIL_IUB_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_STP_FAIL_IUB_AAL2 (M1001C530)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_V_IUB_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_CS_V_IUB_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_V_IUB_AAL2 (M1001C531)</title>
      <use>The number of RAB setup failures caused by Iub AAL2 transport resource shortage for CS voice. UPDATED:When the RNC decides to reject the CS voice RAB request due to Iub transport resource shortage between RNC and WBTS. This happens before the RRC: RADIO BEARER SETUP message is sent to the UE. (For more information, see the section "Failure and abnormal release causes".)
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_V_IUB_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_V_IUB_AAL2 (M1001C531)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_CO_IUB_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_CS_CO_IUB_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_CO_IUB_AAL2 (M1001C532)</title>
      <use>The number of RAB setup failures caused by Iub AAL2 transport resource shortage for CS data conversational. UPDATED:When the RNC decides to reject the CS data conversational RAB request due to Iub transport resource shortage between RNC and WBTS. This happens before the RRC: RADIO BEARER SETUP message is sent to the UE. (For more information, see the section "Failure and abnormal release causes".)
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_CO_IUB_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_CO_IUB_AAL2 (M1001C532)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_ST_IUB_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_CS_ST_IUB_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_ST_IUB_AAL2 (M1001C533)</title>
      <use>The number of RAB setup failures caused by a lack of Iub AAL2 transport resources for CS data streaming. UPDATED:When the RNC decides to reject the CS data streaming RAB request due to a lack of Iub transport resources between RNC and WBTS. This happens before the RRC: RADIO BEARER SETUP message is sent to the UE. (For more information, see the section "Failure and abnormal release causes".)
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_ST_IUB_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_ST_IUB_AAL2 (M1001C533)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_PS_ST_IUB_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_PS_ST_IUB_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_PS_ST_IUB_AAL2 (M1001C534)</title>
      <use>The number of RAB setup failures caused by Iub AAL2 transport resource shortage for PS data streaming. UPDATED:When the RNC decides to reject the PS data streaming RAB request due to Iub transport resource shortage between RNC and WBTS. This happens before the RRC: RADIO BEARER SETUP message is sent to the UE. (For more information, see the section "Failure and abnormal release causes".)
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_PS_ST_IUB_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_PS_ST_IUB_AAL2 (M1001C534)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_V_IUR_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_CS_V_IUR_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_V_IUR_AAL2 (M1001C535)</title>
      <use>RAB setup failure for CS Voice RAB due to Iur AAL2 resources. UPDATED:When a RAB setup fails for AMR call due to AAL2 resource shortage on Iur. This happens when ATM connection admission control sends a negative acknowledgement to the call control entity during RL setup or reconfiguration.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_V_IUR_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_V_IUR_AAL2 (M1001C535)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_CO_IUR_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_CS_CO_IUR_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_CO_IUR_AAL2 (M1001C536)</title>
      <use>RAB setup failure for CS Conversational RAB due to Iur AAL2 resources. UPDATED:When a RAB setup fails for CS conversational class call due to AAL2 resource shortage on Iur. This happens when ATM connection admission control sends a negative acknowledgement to the call control entity during RL setup or reconfiguration.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_CO_IUR_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_CO_IUR_AAL2 (M1001C536)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_ST_IUR_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_CS_ST_IUR_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_ST_IUR_AAL2 (M1001C537)</title>
      <use>RAB setup failure for CS Streaming RAB due to Iur AAL2 resources. UPDATED:When a RAB setup fails for CS streaming class call due to AAL2 resource shortage on Iur. This happens when ATM connection admission control sends a negative acknowledgement to the call control entity during RL setup or reconfiguration.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_ST_IUR_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_ST_IUR_AAL2 (M1001C537)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_PS_ST_IUR_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_PS_ST_IUR_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_PS_ST_IUR_AAL2 (M1001C538)</title>
      <use>RAB setup failure for PS Data Streaming RAB due to Iur AAL2 resources. UPDATED:When a RAB setup fails for PS streaming class call due to AAL2 resource shortage on Iur. This happens when ATM connection admission control sends a negative acknowledgement to the call control entity during RL setup or reconfiguration.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_PS_ST_IUR_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_PS_ST_IUR_AAL2 (M1001C538)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_V_IU_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_CS_V_IU_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_V_IU_AAL2 (M1001C539)</title>
      <use>RAB setup failure for CS Voice RAB due to Iu-CS AAL2 resources. UPDATED:When a RAB setup fails for AMR call due to AAL2 resource shortage on Iu-CS. This happens when ATM connection admission control sends a negative acknowledgement to the call control entity during RL setup or reconfiguration.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_V_IU_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_V_IU_AAL2 (M1001C539)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_CO_IU_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_CS_CO_IU_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_CO_IU_AAL2 (M1001C540)</title>
      <use>RAB setup failure for CS Conversational RAB due to Iu-CS AAL2 resources. UPDATED:When a RAB setup fails for CS conversational class call due to AAL2 resource shotage on Iu-CS. This happens when ATM connection admission control sends a negative acknowledgement to the call control entity during RL setup or reconfiguration.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_CO_IU_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_CO_IU_AAL2 (M1001C540)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_ST_IU_AAL2">
    <formula>SERVLEV.RAB_STP_FAIL_CS_ST_IU_AAL2</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_ST_IU_AAL2 (M1001C541)</title>
      <use>RAB setup failure for CS Streaming RAB due to Iu-CS AAL2 resources. UPDATED:When a RAB setup fails for CS streaming class call due to AAL2 resource shortage on Iu-CS. This happens when ATM connection admission control sends a negative acknowledgement to the call control entity during RL setup or reconfiguration.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_ST_IU_AAL2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_ST_IU_AAL2 (M1001C541)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DCH_HOLD_TM_PS_INTER_THP1">
    <formula>SERVLEV.DCH_HOLD_TM_PS_INTER_THP1</formula>
    <kpi_info>
      <title>DCH_HOLD_TM_PS_INTER_THP1 (M1001C542)</title>
      <use>DCH holding time for a PS interactive class RAB with traffic handling priority 1. This counter divided by the denominator for DCH holding time gives the average DCH holding time for the RAB type in question. UPDATED:When the RAB type in question is released, this counter is updated by the total duration of DCH holding time during the RAB lifetime.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DCH_HOLD_TM_PS_INTER_THP1)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DCH_HOLD_TM_PS_INTER_THP1 (M1001C542)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DCH_HOLD_TM_PS_INTER_THP2">
    <formula>SERVLEV.DCH_HOLD_TM_PS_INTER_THP2</formula>
    <kpi_info>
      <title>DCH_HOLD_TM_PS_INTER_THP2 (M1001C543)</title>
      <use>DCH holding time for a PS interactive class RAB with traffic handling priority 2. This counter divided by the denominator for DCH holding time gives the average DCH holding time for the RAB type in question. UPDATED:When the RAB type in question is released, this counter is updated by the total duration of DCH holding time during the RAB lifetime.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DCH_HOLD_TM_PS_INTER_THP2)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DCH_HOLD_TM_PS_INTER_THP2 (M1001C543)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DCH_HOLD_TM_PS_INTER_THP3">
    <formula>SERVLEV.DCH_HOLD_TM_PS_INTER_THP3</formula>
    <kpi_info>
      <title>DCH_HOLD_TM_PS_INTER_THP3 (M1001C544)</title>
      <use>DCH holding time for a PS interactive class RAB with traffic handling priority 3. This counter divided by the denominator for DCH holding time gives the average DCH holding time for the RAB type in question. UPDATED:When the RAB type in question is released, this counter is updated by the total duration of DCH holding time during the RAB lifetime.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DCH_HOLD_TM_PS_INTER_THP3)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DCH_HOLD_TM_PS_INTER_THP3 (M1001C544)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_DCH_H_TM_PS_INTER_THP1">
    <formula>SERVLEV.DENOM_DCH_H_TM_PS_INTER_THP1</formula>
    <kpi_info>
      <title>DENOM_DCH_H_TM_PS_INTER_THP1 (M1001C545)</title>
      <use>The denominator for DCH HOLDING TIMES FOR PS RAB INTERACTIVE THP1. UPDATED:When RAB type in question is released, this counter is updated by value 1.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_DCH_H_TM_PS_INTER_THP1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_DCH_H_TM_PS_INTER_THP1 (M1001C545)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_DCH_H_TM_PS_INTER_THP2">
    <formula>SERVLEV.DENOM_DCH_H_TM_PS_INTER_THP2</formula>
    <kpi_info>
      <title>DENOM_DCH_H_TM_PS_INTER_THP2 (M1001C546)</title>
      <use>The denominator for DCH HOLDING TIMES FOR PS RAB INTERACTIVE THP2. UPDATED:When RAB type in question is released, this counter is updated by value 1.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_DCH_H_TM_PS_INTER_THP2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_DCH_H_TM_PS_INTER_THP2 (M1001C546)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="DENOM_DCH_H_TM_PS_INTER_THP3">
    <formula>SERVLEV.DENOM_DCH_H_TM_PS_INTER_THP3</formula>
    <kpi_info>
      <title>DENOM_DCH_H_TM_PS_INTER_THP3 (M1001C547)</title>
      <use>The denominator for DCH HOLDING TIMES FOR PS RAB INTERACTIVE THP3. UPDATED:When RAB type in question is released, this counter is updated by value 1.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(DENOM_DCH_H_TM_PS_INTER_THP3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>DENOM_DCH_H_TM_PS_INTER_THP3 (M1001C547)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_1_6">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_1_6</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_1_6 (M1001C548)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 1, 2, 3, 4, 5 or 6. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_1_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_1_6 (M1001C548)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_7_8">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_7_8</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_7_8 (M1001C549)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 7 or 8. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_7_8)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_7_8 (M1001C549)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_9_10">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_9_10</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_9_10 (M1001C550)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 9 or 10. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_9_10)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_9_10 (M1001C550)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_11_12">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_11_12</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_11_12 (M1001C551)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 11 or 12. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_11_12)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_11_12 (M1001C551)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_STRATUM_REL_IND_5">
    <formula>SERVLEV.ACCESS_STRATUM_REL_IND_5</formula>
    <kpi_info>
      <title>ACCESS_STRATUM_REL_IND_5 (M1001C552)</title>
      <use>The number of RRC connection establishments by UEs with access stratum release indicator release 5. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_STRATUM_REL_IND_5)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_STRATUM_REL_IND_5 (M1001C552)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MO_CONV">
    <formula>SERVLEV.RRC_ACC_REL_MO_CONV</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MO_CONV (M1001C553)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause originating conversational call. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MO_CONV)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MO_CONV (M1001C553)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MO_STREAMING">
    <formula>SERVLEV.RRC_ACC_REL_MO_STREAMING</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MO_STREAMING (M1001C554)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause originating streaming call. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MO_STREAMING)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MO_STREAMING (M1001C554)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MO_INTERACTIVE">
    <formula>SERVLEV.RRC_ACC_REL_MO_INTERACTIVE</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MO_INTERACTIVE (M1001C555)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause originating interactive call. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MO_INTERACTIVE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MO_INTERACTIVE (M1001C555)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MO_BACKGROUND">
    <formula>SERVLEV.RRC_ACC_REL_MO_BACKGROUND</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MO_BACKGROUND (M1001C556)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause originating background call. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MO_BACKGROUND)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MO_BACKGROUND (M1001C556)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MO_SUBSCRIBED">
    <formula>SERVLEV.RRC_ACC_REL_MO_SUBSCRIBED</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MO_SUBSCRIBED (M1001C557)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause originating subscribed traffic call. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MO_SUBSCRIBED)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MO_SUBSCRIBED (M1001C557)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MT_CONV">
    <formula>SERVLEV.RRC_ACC_REL_MT_CONV</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MT_CONV (M1001C558)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause terminating conversational call. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MT_CONV)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MT_CONV (M1001C558)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MT_STREAMING">
    <formula>SERVLEV.RRC_ACC_REL_MT_STREAMING</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MT_STREAMING (M1001C559)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause terminating streaming call. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MT_STREAMING)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MT_STREAMING (M1001C559)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_INTERACTIVE">
    <formula>SERVLEV.RRC_ACC_REL_INTERACTIVE</formula>
    <kpi_info>
      <title>RRC_ACC_REL_INTERACTIVE (M1001C560)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause terminating interactive call. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_INTERACTIVE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_INTERACTIVE (M1001C560)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MT_BACKGROUND">
    <formula>SERVLEV.RRC_ACC_REL_MT_BACKGROUND</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MT_BACKGROUND (M1001C561)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause terminating background call. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MT_BACKGROUND)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MT_BACKGROUND (M1001C561)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_EMERGENCY">
    <formula>SERVLEV.RRC_ACC_REL_EMERGENCY</formula>
    <kpi_info>
      <title>RRC_ACC_REL_EMERGENCY (M1001C562)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause emergency call. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_EMERGENCY)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_EMERGENCY (M1001C562)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_INTER_RAT_RESEL">
    <formula>SERVLEV.RRC_ACC_REL_INTER_RAT_RESEL</formula>
    <kpi_info>
      <title>RRC_ACC_REL_INTER_RAT_RESEL (M1001C563)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause inter-RAT cell reselection. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_INTER_RAT_RESEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_INTER_RAT_RESEL (M1001C563)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_INTER_RAT_CCO">
    <formula>SERVLEV.RRC_ACC_REL_INTER_RAT_CCO</formula>
    <kpi_info>
      <title>RRC_ACC_REL_INTER_RAT_CCO (M1001C564)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause inter-RAT cell change order. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_INTER_RAT_CCO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_INTER_RAT_CCO (M1001C564)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_REGISTRATION">
    <formula>SERVLEV.RRC_ACC_REL_REGISTRATION</formula>
    <kpi_info>
      <title>RRC_ACC_REL_REGISTRATION (M1001C565)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause registration. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC Connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC Connection Request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_REGISTRATION)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_REGISTRATION (M1001C565)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_DETACH">
    <formula>SERVLEV.RRC_ACC_REL_DETACH</formula>
    <kpi_info>
      <title>RRC_ACC_REL_DETACH (M1001C566)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause detach. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_DETACH)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_DETACH (M1001C566)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MO_HIGH_PR_SIGN">
    <formula>SERVLEV.RRC_ACC_REL_MO_HIGH_PR_SIGN</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MO_HIGH_PR_SIGN (M1001C567)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause originating high priority signalling. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MO_HIGH_PR_SIGN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MO_HIGH_PR_SIGN (M1001C567)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MO_LOW_PR_SIGN">
    <formula>SERVLEV.RRC_ACC_REL_MO_LOW_PR_SIGN</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MO_LOW_PR_SIGN (M1001C568)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause originating low priority signalling. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MO_LOW_PR_SIGN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MO_LOW_PR_SIGN (M1001C568)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_CALL_RE_ESTAB">
    <formula>SERVLEV.RRC_ACC_REL_CALL_RE_ESTAB</formula>
    <kpi_info>
      <title>RRC_ACC_REL_CALL_RE_ESTAB (M1001C569)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause call re-establishment. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_CALL_RE_ESTAB)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_CALL_RE_ESTAB (M1001C569)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MT_HIGH_PR_SIGN">
    <formula>SERVLEV.RRC_ACC_REL_MT_HIGH_PR_SIGN</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MT_HIGH_PR_SIGN (M1001C570)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause terminating high priority signalling. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MT_HIGH_PR_SIGN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MT_HIGH_PR_SIGN (M1001C570)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MT_LOW_PR_SIGN">
    <formula>SERVLEV.RRC_ACC_REL_MT_LOW_PR_SIGN</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MT_LOW_PR_SIGN (M1001C571)</title>
      <use>The number of RRC connection access releases due to cell reselection for calls established with the cause terminating low priority signalling. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. UPDATED:When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE due to a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MT_LOW_PR_SIGN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MT_LOW_PR_SIGN (M1001C571)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_MT_CAUSE_UNKNOWN">
    <formula>SERVLEV.RRC_ACC_REL_MT_CAUSE_UNKNOWN</formula>
    <kpi_info>
      <title>RRC_ACC_REL_MT_CAUSE_UNKNOWN (M1001C572)</title>
      <use>The number of RRC connection access releases because of cell reselection for calls established with the cause "Terminating - cause unknown". This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. Such cases are also included in this "unknown" category when the establishment cause IE of RRC Connection Request is out of the expected range, for example, because of RACH frame corruption. UPDATED: When the RRC connection attempt is released before the RRC Connection Setup Complete message is received from the UE because of a new RRC connection request to another cell.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_MT_CAUSE_UNKNOWN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_MT_CAUSE_UNKNOWN (M1001C572)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MO_CONV">
    <formula>SERVLEV.RRC_ATT_REP_MO_CONV</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MO_CONV (M1001C573)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause originating conversational call from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MO_CONV)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MO_CONV (M1001C573)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MO_STREAMING">
    <formula>SERVLEV.RRC_ATT_REP_MO_STREAMING</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MO_STREAMING (M1001C574)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause originating streaming call from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MO_STREAMING)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MO_STREAMING (M1001C574)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MO_INTERACTIVE">
    <formula>SERVLEV.RRC_ATT_REP_MO_INTERACTIVE</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MO_INTERACTIVE (M1001C575)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause originating interactive call from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MO_INTERACTIVE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MO_INTERACTIVE (M1001C575)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MO_BACKGROUND">
    <formula>SERVLEV.RRC_ATT_REP_MO_BACKGROUND</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MO_BACKGROUND (M1001C576)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause originating background call from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MO_BACKGROUND)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MO_BACKGROUND (M1001C576)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MO_SUBSCRIBED">
    <formula>SERVLEV.RRC_ATT_REP_MO_SUBSCRIBED</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MO_SUBSCRIBED (M1001C577)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause originating subscribed traffic call from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MO_SUBSCRIBED)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MO_SUBSCRIBED (M1001C577)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MT_CONV">
    <formula>SERVLEV.RRC_ATT_REP_MT_CONV</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MT_CONV (M1001C578)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause terminating conversational call from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MT_CONV)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MT_CONV (M1001C578)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MT_STREAMING">
    <formula>SERVLEV.RRC_ATT_REP_MT_STREAMING</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MT_STREAMING (M1001C579)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause terminating streaming call from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MT_STREAMING)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MT_STREAMING (M1001C579)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_INTERACTIVE">
    <formula>SERVLEV.RRC_ATT_REP_INTERACTIVE</formula>
    <kpi_info>
      <title>RRC_ATT_REP_INTERACTIVE (M1001C580)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause terminating interactive call from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_INTERACTIVE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_INTERACTIVE (M1001C580)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MT_BACKGROUND">
    <formula>SERVLEV.RRC_ATT_REP_MT_BACKGROUND</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MT_BACKGROUND (M1001C581)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause terminating background call from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MT_BACKGROUND)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MT_BACKGROUND (M1001C581)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_EMERGENCY">
    <formula>SERVLEV.RRC_ATT_REP_EMERGENCY</formula>
    <kpi_info>
      <title>RRC_ATT_REP_EMERGENCY (M1001C582)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause emergency call from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_EMERGENCY)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_EMERGENCY (M1001C582)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_INTER_RAT_RESEL">
    <formula>SERVLEV.RRC_ATT_REP_INTER_RAT_RESEL</formula>
    <kpi_info>
      <title>RRC_ATT_REP_INTER_RAT_RESEL (M1001C583)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause inter-RAT cell reselection from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_INTER_RAT_RESEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_INTER_RAT_RESEL (M1001C583)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_INTER_RAT_CCO">
    <formula>SERVLEV.RRC_ATT_REP_INTER_RAT_CCO</formula>
    <kpi_info>
      <title>RRC_ATT_REP_INTER_RAT_CCO (M1001C584)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause inter-RAT cell change order from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_INTER_RAT_CCO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_INTER_RAT_CCO (M1001C584)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_REGISTRATION">
    <formula>SERVLEV.RRC_ATT_REP_REGISTRATION</formula>
    <kpi_info>
      <title>RRC_ATT_REP_REGISTRATION (M1001C585)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause registration from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_REGISTRATION)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_REGISTRATION (M1001C585)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_DETACH">
    <formula>SERVLEV.RRC_ATT_REP_DETACH</formula>
    <kpi_info>
      <title>RRC_ATT_REP_DETACH (M1001C586)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause detach from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_DETACH)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_DETACH (M1001C586)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MO_HIGH_PR_SIGN">
    <formula>SERVLEV.RRC_ATT_REP_MO_HIGH_PR_SIGN</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MO_HIGH_PR_SIGN (M1001C587)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause originating high priority signalling from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MO_HIGH_PR_SIGN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MO_HIGH_PR_SIGN (M1001C587)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MO_LOW_PR_SIGN">
    <formula>SERVLEV.RRC_ATT_REP_MO_LOW_PR_SIGN</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MO_LOW_PR_SIGN (M1001C588)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause originating low priority signalling from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MO_LOW_PR_SIGN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MO_LOW_PR_SIGN (M1001C588)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_CALL_RE_ESTAB">
    <formula>SERVLEV.RRC_ATT_REP_CALL_RE_ESTAB</formula>
    <kpi_info>
      <title>RRC_ATT_REP_CALL_RE_ESTAB (M1001C589)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause call re-establishment from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_CALL_RE_ESTAB)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_CALL_RE_ESTAB (M1001C589)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MT_HIGH_PR_SIGN">
    <formula>SERVLEV.RRC_ATT_REP_MT_HIGH_PR_SIGN</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MT_HIGH_PR_SIGN (M1001C590)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause terminating high priority signalling from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MT_HIGH_PR_SIGN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MT_HIGH_PR_SIGN (M1001C590)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MT_LOW_PR_SIGN">
    <formula>SERVLEV.RRC_ATT_REP_MT_LOW_PR_SIGN</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MT_LOW_PR_SIGN (M1001C591)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause terminating low priority signalling from the same UE whose previous RRC connection request was rejected due to an unsuccessful resource reservation attempt in RNC. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MT_LOW_PR_SIGN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MT_LOW_PR_SIGN (M1001C591)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_MT_CAUSE_UNKNOWN">
    <formula>SERVLEV.RRC_ATT_REP_MT_CAUSE_UNKNOWN</formula>
    <kpi_info>
      <title>RRC_ATT_REP_MT_CAUSE_UNKNOWN (M1001C592)</title>
      <use>The number of RRC connection request retransmissions (successfully received by the RNC) with the cause "Terminating - cause unknown" from the same UE whose previous RRC connection request was rejected because of an unsuccessful resource reservation attempt in RNC. Such cases are also included in this "unknown" category when the establishment cause IE of RRC Connection Request is out of the expected range, for example, because of RACH frame corruption. UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_MT_CAUSE_UNKNOWN)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_MT_CAUSE_UNKNOWN (M1001C592)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PS_INT_PCH">
    <formula>SERVLEV.RAB_ACT_FAIL_PS_INT_PCH</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PS_INT_PCH (M1001C593)</title>
      <use>The number of RAB active failures in cell-PCH or URA-PCH state for PS data with interactive class service. UPDATED: When the RNC commands the UE to Cell_PCH or URA_PCH state but the UE does not respond to the command and finally after timer expiry the RNC releases the RRC connection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PS_INT_PCH)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PS_INT_PCH (M1001C593)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PS_BACKG_PCH">
    <formula>SERVLEV.RAB_ACT_FAIL_PS_BACKG_PCH</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PS_BACKG_PCH (M1001C594)</title>
      <use>The number of RAB active failures in cell-PCH or URA-PCH state for PS data with background class service. UPDATED: When the RNC commands the UE to Cell_PCH or URA_PCH state but the UE does not respond to the command and finally after timer expiry the RNC releases the RRC connection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PS_BACKG_PCH)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PS_BACKG_PCH (M1001C594)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPPORT_NW_AGPS">
    <formula>SERVLEV.UE_SUPPORT_NW_AGPS</formula>
    <kpi_info>
      <title>UE_SUPPORT_NW_AGPS (M1001C595)</title>
      <use>The number of RRC connection establishments by UEs that support network-assisted GPS. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPPORT_NW_AGPS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPPORT_NW_AGPS (M1001C595)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_ATT_PS_NRT_128_256">
    <formula>SERVLEV.RAB_SETUP_ATT_PS_NRT_128_256</formula>
    <kpi_info>
      <title>RAB_SETUP_ATT_PS_NRT_128_256 (M1001C596)</title>
      <use>Number of RAB setup attempts for PS NRT RAB with a bit rate of 128 kbps uplink/256 kbps downlink. UPDATED:When the RAB setup for a PS NRT starts.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_SETUP_ATT_PS_NRT_128_256)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_ATT_PS_NRT_128_256 (M1001C596)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PS_NRT_128_256">
    <formula>SERVLEV.RAB_ACC_COMP_PS_NRT_128_256</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PS_NRT_128_256 (M1001C597)</title>
      <use>Number of RAB access completions for PS NRT RAB with a bit rate of 128 kbps uplink/256 kbps downlink. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE to the CN after successful PS NRT RAB establishment with uplink and downlink bit rates as described in the description field.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PS_NRT_128_256)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PS_NRT_128_256 (M1001C597)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PS_NRT_128_256">
    <formula>SERVLEV.RAB_ACT_COMP_PS_NRT_128_256</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PS_NRT_128_256 (M1001C598)</title>
      <use>The number of RAB active completions and active releases for PS NRT RAB with a bitrate of 128 kbps uplink/256 kbps downlink. UPDATED:When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PS_NRT_128_256)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PS_NRT_128_256 (M1001C598)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_CS_VOICE_WPS">
    <formula>SERVLEV.RAB_STP_ATT_CS_VOICE_WPS</formula>
    <kpi_info>
      <title>RAB_STP_ATT_CS_VOICE_WPS (M1001C599)</title>
      <use>The number of RAB setup attempts for CS voice calls using Wireless Priority Service. Also M1001C66 RAB SETUP ATTEMPTS FOR CS VOICE is updated along with this counter. UPDATED:When the RNC receives an RANAP: RAB ASSIGNMENT REQUEST message with parameters requesting to establish CS Voice RAB for Wireless Priority Service.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_CS_VOICE_WPS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_CS_VOICE_WPS (M1001C599)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_COMP_CS_VOICE_WPS">
    <formula>SERVLEV.RAB_STP_COMP_CS_VOICE_WPS</formula>
    <kpi_info>
      <title>RAB_STP_COMP_CS_VOICE_WPS (M1001C600)</title>
      <use>The number of RAB setup completions for CS voice calls using Wireless Priority Service. Also M1001C73 RAB SETUP COMPLETIONS FOR CS VOICE is updated along with this counter. UPDATED:When the RNC sends an RRC: RADIO BEARER SETUP message, the purpose of which is to establish a radio bearer for a new CS voice RAB.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_COMP_CS_VOICE_WPS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_COMP_CS_VOICE_WPS (M1001C600)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_VOICE_WPS">
    <formula>SERVLEV.RAB_STP_FAIL_CS_VOICE_WPS</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_VOICE_WPS (M1001C601)</title>
      <use>The number of RAB setup failures for CS voice calls using Wireless Priority Service. Also some other RAB SETUP FAILURE counter is updated along with this counter. UPDATED:When allocating resources for Wireless Priority Service CS Voice RAB fails and blind Inter-System handover to GSM is not possible for example due to no neighbour cell available. In this case RNC responds to CN with RANAP: RAB ASSIGNMENT RESPONSE("No Resource Available").
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_VOICE_WPS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_VOICE_WPS (M1001C601)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_CS_VOICE_WPS">
    <formula>SERVLEV.RAB_ACC_COMP_CS_VOICE_WPS</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_CS_VOICE_WPS (M1001C602)</title>
      <use>The number of RAB access completions for CS voice calls using Wireless Priority Service. Also M1001C115 RAB ACCESS COMPLETIONS FOR CS VOICE is updated along with this counter. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE to the CN after a successful RAB establishment for CS voice. Also the case where blind Inter-System Handover is initiated for the Wireless Priority Service call, are counted as successful RAB establishments.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_CS_VOICE_WPS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_CS_VOICE_WPS (M1001C602)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_SETUP_TIME_MAX">
    <formula>SERVLEV.RRC_SETUP_TIME_MAX</formula>
    <kpi_info>
      <title>RRC_SETUP_TIME_MAX (M1001C603)</title>
      <use>The maximum RRC connection setup time defined as the amount of time that passes between an RRC: RRC CONNECTION REQUEST message and an RRC: RRC CONNECTION SETUP COMPLETE message. UPDATED:When the UE sends an RRC: RRC CONNECTION SETUP COMPLETE message.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(RRC_SETUP_TIME_MAX)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_SETUP_TIME_MAX (M1001C603)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_TIME_MAX_CS_VOICE">
    <formula>SERVLEV.RAB_SETUP_TIME_MAX_CS_VOICE</formula>
    <kpi_info>
      <title>RAB_SETUP_TIME_MAX_CS_VOICE (M1001C604)</title>
      <use>The maximum CS Voice RAB setup time defined as the amount of time that passes between an RANAP: RAB ASSIGNMENT REQUEST message and an RANAP: RAB ASSIGNMENT RESPONSE message during an RAB establishment. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN after a successful RAB establishment.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(RAB_SETUP_TIME_MAX_CS_VOICE)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_TIME_MAX_CS_VOICE (M1001C604)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_TIME_MAX_CS_CONV">
    <formula>SERVLEV.RAB_SETUP_TIME_MAX_CS_CONV</formula>
    <kpi_info>
      <title>RAB_SETUP_TIME_MAX_CS_CONV (M1001C605)</title>
      <use>The maximum CS Conversational Data RAB setup time during the measurement period defined as the amount of time that passes between an RANAP: RAB ASSIGNMENT REQUEST message and an RANAP: RAB ASSIGNMENT RESPONSE message during an RAB establishment. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE message to the CN after a successful RAB establishment.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(RAB_SETUP_TIME_MAX_CS_CONV)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_TIME_MAX_CS_CONV (M1001C605)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_TIME_MAX_CS_STR">
    <formula>SERVLEV.RAB_SETUP_TIME_MAX_CS_STR</formula>
    <kpi_info>
      <title>RAB_SETUP_TIME_MAX_CS_STR (M1001C606)</title>
      <use>The maximum CS Streaming RAB setup time defined as the amount of time that passes between an RANAP: RAB ASSIGNMENT REQUEST message and an RANAP: RAB ASSIGNMENT RESPONSE message during an RAB establishment. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN after a successful RAB establishment.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(RAB_SETUP_TIME_MAX_CS_STR)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_TIME_MAX_CS_STR (M1001C606)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_TIME_MAX_PS_STR">
    <formula>SERVLEV.RAB_SETUP_TIME_MAX_PS_STR</formula>
    <kpi_info>
      <title>RAB_SETUP_TIME_MAX_PS_STR (M1001C607)</title>
      <use>The maximum PS Streaming RAB setup time defined as the amount of time that passes between an RANAP: RAB ASSIGNMENT REQUEST message and an RANAP: RAB ASSIGNMENT RESPONSE message during an RAB establishment. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN after a successful RAB establishment.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(RAB_SETUP_TIME_MAX_PS_STR)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_TIME_MAX_PS_STR (M1001C607)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_TIME_MAX_PS_INT">
    <formula>SERVLEV.RAB_SETUP_TIME_MAX_PS_INT</formula>
    <kpi_info>
      <title>RAB_SETUP_TIME_MAX_PS_INT (M1001C608)</title>
      <use>The maximum PS Interactive RAB setup time defined as the amount of time that passes between an RANAP: RAB ASSIGNMENT REQUEST message and an RANAP: RAB ASSIGNMENT RESPONSE message during an RAB establishment. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN after a successful RAB establishment.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(RAB_SETUP_TIME_MAX_PS_INT)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_TIME_MAX_PS_INT (M1001C608)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_SETUP_TIME_MAX_PS_BACKG">
    <formula>SERVLEV.RAB_SETUP_TIME_MAX_PS_BACKG</formula>
    <kpi_info>
      <title>RAB_SETUP_TIME_MAX_PS_BACKG (M1001C609)</title>
      <use>The maximum PS Background RAB setup time defined as the amount of time that passes between an RANAP: RAB ASSIGNMENT REQUEST message and an RANAP: RAB ASSIGNMENT RESPONSE message during an RAB establishment. UPDATED:When the RNC sends an RANAP: RAB ASSIGNMENT RESPONSE message to the CN after a successful RAB establishment.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>MAX(RAB_SETUP_TIME_MAX_PS_BACKG)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_SETUP_TIME_MAX_PS_BACKG (M1001C609)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_EDCH_CATEGORY_1">
    <formula>SERVLEV.UE_SUPP_EDCH_CATEGORY_1</formula>
    <kpi_info>
      <title>UE_SUPP_EDCH_CATEGORY_1 (M1001C610)</title>
      <use>The number of RRC connection establishments by UEs supporting the E-DCH category 1 defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_EDCH_CATEGORY_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_EDCH_CATEGORY_1 (M1001C610)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_EDCH_CATEGORY_2">
    <formula>SERVLEV.UE_SUPP_EDCH_CATEGORY_2</formula>
    <kpi_info>
      <title>UE_SUPP_EDCH_CATEGORY_2 (M1001C611)</title>
      <use>The number of RRC connection establishments by UEs supporting the E-DCH category 2 defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_EDCH_CATEGORY_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_EDCH_CATEGORY_2 (M1001C611)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_EDCH_CATEGORY_3">
    <formula>SERVLEV.UE_SUPP_EDCH_CATEGORY_3</formula>
    <kpi_info>
      <title>UE_SUPP_EDCH_CATEGORY_3 (M1001C612)</title>
      <use>The number of RRC connection establishments by UEs supporting the E-DCH category 3 defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_EDCH_CATEGORY_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_EDCH_CATEGORY_3 (M1001C612)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_EDCH_CATEGORY_4">
    <formula>SERVLEV.UE_SUPP_EDCH_CATEGORY_4</formula>
    <kpi_info>
      <title>UE_SUPP_EDCH_CATEGORY_4 (M1001C613)</title>
      <use>The number of RRC connection establishments by UEs supporting the E-DCH category 4 defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_EDCH_CATEGORY_4)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_EDCH_CATEGORY_4 (M1001C613)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_EDCH_CATEGORY_5">
    <formula>SERVLEV.UE_SUPP_EDCH_CATEGORY_5</formula>
    <kpi_info>
      <title>UE_SUPP_EDCH_CATEGORY_5 (M1001C614)</title>
      <use>The number of RRC connection establishments by UEs supporting the E-DCH category 5 defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_EDCH_CATEGORY_5)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_EDCH_CATEGORY_5 (M1001C614)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_EDCH_CATEGORY_6">
    <formula>SERVLEV.UE_SUPP_EDCH_CATEGORY_6</formula>
    <kpi_info>
      <title>UE_SUPP_EDCH_CATEGORY_6 (M1001C615)</title>
      <use>The number of RRC connection establishments by UEs supporting the E-DCH category 6 defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_EDCH_CATEGORY_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_EDCH_CATEGORY_6 (M1001C615)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_STRATUM_REL_IND_6">
    <formula>SERVLEV.ACCESS_STRATUM_REL_IND_6</formula>
    <kpi_info>
      <title>ACCESS_STRATUM_REL_IND_6 (M1001C616)</title>
      <use>The number of RRC connection establishments by UEs with access stratum release indicator release 6. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_STRATUM_REL_IND_6)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_STRATUM_REL_IND_6 (M1001C616)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_STP_REJ_EMERG_CALL">
    <formula>SERVLEV.RRC_CONN_STP_REJ_EMERG_CALL</formula>
    <kpi_info>
      <title>RRC_CONN_STP_REJ_EMERG_CALL (M1001C617)</title>
      <use>The number of RRC connections rejected due to emergency call redirection. UPDATED:When the RNC redirects an emergency call to the GSM network by sending an RRC CONNECTION REJECT with redirection information to the UE.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_STP_REJ_EMERG_CALL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_STP_REJ_EMERG_CALL (M1001C617)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_STP_FAIL_ICSU_OVERL">
    <formula>SERVLEV.RRC_CONN_STP_FAIL_ICSU_OVERL</formula>
    <kpi_info>
      <title>RRC_CONN_STP_FAIL_ICSU_OVERL (M1001C618)</title>
      <use>The number of RRC setup failures caused by L3 control plane unit overload. In IPA-RNC the unit is ICSU and in mcRNC the unit is USPU. UPDATED:When the RNC decides to reject the RRC connection request due to L3 control plane unit overload. After this, the RNC sends an RRC: RRC CONNECTION REJECT message to the UE.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_STP_FAIL_ICSU_OVERL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_STP_FAIL_ICSU_OVERL (M1001C618)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_VOICE_LIC">
    <formula>SERVLEV.RAB_STP_FAIL_CS_VOICE_LIC</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_VOICE_LIC (M1001C619)</title>
      <use>The number of RAB setup failures caused by AMR capacity license exceeded for CS voice. UPDATED:When the RNC rejects a CS Voice RAB request due to AMR capacity license exceeded.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_VOICE_LIC)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_VOICE_LIC (M1001C619)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_VOICE_PRE_LIC">
    <formula>SERVLEV.RAB_ACT_REL_CS_VOICE_PRE_LIC</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_VOICE_PRE_LIC (M1001C620)</title>
      <use>The number of RAB releases due to pre-emption due to capacity license exceeded for CS voice calls. Also counter M1001C144 RAB ACTIVE RELEASES DUE TO PRE-EMPTION FOR CS VOICE is updated along with this counter. UPDATED: When a CS Voice RAB is released due to pre-emption caused due to AMR capacity license exceeded.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_VOICE_PRE_LIC)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_VOICE_PRE_LIC (M1001C620)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_VOICE_IUR_TR">
    <formula>SERVLEV.RAB_STP_FAIL_CS_VOICE_IUR_TR</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_VOICE_IUR_TR (M1001C621)</title>
      <use>The number of failed CS voice RAB setups due to Iur transport resources. Also counter M1001C82 is updated with this counter. UPDATED:When a CS voice traffic class RAB setup fails due to Iur transport resources.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_VOICE_IUR_TR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_VOICE_IUR_TR (M1001C621)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_CONV_IUR_TR">
    <formula>SERVLEV.RAB_STP_FAIL_CS_CONV_IUR_TR</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_CONV_IUR_TR (M1001C622)</title>
      <use>The number of failed CS Conversational data traffic class RAB setups due to Iur transport resources. Also counter M1001C87 is updated with this counter. UPDATED:When a CS conversational traffic class RAB setup fails due to Iur transport resources.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_CONV_IUR_TR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_CONV_IUR_TR (M1001C622)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_STRE_IUR_TR">
    <formula>SERVLEV.RAB_STP_FAIL_CS_STRE_IUR_TR</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_STRE_IUR_TR (M1001C623)</title>
      <use>The number of failed CS Streaming traffic class RAB setups due to Iur transport resources. Also counter M1001C92 is updated with this counter. UPDATED: When a CS streaming traffic class RAB setup fails due to Iur transport resources.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_STRE_IUR_TR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_STRE_IUR_TR (M1001C623)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_PS_STRE_IUR_TR">
    <formula>SERVLEV.RAB_STP_FAIL_PS_STRE_IUR_TR</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_PS_STRE_IUR_TR (M1001C624)</title>
      <use>The number of failed PS Streaming traffic class RAB setups due to Iur transport resources. Also counter M1001C102 is updated with this counter. UPDATED: When a PS streaming traffic class RAB setup fails due to Iur transport resources.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_PS_STRE_IUR_TR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_PS_STRE_IUR_TR (M1001C624)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_VOICE_IU_CS">
    <formula>SERVLEV.RAB_STP_FAIL_CS_VOICE_IU_CS</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_VOICE_IU_CS (M1001C625)</title>
      <use>The number of failed CS voice RAB setups due to Iu-CS transport resources. Also counter M1001C82 is updated with this counter. UPDATED:When a CS voice traffic class RAB setup fails due to Iu-CS transport resources.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_VOICE_IU_CS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_VOICE_IU_CS (M1001C625)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_CONV_IU_CS">
    <formula>SERVLEV.RAB_STP_FAIL_CS_CONV_IU_CS</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_CONV_IU_CS (M1001C626)</title>
      <use>The number of failed CS Conversational data traffic class RAB setups due to Iu-CS transport resources. Also counter M1001C87 is updated with this counter. UPDATED:When a CS conversational traffic class RAB setup fails due to Iu-CS transport resources.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_CONV_IU_CS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_CONV_IU_CS (M1001C626)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_STRE_IU_CS">
    <formula>SERVLEV.RAB_STP_FAIL_CS_STRE_IU_CS</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_STRE_IU_CS (M1001C627)</title>
      <use>The number of failed CS Streaming traffic class RAB setups due to Iu-CS transport resources. Also counter M1001C92 is updated with this counter. UPDATED: When a CS streaming traffic class RAB setup fails due or Iu-CS transport resources.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_STRE_IU_CS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_STRE_IU_CS (M1001C627)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_REL_DUE_INACTIVITY">
    <formula>SERVLEV.RRC_CONN_REL_DUE_INACTIVITY</formula>
    <kpi_info>
      <title>RRC_CONN_REL_DUE_INACTIVITY (M1001C628)</title>
      <use>The number of RRC connection releases due to user inactivity in Cell-PCH or URA-PCH state. Also counter M1001C12 is updated along with this counter. UPDATED: When the RNC releases the RRC/Iu-PS connection based on the MSActivitySupervision timer using release cause 'User Inactivity'.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_REL_DUE_INACTIVITY)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_REL_DUE_INACTIVITY (M1001C628)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_REL_DUE_HW_RES">
    <formula>SERVLEV.RRC_CONN_REL_DUE_HW_RES</formula>
    <kpi_info>
      <title>RRC_CONN_REL_DUE_HW_RES (M1001C629)</title>
      <use>The number of RRC connection releases due to RNC HW resources. Also counter M1001C12 is updated along with this counter. UPDATED: When the RNC releases the RRC/Iu-PS connection due to the HW-resource shortage in ICSU-units (amount of simultaneous RRC-connections) or in DMCU-units (no L2 processing resources available for UE DCCH/DTCH).
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_REL_DUE_HW_RES)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_REL_DUE_HW_RES (M1001C629)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUCC_RRC_SETUP_CONV">
    <formula>SERVLEV.SUCC_RRC_SETUP_CONV</formula>
    <kpi_info>
      <title>SUCC_RRC_SETUP_CONV (M1001C630)</title>
      <use>The number of successful RRC connection setups for a conversational call. Both originating and terminating conversational calls are included. RRC connections established via SRNC relocation, Inter-RNC HHO or CS Inter-System handover are not included. UPDATED:When the RRC connection is set up successfully, i.e. RNC receives RRC: RRC CONNECTION SETUP COMPLETE and the establishment cause in the preceding RRC: RRC CONNECTION REQUEST has been either Originating Conversational Call or Terminating Conversational Call.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUCC_RRC_SETUP_CONV)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUCC_RRC_SETUP_CONV (M1001C630)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUCC_RRC_SETUP_STREA">
    <formula>SERVLEV.SUCC_RRC_SETUP_STREA</formula>
    <kpi_info>
      <title>SUCC_RRC_SETUP_STREA (M1001C631)</title>
      <use>The number of successful RRC connection setups for a streaming call. Both originating and terminating streaming calls are included. RRC connections established via SRNC relocation, Inter-RNC HHO or CS Inter-System handover are not included. UPDATED:When the RRC connection is set up successfully, i.e. RNC receives RRC: RRC CONNECTION SETUP COMPLETE and the establishment cause in the preceding RRC: RRC CONNECTION REQUEST has been either Originating Streaming Call or Terminating Streaming Call.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUCC_RRC_SETUP_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUCC_RRC_SETUP_STREA (M1001C631)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUCC_RRC_SETUP_INTERA">
    <formula>SERVLEV.SUCC_RRC_SETUP_INTERA</formula>
    <kpi_info>
      <title>SUCC_RRC_SETUP_INTERA (M1001C632)</title>
      <use>The number of successful RRC connection setups for a interactive call. Both originating and terminating interactive calls are included. RRC connections established via SRNC relocation, Inter-RNC HHO or CS Inter-System handover are not included. UPDATED:When the RRC connection is set up successfully, i.e. RNC receives RRC: RRC CONNECTION SETUP COMPLETE and the establishment cause in the preceding RRC: RRC CONNECTION REQUEST has been either Originating Interactive Call or Terminating Interactive Call.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUCC_RRC_SETUP_INTERA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUCC_RRC_SETUP_INTERA (M1001C632)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUCC_RRC_SETUP_BACKG">
    <formula>SERVLEV.SUCC_RRC_SETUP_BACKG</formula>
    <kpi_info>
      <title>SUCC_RRC_SETUP_BACKG (M1001C633)</title>
      <use>The number of successful RRC connection setups for a background call. Both originating and terminating background calls are included. RRC connections established via SRNC relocation, Inter-RNC HHO or CS Inter-System handover are not included. UPDATED:When the RRC connection is set up successfully, i.e. RNC receives RRC: RRC CONNECTION SETUP COMPLETE and the establishment cause in the preceding RRC: RRC CONNECTION REQUEST has been either Originating Background Call or Terminating Background Call.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUCC_RRC_SETUP_BACKG)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUCC_RRC_SETUP_BACKG (M1001C633)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SUCC_RRC_SETUP_OTHER">
    <formula>SERVLEV.SUCC_RRC_SETUP_OTHER</formula>
    <kpi_info>
      <title>SUCC_RRC_SETUP_OTHER (M1001C634)</title>
      <use>The number of successful RRC connection setups with establishment cause other than those covered by counters M1001C630-M1001C633. RRC connections established via SRNC relocation, Inter-RNC HHO or CS Inter-System handover are not included. UPDATED:When the RRC connection is set up successfully, i.e. RNC receives RRC: RRC CONNECTION SETUP COMPLETE and the establishment cause in the preceding RRC: RRC CONNECTION REQUEST has been some other cause.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SUCC_RRC_SETUP_OTHER)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SUCC_RRC_SETUP_OTHER (M1001C634)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SRB_ACT_FAIL_CONV">
    <formula>SERVLEV.SRB_ACT_FAIL_CONV</formula>
    <kpi_info>
      <title>SRB_ACT_FAIL_CONV (M1001C635)</title>
      <use>The number of abnormally released RRC connections with standalone signalling radio bearer before RAB assignment. Both originating and terminating conversational calls are included. UPDATED:When a standalone SRB is released due to some failure, i.e. when it is counted as RRC Active Failure in the old Service Level counters. The counter is updated when the establishment cause in RRC: RRC CONNECTION REQUEST is either Originating Conversational Call or Terminating Conversational Call.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SRB_ACT_FAIL_CONV)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SRB_ACT_FAIL_CONV (M1001C635)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SRB_ACT_FAIL_STREA">
    <formula>SERVLEV.SRB_ACT_FAIL_STREA</formula>
    <kpi_info>
      <title>SRB_ACT_FAIL_STREA (M1001C636)</title>
      <use>The number of abnormally released RRC connections with standalone signalling radio bearer before RAB assignment. Both originating and terminating streaming calls are included. UPDATED:When a standalone SRB is released due to some failure, i.e. when it is counted as RRC Active Failure in the old Service Level counters. The counter is updated when the establishment cause in RRC: RRC CONNECTION REQUEST is either Originating Streaming Call or Terminating Streaming Call.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SRB_ACT_FAIL_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SRB_ACT_FAIL_STREA (M1001C636)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SRB_ACT_FAIL_INTERA">
    <formula>SERVLEV.SRB_ACT_FAIL_INTERA</formula>
    <kpi_info>
      <title>SRB_ACT_FAIL_INTERA (M1001C637)</title>
      <use>The number of abnormally released RRC connections with standalone signalling radio bearer before RAB assignment. Both originating and terminating interactive calls are included. UPDATED:When a standalone SRB is released due to some failure, i.e. when it is counted as RRC Active Failure in the old Service Level counters. The counter is updated when the establishment cause in RRC: RRC CONNECTION REQUEST is either Originating Interactive Call or Terminating Interactive Call.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SRB_ACT_FAIL_INTERA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SRB_ACT_FAIL_INTERA (M1001C637)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SRB_ACT_FAIL_BACKG">
    <formula>SERVLEV.SRB_ACT_FAIL_BACKG</formula>
    <kpi_info>
      <title>SRB_ACT_FAIL_BACKG (M1001C638)</title>
      <use>The number of abnormally released RRC connections with standalone signalling radio bearer before RAB assignment. Both originating and terminating background calls are included. UPDATED:When a standalone SRB is released due to some failure, i.e. when it is counted as RRC Active Failure in the old Service Level counters. The counter is updated when the establishment cause in RRC: RRC CONNECTION REQUEST is either Originating Background Call or Terminating Background Call.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SRB_ACT_FAIL_BACKG)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SRB_ACT_FAIL_BACKG (M1001C638)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SRB_ACT_FAIL_OTHER">
    <formula>SERVLEV.SRB_ACT_FAIL_OTHER</formula>
    <kpi_info>
      <title>SRB_ACT_FAIL_OTHER (M1001C639)</title>
      <use>The number of abnormally released RRC connections with standalone signalling radio bearer before RAB assignment. UPDATED:When a standalone SRB is released due to some failure, i.e. when it is counted as RRC Active Failure in the old Service Level counters. The counter is updated when the establishment cause in RRC: RRC CONNECTION REQUEST is some other cause not covered by counters M1001C635-M1001C638.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SRB_ACT_FAIL_OTHER)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SRB_ACT_FAIL_OTHER (M1001C639)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACT_REL_DIRECTED_RETRY">
    <formula>SERVLEV.RRC_ACT_REL_DIRECTED_RETRY</formula>
    <kpi_info>
      <title>RRC_ACT_REL_DIRECTED_RETRY (M1001C640)</title>
      <use>The number of RRC connections released after a successful Directed Retry inter-system handover procedure for CS Voice calls. Also some RAB setup failure counter is updated before this counter. This counter does not include Wireless Priority Service related inter-system handovers. UPDATED: When the inter-system handover triggered by directed retry is successful.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACT_REL_DIRECTED_RETRY)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACT_REL_DIRECTED_RETRY (M1001C640)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPPORT_GANHO">
    <formula>SERVLEV.UE_SUPPORT_GANHO</formula>
    <kpi_info>
      <title>UE_SUPPORT_GANHO (M1001C641)</title>
      <use>The number of RRC connection establishments by UEs that support handover to Generic Access Network (GAN). UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPPORT_GANHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPPORT_GANHO (M1001C641)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_ACT_REL_INTRA_HHO">
    <formula>SERVLEV.RRC_CONN_ACT_REL_INTRA_HHO</formula>
    <kpi_info>
      <title>RRC_CONN_ACT_REL_INTRA_HHO (M1001C642)</title>
      <use>The number of RRC active releases due to intra-frequency inter-RNC hard handover. UPDATED: When the RNC receives RANAP: IU RELEASE COMMAND with cause "successful relocation" from the CN.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_ACT_REL_INTRA_HHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_ACT_REL_INTRA_HHO (M1001C642)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_ACT_REL_GANHO">
    <formula>SERVLEV.RRC_CONN_ACT_REL_GANHO</formula>
    <kpi_info>
      <title>RRC_CONN_ACT_REL_GANHO (M1001C643)</title>
      <use>The number of RRC active releases due to inter-system handover to Generic Access Network (GAN). UPDATED: When the RNC receives RANAP: IU RELEASE COMMAND with cause "successful relocation" from the CN.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_ACT_REL_GANHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_ACT_REL_GANHO (M1001C643)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_ACT_REL_HHO">
    <formula>SERVLEV.RRC_CONN_ACT_REL_HHO</formula>
    <kpi_info>
      <title>RRC_CONN_ACT_REL_HHO (M1001C800)</title>
      <use>The number of RRC active releases due to inter-frequency inter-RNC hard handover. UPDATED: When the RNC receives RANAP: IU RELEASE COMMAND with cause "successful relocation" from the CN.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_ACT_REL_HHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_ACT_REL_HHO (M1001C800)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_ACT_REL_ISHO">
    <formula>SERVLEV.RRC_CONN_ACT_REL_ISHO</formula>
    <kpi_info>
      <title>RRC_CONN_ACT_REL_ISHO (M1001C803)</title>
      <use>The number of RRC active releases due to inter system handover to GSM or LTE, or due to SRNS CONTEXT REQUEST received from the CN. UPDATED: When the RNC receives RANAP: IU RELEASE COMMAND with cause 'successful relocation' from the CN. Also RANAP: SRNS CONTEXT REQUEST received for a PS call triggers this counter update, even if it is not always reselection to another radio technology but can also be reselection to another RNC.
Note: This counter doesn't have a formula and the default (SUM) was used.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_ACT_REL_ISHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_ACT_REL_ISHO (M1001C803)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_VOICE_HHO">
    <formula>SERVLEV.RAB_ACT_REL_CS_VOICE_HHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_VOICE_HHO (M1001C644)</title>
      <use>The number of RAB releases due to Inter-RNC HHO for CS voice calls. UPDATED:When the RNC receives a RANAP:IU RELEASE COMMAND message from a core network in the end of hard handover procedure, and the RAB type is CS voice.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_VOICE_HHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_VOICE_HHO (M1001C644)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_CONV_HHO">
    <formula>SERVLEV.RAB_ACT_REL_CS_CONV_HHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_CONV_HHO (M1001C645)</title>
      <use>The number of RAB releases due to Inter-RNC HHO for CS data conversational calls. UPDATED:When the RNC receives a RANAP:IU RELEASE COMMAND message from a core network in the end of hard handover procedure, and the RAB type is CS data conversational.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_CONV_HHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_CONV_HHO (M1001C645)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_STREA_HHO">
    <formula>SERVLEV.RAB_ACT_REL_CS_STREA_HHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_STREA_HHO (M1001C646)</title>
      <use>The number of RAB releases due to Inter-RNC HHO for CS data streaming calls. UPDATED:When the RNC receives a RANAP:IU RELEASE COMMAND message from a core network in the end of hard handover procedure, and the RAB type is CS data streaming.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_STREA_HHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_STREA_HHO (M1001C646)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_VOICE_ISHO">
    <formula>SERVLEV.RAB_ACT_REL_CS_VOICE_ISHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_VOICE_ISHO (M1001C647)</title>
      <use>The number of RAB releases due to Inter-system handover to GSM for CS voice calls. UPDATED:When the RNC receives a RANAP:IU RELEASE COMMAND message from a core network in the end of Inter-system handover procedure, and the RAB type is CS voice.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_VOICE_ISHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_VOICE_ISHO (M1001C647)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_CONV_ISHO">
    <formula>SERVLEV.RAB_ACT_REL_CS_CONV_ISHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_CONV_ISHO (M1001C648)</title>
      <use>The number of RAB releases due to Inter-system handover to GSM for CS data conversational calls. UPDATED:When the RNC receives a RANAP:IU RELEASE COMMAND message from a core network in the end of Inter-system handover procedure, and the RAB type is CS data conversational.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_CONV_ISHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_CONV_ISHO (M1001C648)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_STREA_ISHO">
    <formula>SERVLEV.RAB_ACT_REL_CS_STREA_ISHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_STREA_ISHO (M1001C649)</title>
      <use>The number of RAB releases due to Inter-system handover to GSM for CS data streaming calls. UPDATED:When the RNC receives a RANAP:IU RELEASE COMMAND message from a core network in the end of Inter-system handover procedure, and the RAB type is CS data streaming.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_STREA_ISHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_STREA_ISHO (M1001C649)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_CS_VOICE_GANHO">
    <formula>SERVLEV.RAB_ACT_REL_CS_VOICE_GANHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_CS_VOICE_GANHO (M1001C650)</title>
      <use>The number of RAB releases due to Inter-system handover to Generic Access Network (GAN) for CS voice calls. UPDATED:When the RNC receives a RANAP:IU RELEASE COMMAND message from a core network in the end of Inter-system handover to GAN procedure, and the RAB type is CS voice.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_CS_VOICE_GANHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_CS_VOICE_GANHO (M1001C650)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_STP_ATT_PS_STREA">
    <formula>SERVLEV.RAB_RELOC_STP_ATT_PS_STREA</formula>
    <kpi_info>
      <title>RAB_RELOC_STP_ATT_PS_STREA (M1001C651)</title>
      <use>The number of attempted PS streaming RAB setups during relocation procedure. UPDATED:When a target RNC of HHO or relocation receives a RANAP: RELOCATION REQUEST message from a core network, and the RAB type is PS data streaming.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_STP_ATT_PS_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_STP_ATT_PS_STREA (M1001C651)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_ACC_COMP_PS_STREA">
    <formula>SERVLEV.RAB_RELOC_ACC_COMP_PS_STREA</formula>
    <kpi_info>
      <title>RAB_RELOC_ACC_COMP_PS_STREA (M1001C652)</title>
      <use>The number of successfully established PS streaming RABs during relocation procedure. UPDATED:When a target RNC of HHO or relocation sends a RANAP: RELOCATION COMPLETE message to a core network after a successful incoming SRNC relocation, Inter-RNC HHO or ISHO procedure, and the RAB type is PS data streaming.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_ACC_COMP_PS_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_ACC_COMP_PS_STREA (M1001C652)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_STP_ATT_CS_VOICE">
    <formula>SERVLEV.RAB_RELOC_STP_ATT_CS_VOICE</formula>
    <kpi_info>
      <title>RAB_RELOC_STP_ATT_CS_VOICE (M1001C653)</title>
      <use>The number of attempted CS voice RAB setups during relocation procedure. UPDATED:When a target RNC of HHO or relocation receives a RANAP: RELOCATION REQUEST message from a core network, and the RAB type is CS voice.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_STP_ATT_CS_VOICE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_STP_ATT_CS_VOICE (M1001C653)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_ACC_COMP_CS_VOICE">
    <formula>SERVLEV.RAB_RELOC_ACC_COMP_CS_VOICE</formula>
    <kpi_info>
      <title>RAB_RELOC_ACC_COMP_CS_VOICE (M1001C654)</title>
      <use>The number of successfully established CS voice RABs during relocation procedure. UPDATED:When a target RNC of HHO or relocation sends a RANAP: RELOCATION COMPLETE message to a core network after a successful incoming SRNC relocation, Inter-RNC HHO or ISHO procedure, and the RAB type is CS voice.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_ACC_COMP_CS_VOICE)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_ACC_COMP_CS_VOICE (M1001C654)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_STP_ATT_CS_CONV">
    <formula>SERVLEV.RAB_RELOC_STP_ATT_CS_CONV</formula>
    <kpi_info>
      <title>RAB_RELOC_STP_ATT_CS_CONV (M1001C655)</title>
      <use>The number of attempted CS data conversational RAB setups during relocation procedure. UPDATED:When a target RNC of HHO or relocation receives a RANAP: RELOCATION REQUEST message from a core network, and the RAB type is CS data conversational.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_STP_ATT_CS_CONV)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_STP_ATT_CS_CONV (M1001C655)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_ACC_COMP_CS_CONV">
    <formula>SERVLEV.RAB_RELOC_ACC_COMP_CS_CONV</formula>
    <kpi_info>
      <title>RAB_RELOC_ACC_COMP_CS_CONV (M1001C656)</title>
      <use>The number of successfully established CS data conversational RABs during relocation procedure. UPDATED:When a target RNC of HHO or relocation sends a RANAP: RELOCATION COMPLETE message to a core network after a successful incoming SRNC relocation, Inter-RNC HHO or ISHO procedure, and the RAB type is CS data conversational.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_ACC_COMP_CS_CONV)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_ACC_COMP_CS_CONV (M1001C656)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_STP_ATT_CS_STREA">
    <formula>SERVLEV.RAB_RELOC_STP_ATT_CS_STREA</formula>
    <kpi_info>
      <title>RAB_RELOC_STP_ATT_CS_STREA (M1001C657)</title>
      <use>The number of attempted CS data streaming RAB setups during relocation procedure. UPDATED:When a target RNC of HHO or relocation receives a RANAP: RELOCATION REQUEST message from a core network, and the RAB type is CS data streaming.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_STP_ATT_CS_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_STP_ATT_CS_STREA (M1001C657)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_ACC_COMP_CS_STREA">
    <formula>SERVLEV.RAB_RELOC_ACC_COMP_CS_STREA</formula>
    <kpi_info>
      <title>RAB_RELOC_ACC_COMP_CS_STREA (M1001C658)</title>
      <use>The number of successfully established CS data streaming RABs during relocation procedure. UPDATED:When a target RNC of HHO or relocation sends a RANAP: RELOCATION COMPLETE message to a core network after a successful incoming SRNC relocation, Inter-RNC HHO or ISHO procedure, and the RAB type is CS data streaming.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_ACC_COMP_CS_STREA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_ACC_COMP_CS_STREA (M1001C658)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_1_DL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_1_DL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_1_DL (M1001C659)</title>
      <use>The number of NRT RAB setup attempts for DL maximum bitrate value inside the Class 1 range. UPDATED: When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) downlink maximum bitrate inside the Class 1 range (BITRATE&lt;= 384 kbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_1_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_1_DL (M1001C659)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_2_DL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_2_DL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_2_DL (M1001C660)</title>
      <use>The number of NRT RAB setup attempts for DL maximum bitrate value inside the Class 2 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) downlink maximum bitrate inside the Class 2 range (384 kbps&lt; BITRATE&lt;= 1.8 Mbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_2_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_2_DL (M1001C660)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_3_DL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_3_DL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_3_DL (M1001C661)</title>
      <use>The number of NRT RAB setup attempts for DL maximum bitrate value inside the Class 3 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) downlink maximum bitrate inside the Class 3 range (1.8 Mbps &lt;BITRATE&lt;= 3.6 Mbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_3_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_3_DL (M1001C661)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_4_DL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_4_DL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_4_DL (M1001C662)</title>
      <use>The number of NRT RAB setup attempts for DL maximum bitrate value inside the Class 4 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) downlink maximum bitrate inside the Class 4 range ( 3.6 Mbps &lt;BITRATE&lt;= 7.2 Mbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_4_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_4_DL (M1001C662)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_5_DL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_5_DL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_5_DL (M1001C663)</title>
      <use>The number of NRT RAB setup attempts for DL maximum bitrate value inside the Class 5 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) downlink maximum bitrate inside the Class 5 range ( 7.2 Mbps &lt;BITRATE&lt;= 10 Mbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_5_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_5_DL (M1001C663)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_6_DL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_6_DL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_6_DL (M1001C664)</title>
      <use>The number of NRT RAB setup attempts for DL maximum bitrate value inside the Class 6 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) downlink maximum bitrate inside the Class 6 range (10 Mbps &lt;BITRATE&lt;= 14 Mbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_6_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_6_DL (M1001C664)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_7_DL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_7_DL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_7_DL (M1001C665)</title>
      <use>The number of NRT RAB setup attempts for DL maximum bitrate value inside the Class 7 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) downlink maximum bitrate inside the Class 7 range (BITRATE&gt; 14.4 Mbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_7_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_7_DL (M1001C665)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_1_UL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_1_UL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_1_UL (M1001C666)</title>
      <use>The number of NRT RAB setup attempts for UL maximum bitrate value inside the Class 1 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) uplink maximum bitrate inside the Class 1 range (BITRATE&lt;= 128 kbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_1_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_1_UL (M1001C666)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_2_UL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_2_UL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_2_UL (M1001C667)</title>
      <use>The number of NRT RAB setup attempts for UL maximum bitrate value inside the Class 2 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) uplink maximum bitrate inside the Class 2 range (128 kbps &lt;BITRATE&lt;= 384 kbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_2_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_2_UL (M1001C667)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_3_UL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_3_UL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_3_UL (M1001C668)</title>
      <use>The number of NRT RAB setup attempts for UL maximum bitrate value inside the Class 3 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) uplink maximum bitrate inside the Class 3 range (384 kbps &lt;BITRATE&lt;= 1 Mbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_3_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_3_UL (M1001C668)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_4_UL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_4_UL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_4_UL (M1001C669)</title>
      <use>The number of NRT RAB setup attempts for UL maximum bitrate value inside the Class 4 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) uplink maximum bitrate inside the Class 4 range (1 Mbps &lt;BITRATE&lt;= 2 Mbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_4_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_4_UL (M1001C669)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_BR_CLASS_5_UL">
    <formula>SERVLEV.RAB_STP_ATT_BR_CLASS_5_UL</formula>
    <kpi_info>
      <title>RAB_STP_ATT_BR_CLASS_5_UL (M1001C670)</title>
      <use>The number of NRT RAB setup attempts for UL maximum bitrate value inside the Class 5 range. UPDATED:When the RNC receives a RANAP:RAB ASSIGNMENT REQUEST message or a RANAP: RELOCATION REQUEST message from a core network with NRT RAB (interactive/background) uplink maximum bitrate inside the Class 5 range (BITRATE&gt; 2 Mbps).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_BR_CLASS_5_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_BR_CLASS_5_UL (M1001C670)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_CS_VOICE_OVER_HSPA">
    <formula>SERVLEV.UE_SUPP_CS_VOICE_OVER_HSPA</formula>
    <kpi_info>
      <title>UE_SUPP_CS_VOICE_OVER_HSPA (M1001C671)</title>
      <use>The number of RRC connection establishments by UEs that support CS Voice over HSPA. UPDATED:When an RRC connection is successfully established either via an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports CS Voice over HSPA.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_CS_VOICE_OVER_HSPA)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_CS_VOICE_OVER_HSPA (M1001C671)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_13_14">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_13_14</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_13_14 (M1001C672)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 13 or 14. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports HS-DSCH physical layer category 13 or 14.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_13_14)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_13_14 (M1001C672)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_15_16">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_15_16</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_15_16 (M1001C673)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 15 or 16. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports HS-DSCH physical layer category 15 or 16.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_15_16)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_15_16 (M1001C673)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_17_18">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_17_18</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_17_18 (M1001C674)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 17 or 18. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports HS-DSCH physical layer category 17 or 18.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_17_18)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_17_18 (M1001C674)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_STRATUM_REL_IND_7">
    <formula>SERVLEV.ACCESS_STRATUM_REL_IND_7</formula>
    <kpi_info>
      <title>ACCESS_STRATUM_REL_IND_7 (M1001C675)</title>
      <use>The number of RRC connection establishments by UEs with access stratum release indicator release 7. UPDATED:When the access stratum release indicator release 7 is received from the UE in an RRC Connection Setup Complete message.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_STRATUM_REL_IND_7)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_STRATUM_REL_IND_7 (M1001C675)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_EDCH_CATEGORY_7">
    <formula>SERVLEV.UE_SUPP_EDCH_CATEGORY_7</formula>
    <kpi_info>
      <title>UE_SUPP_EDCH_CATEGORY_7 (M1001C676)</title>
      <use>The number of RRC connection establishments by UEs supporting the E-DCH category 7 defined in 3GPP TS 25.306. UPDATED:When the RNC receives an RRC Connection Setup Complete message from a UE and the E-DCH physical layer category information 7 can be obtained from the message.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_EDCH_CATEGORY_7)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_EDCH_CATEGORY_7 (M1001C676)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_CPC">
    <formula>SERVLEV.UE_SUPP_CPC</formula>
    <kpi_info>
      <title>UE_SUPP_CPC (M1001C677)</title>
      <use>The number of RRC connection establishments by UEs that support Continuous Packet Connectivity (CPC). UPDATED:When an RRC connection is successfully established either via an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports Continuous Packet Connectivity.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_CPC)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_CPC (M1001C677)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_STP_ATT_CCH">
    <formula>SERVLEV.RRC_CONN_STP_ATT_CCH</formula>
    <kpi_info>
      <title>RRC_CONN_STP_ATT_CCH (M1001C678)</title>
      <use>The number of RRC connection requests that are handled with CCH. Also counter M1001C0 is updated along with this counter. UPDATED:When the RNC receives an RRC CONNECTION REQUEST message and starts to reserve resources for the RRC connection on CCH. This counter is updated for the cell where the RRC CONNECTION REQUEST message is received.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_STP_ATT_CCH)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_STP_ATT_CCH (M1001C678)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_ACC_COMP_CCH">
    <formula>SERVLEV.RRC_CONN_ACC_COMP_CCH</formula>
    <kpi_info>
      <title>RRC_CONN_ACC_COMP_CCH (M1001C679)</title>
      <use>The number of successfully established RRC connections using CCH. Also counter M1001C8 is updated along with this counter. UPDATED:When the RNC receives an RRC CONNECTION SETUP COMPLETE message from the UE indicating a successful RRC connection setup on CCH. This counter is updated for the cell where the RRC CONNECTION SETUP COMPLETE message is received.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_ACC_COMP_CCH)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_ACC_COMP_CCH (M1001C679)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_ACC_REL_RESEL_CCH">
    <formula>SERVLEV.RRC_CONN_ACC_REL_RESEL_CCH</formula>
    <kpi_info>
      <title>RRC_CONN_ACC_REL_RESEL_CCH (M1001C680)</title>
      <use>The number of RRC connection access releases due to cell reselection for RRC connection establishments using CCH. This is the case when the UE has sent a new RRC connection request to the new cell while the RRC connection setup phase is still ongoing in the old cell. The RNC releases resources for the old RRC connection attempt. Also counter M1001C241 is updated along with this counter. UPDATED:When the RNC receives an RRC CONNECTION REQUEST message from another cell from a UE for which RRC connection setup on CCH is already ongoing. This counter is updated for the cell where the original RRC CONNECTION REQUEST message was received.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_ACC_REL_RESEL_CCH)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_ACC_REL_RESEL_CCH (M1001C680)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_STP_ATT_REPEAT_CCH">
    <formula>SERVLEV.RRC_CONN_STP_ATT_REPEAT_CCH</formula>
    <kpi_info>
      <title>RRC_CONN_STP_ATT_REPEAT_CCH (M1001C681)</title>
      <use>The number of repeated RRC connection setup attempts using CCH. Also counter M1001C242 is updated along with this counter. UPDATED: When the RNC receives an RRC CONNECTION REQUEST message from a UE within MAX(WaitTimeRRC+N300*T300+2.5s, 17.5s), after rejecting the previous attempt with an RRC CONNECTION REJECT. This counter is updated for the cell where the repeated RRC CONNECTION REQUEST message is received.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_STP_ATT_REPEAT_CCH)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_STP_ATT_REPEAT_CCH (M1001C681)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SPARE_6_SERVICELEVEL">
    <formula>SERVLEV.SPARE_6_SERVICELEVEL</formula>
    <kpi_info>
      <title>SPARE_6_SERVICELEVEL (M1001C684)</title>
      <use>Spare counter for internal use. UPDATED:Spare counter for internal use.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SPARE_6_SERVICELEVEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SPARE_6_SERVICELEVEL (M1001C684)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SPARE_7_SERVICELEVEL">
    <formula>SERVLEV.SPARE_7_SERVICELEVEL</formula>
    <kpi_info>
      <title>SPARE_7_SERVICELEVEL (M1001C685)</title>
      <use>Spare counter for internal use. UPDATED:Spare counter for internal use.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SPARE_7_SERVICELEVEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SPARE_7_SERVICELEVEL (M1001C685)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SPARE_8_SERVICELEVEL">
    <formula>SERVLEV.SPARE_8_SERVICELEVEL</formula>
    <kpi_info>
      <title>SPARE_8_SERVICELEVEL (M1001C686)</title>
      <use>Spare counter for internal use. UPDATED:Spare counter for internal use.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SPARE_8_SERVICELEVEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SPARE_8_SERVICELEVEL (M1001C686)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SPARE_9_SERVICELEVEL">
    <formula>SERVLEV.SPARE_9_SERVICELEVEL</formula>
    <kpi_info>
      <title>SPARE_9_SERVICELEVEL (M1001C687)</title>
      <use>Spare counter for internal use. UPDATED:Spare counter for internal use.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SPARE_9_SERVICELEVEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SPARE_9_SERVICELEVEL (M1001C687)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="SPARE_10_SERVICELEVEL">
    <formula>SERVLEV.SPARE_10_SERVICELEVEL</formula>
    <kpi_info>
      <title>SPARE_10_SERVICELEVEL (M1001C688)</title>
      <use>Spare counter for internal use. UPDATED:Spare counter for internal use.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(SPARE_10_SERVICELEVEL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SPARE_10_SERVICELEVEL (M1001C688)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_ACT_FAIL_TRANS">
    <formula>SERVLEV.RRC_CONN_ACT_FAIL_TRANS</formula>
    <kpi_info>
      <title>RRC_CONN_ACT_FAIL_TRANS (M1001C689)</title>
      <use>The number of RRC active failures due to transmission. UPDATED:When a transmission failure occurs and causes the release of the RRC connection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_ACT_FAIL_TRANS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_ACT_FAIL_TRANS (M1001C689)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_CS_VOICE_TRANS">
    <formula>SERVLEV.RAB_ACT_FAIL_CS_VOICE_TRANS</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_CS_VOICE_TRANS (M1001C690)</title>
      <use>The number of RAB active failures caused by transmission for CS voice. UPDATED:When the RNC initiates RAB release either using RANAP: IU RELEASE REQUEST or RANAP: RAB RELEASE REQUEST after a transmission failure happened.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_CS_VOICE_TRANS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_CS_VOICE_TRANS (M1001C690)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_CS_CONV_TRANS">
    <formula>SERVLEV.RAB_ACT_FAIL_CS_CONV_TRANS</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_CS_CONV_TRANS (M1001C691)</title>
      <use>The number of RAB active failures caused by transmission for CS data conversational. UPDATED:When the RNC initiates RAB release either using RANAP: IU RELEASE REQUEST or RANAP: RAB RELEASE REQUEST after a transmission failure happened.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_CS_CONV_TRANS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_CS_CONV_TRANS (M1001C691)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_CS_STREA_TRANS">
    <formula>SERVLEV.RAB_ACT_FAIL_CS_STREA_TRANS</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_CS_STREA_TRANS (M1001C692)</title>
      <use>The number of RAB active failures caused by transmission for CS data streaming. UPDATED:When the RNC initiates RAB release either using RANAP: IU RELEASE REQUEST or RANAP: RAB RELEASE REQUEST after a transmission failure happened.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_CS_STREA_TRANS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_CS_STREA_TRANS (M1001C692)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PS_STREA_TRANS">
    <formula>SERVLEV.RAB_ACT_FAIL_PS_STREA_TRANS</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PS_STREA_TRANS (M1001C693)</title>
      <use>The number of RAB active failures caused by transmission for PS data streaming. UPDATED:When the RNC initiates RAB release either using RANAP: IU RELEASE REQUEST or RANAP: RAB RELEASE REQUEST after a transmission failure happened.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PS_STREA_TRANS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PS_STREA_TRANS (M1001C693)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PS_INTER_TRANS">
    <formula>SERVLEV.RAB_ACT_FAIL_PS_INTER_TRANS</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PS_INTER_TRANS (M1001C694)</title>
      <use>The number of RAB active failures caused by transmission for PS data interactive. UPDATED:When the RNC initiates RAB release either using RANAP: IU RELEASE REQUEST or RANAP: RAB RELEASE REQUEST after a transmission failure happened.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PS_INTER_TRANS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PS_INTER_TRANS (M1001C694)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PS_BACKG_TRANS">
    <formula>SERVLEV.RAB_ACT_FAIL_PS_BACKG_TRANS</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PS_BACKG_TRANS (M1001C695)</title>
      <use>The number of RAB active failures caused by transmission for PS data background. UPDATED:When the RNC initiates RAB release either using RANAP: IU RELEASE REQUEST or RANAP: RAB RELEASE REQUEST after a transmission failure happened.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PS_BACKG_TRANS)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PS_BACKG_TRANS (M1001C695)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_19_20">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_19_20</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_19_20 (M1001C696)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 19 or 20. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports HS-DSCH physical layer category 19 or 20.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_19_20)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_19_20 (M1001C696)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_21_22">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_21_22</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_21_22 (M1001C697)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 21 or 22. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports HS-DSCH physical layer category 21 or 22.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_21_22)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_21_22 (M1001C697)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_23_24">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_23_24</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_23_24 (M1001C698)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 23 or 24. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either via an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports HS-DSCH physical layer category 23 or 24.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_23_24)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_23_24 (M1001C698)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_STRATUM_REL_IND_8">
    <formula>SERVLEV.ACCESS_STRATUM_REL_IND_8</formula>
    <kpi_info>
      <title>ACCESS_STRATUM_REL_IND_8 (M1001C699)</title>
      <use>The number of RRC connection establishments by UEs with access stratum release indicator release 8. UPDATED:When an RRC connection is successfully established either via RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_STRATUM_REL_IND_8)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_STRATUM_REL_IND_8 (M1001C699)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_AMR_PSNRT">
    <formula>SERVLEV.RAB_STP_ATT_AMR_PSNRT</formula>
    <kpi_info>
      <title>RAB_STP_ATT_AMR_PSNRT (M1001C700)</title>
      <use>The number of RAB setup attemps the result of which would be a multi-RAB combination ""CS AMR + PS NRT"". UPDATED: This counter is updated whenever CN requests that the Multi-RAB combination in question be set up. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_AMR_PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_AMR_PSNRT (M1001C700)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_AMR_PSNRT">
    <formula>SERVLEV.RAB_ACC_COMP_AMR_PSNRT</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_AMR_PSNRT (M1001C701)</title>
      <use>The number of RAB access completed for a multi-RAB combination ""CS AMR +1PS NRT"". UPDATED: This counter is updated when the RNC receives a setup complete message from the UE, indicating that the Multi-RAB combination in question is successfully established, and sends a response message to CN indicating that the RAB is successfully established. This is the case when a PS/CS RAB already exists and a CS/PS RAB is set up in addition to it (for the same RRC connection).
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_AMR_PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_AMR_PSNRT (M1001C701)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_AMR_PSNRT">
    <formula>SERVLEV.RAB_ACT_COMP_AMR_PSNRT</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_AMR_PSNRT (M1001C702)</title>
      <use>The number of RAB active completions and active releases for the multi-RAB combination ""CS AMR + 1 PS NRT"". UPDATED: When RAB active is completed for the RAB type in question. Also RAB active releases due to SRNC Relocation, Inter-system handover, Inter-RNC hard handover and pre-emption update this counter.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_AMR_PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_AMR_PSNRT (M1001C702)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_AMR_PSNRT">
    <formula>SERVLEV.RAB_ACT_FAIL_AMR_PSNRT</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_AMR_PSNRT (M1001C703)</title>
      <use>The number of RAB active failures for multi RAB combination ""CS AMR + PS NRT"". UPDATED: When one of the RAB in the multi RAB combination in question fails in the active phase of the call.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_AMR_PSNRT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_AMR_PSNRT (M1001C703)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="INTER_SYS_LTE_HHO_FAIL_CONF">
    <formula>SERVLEV.INTER_SYS_LTE_HHO_FAIL_CONF</formula>
    <kpi_info>
      <title>INTER_SYS_LTE_HHO_FAIL_CONF (M1001C704)</title>
      <use>The number of incoming inter-system handovers rejected because the feature is disabled in the cell with parameter WCEL-LTECellReselecPSISHO or RAN2176 feature is disabled. Also M1001C220 is updated along with this counter. UPDATED: When the RNC sends RANAP: RELOCATION FAILURE to the core network after an attempted incoming inter-system handover from LTE.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(INTER_SYS_LTE_HHO_FAIL_CONF)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>INTER_SYS_LTE_HHO_FAIL_CONF (M1001C704)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HS_CELL_FACH">
    <formula>SERVLEV.UE_SUPP_HS_CELL_FACH</formula>
    <kpi_info>
      <title>UE_SUPP_HS_CELL_FACH (M1001C705)</title>
      <use>The number of RRC connections established by UEs supporting the HS Cell_FACH downlink. The counter is updated independently of possible support for HS Cell_FACH uplink. UPDATED: When an RRC connection is successfully established via RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports HS Cell_FACH downlink.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HS_CELL_FACH)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HS_CELL_FACH (M1001C705)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_FLEX_RLC_UL">
    <formula>SERVLEV.UE_SUPP_FLEX_RLC_UL</formula>
    <kpi_info>
      <title>UE_SUPP_FLEX_RLC_UL (M1001C706)</title>
      <use>The number of RRC connections established by UEs supporting Flexible-RLC in the uplink direction. UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports Flexible-RLC in the uplink direction.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_FLEX_RLC_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_FLEX_RLC_UL (M1001C706)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_25_26">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_25_26</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_25_26 (M1001C707)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 25 or 26. The classes are defined in 3GPP TS 25.306. UPDATED: When an RRC connection is successfully established either with an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports HS-DSCH physical layer category 25 or 26.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_25_26)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_25_26 (M1001C707)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_27_28">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_27_28</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_27_28 (M1001C708)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 27 or 28. The classes are defined in 3GPP TS 25.306. UPDATED: When an RRC connection is successfully established either with an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports HS-DSCH physical layer category 27 or 28.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_27_28)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_27_28 (M1001C708)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_STRATUM_REL_IND_9">
    <formula>SERVLEV.ACCESS_STRATUM_REL_IND_9</formula>
    <kpi_info>
      <title>ACCESS_STRATUM_REL_IND_9 (M1001C709)</title>
      <use>The number of RRC connection establishments by UEs with access stratum release indicator release 9. UPDATED: When an RRC connection is successfully established either with RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_STRATUM_REL_IND_9)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_STRATUM_REL_IND_9 (M1001C709)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_EDCH_CATEGORY_8">
    <formula>SERVLEV.UE_SUPP_EDCH_CATEGORY_8</formula>
    <kpi_info>
      <title>UE_SUPP_EDCH_CATEGORY_8 (M1001C711)</title>
      <use>The number of RRC connection establishments by UEs supporting the E-DCH category 8 defined in 3GPP TS 25.306. UPDATED: When the RNC receives an RRC Connection Setup Complete message from a UE and the E-DCH physical layer category information 8 can be obtained from the message. The counter is updated also during incoming HHO/ISHO/relocation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_EDCH_CATEGORY_8)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_EDCH_CATEGORY_8 (M1001C711)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_EDCH_CATEGORY_9">
    <formula>SERVLEV.UE_SUPP_EDCH_CATEGORY_9</formula>
    <kpi_info>
      <title>UE_SUPP_EDCH_CATEGORY_9 (M1001C712)</title>
      <use>The number of RRC connection establishments by UEs supporting the E-DCH category 8 defined in 3GPP TS 25.306. UPDATED: When the RNC receives an RRC Connection Setup Complete message from a UE and the E-DCH physical layer category information 8 can be obtained from the message. The counter is updated also during incoming HHO/ISHO/relocation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_EDCH_CATEGORY_9)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_EDCH_CATEGORY_9 (M1001C712)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HS_CELL_FACH_UL">
    <formula>SERVLEV.UE_SUPP_HS_CELL_FACH_UL</formula>
    <kpi_info>
      <title>UE_SUPP_HS_CELL_FACH_UL (M1001C713)</title>
      <use>The number of RRC connections established by UEs supporting the HS Cell_FACH uplink (HS-RACH). Also "M1001C705 UE SUPPORT FOR HS CELL_FACH" is updated along with this counter because if the UE supports HS-FACH uplink, it supports also HS-FACH downlink. UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports HS Cell_FACH uplink.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HS_CELL_FACH_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HS_CELL_FACH_UL (M1001C713)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="CS_VOICE_DRP_AFT_MISSING_ADJ">
    <formula>SERVLEV.CS_VOICE_DRP_AFT_MISSING_ADJ</formula>
    <kpi_info>
      <title>CS_VOICE_DRP_AFT_MISSING_ADJ (M1001C714)</title>
      <use>The number of CS Voice call RAB active failures after the UE has reported detected set cell in 1A or 1C event, and handover could not be initiated because the reported cell is not included in ADJS or ADJD list. Also one of RAB Active Failure counters is updated along with this counter. UPDATED: When CS voice call RAB active failure happens within 10 seconds after receiving 1A/1C event from the UE asking to add non-identified detected set cell to the active set. Here 10 seconds is the time between the latest unidentified cell event, and the moment when all radio links are deleted. Possible T314 expiry time is not anymore part of the time criteria.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(CS_VOICE_DRP_AFT_MISSING_ADJ)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CS_VOICE_DRP_AFT_MISSING_ADJ (M1001C714)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="EUTRA_CAPABILITY_FDD">
    <formula>SERVLEV.EUTRA_CAPABILITY_FDD</formula>
    <kpi_info>
      <title>EUTRA_CAPABILITY_FDD (M1001C715)</title>
      <use>The number of RRC connection establishments by UEs supporting E-UTRA FDD. UPDATED: When an RRC connection is successfully established either via RRC Connection Request or incoming Relocation/HHO/ISHO by an UE that supports E-UTRA FDD. The UE capability information is received from the UE in RRC: RRC CONNECTION SETUP COMPLETE or from the core network with RANAP: RELOCATION REQUEST.In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(EUTRA_CAPABILITY_FDD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>EUTRA_CAPABILITY_FDD (M1001C715)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="EUTRA_CAPABILITY_TDD">
    <formula>SERVLEV.EUTRA_CAPABILITY_TDD</formula>
    <kpi_info>
      <title>EUTRA_CAPABILITY_TDD (M1001C716)</title>
      <use>The number of RRC connection establishments by UEs supporting E-UTRA TDD. UPDATED: When an RRC connection is successfully established either via RRC Connection Request or incoming Relocation/HHO/ISHO by an UE that supports E-UTRA TDD. The UE capability information is received from the UE in RRC: RRC CONNECTION SETUP COMPLETE or from the core network with RANAP: RELOCATION REQUEST.In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(EUTRA_CAPABILITY_TDD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>EUTRA_CAPABILITY_TDD (M1001C716)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_UMTS_850">
    <formula>SERVLEV.UE_SUPP_UMTS_850</formula>
    <kpi_info>
      <title>UE_SUPP_UMTS_850 (M1001C722)</title>
      <use>The number of RRC connections established by UEs supporting UMTS band V (850 MHz). UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports UMTS band V.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_UMTS_850)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_UMTS_850 (M1001C722)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_UMTS_900">
    <formula>SERVLEV.UE_SUPP_UMTS_900</formula>
    <kpi_info>
      <title>UE_SUPP_UMTS_900 (M1001C723)</title>
      <use>The number of RRC connections established by UEs supporting UMTS band VIII (900 MHz). UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports UMTS band VIII.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_UMTS_900)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_UMTS_900 (M1001C723)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_UMTS_1500">
    <formula>SERVLEV.UE_SUPP_UMTS_1500</formula>
    <kpi_info>
      <title>UE_SUPP_UMTS_1500 (M1001C724)</title>
      <use>The number of RRC connections established by UEs supporting UMTS band XI (1500 MHz). UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports UMTS band XI.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_UMTS_1500)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_UMTS_1500 (M1001C724)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_UMTS_1700">
    <formula>SERVLEV.UE_SUPP_UMTS_1700</formula>
    <kpi_info>
      <title>UE_SUPP_UMTS_1700 (M1001C725)</title>
      <use>The number of RRC connections established by UEs supporting UMTS band IV (1700 MHz / AWS). UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports UMTS band IV.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_UMTS_1700)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_UMTS_1700 (M1001C725)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_UMTS_1900">
    <formula>SERVLEV.UE_SUPP_UMTS_1900</formula>
    <kpi_info>
      <title>UE_SUPP_UMTS_1900 (M1001C726)</title>
      <use>The number of RRC connections established by UEs supporting UMTS band II (1900 MHz). UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports UMTS band II.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_UMTS_1900)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_UMTS_1900 (M1001C726)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_UMTS_2100">
    <formula>SERVLEV.UE_SUPP_UMTS_2100</formula>
    <kpi_info>
      <title>UE_SUPP_UMTS_2100 (M1001C727)</title>
      <use>The number of RRC connections established by UEs supporting UMTS band I (2100 MHz). UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports UMTS band I.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_UMTS_2100)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_UMTS_2100 (M1001C727)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_DBHSDPA_9_1">
    <formula>SERVLEV.UE_SUPP_DBHSDPA_9_1</formula>
    <kpi_info>
      <title>UE_SUPP_DBHSDPA_9_1 (M1001C728)</title>
      <use>The number of RRC connections established by UEs supporting DB-HSDPA band combination Rel9-1. This refers to table 5.0aA of 3GPP TS 25.101. Configuration 9-1 means UL band I (2100 MHz) or VIII (900 MHz) and DL bands I (2100 MHz) and VIII (900 MHz). It is possible that also M1001C729 and M1001C730 are updated along with this counter if the UE supports multiple DB-HSDPA band combinations. UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports DB-HSDPA band combination 9-1.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_DBHSDPA_9_1)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_DBHSDPA_9_1 (M1001C728)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_DBHSDPA_9_2">
    <formula>SERVLEV.UE_SUPP_DBHSDPA_9_2</formula>
    <kpi_info>
      <title>UE_SUPP_DBHSDPA_9_2 (M1001C729)</title>
      <use>The number of RRC connections established by UEs supporting DB-HSDPA band combination Rel9-2. This refers to table 5.0aA of 3GPP TS 25.101. Configuration 9-2 means UL band II (1900 MHz) or IV (1700 MHz) and DL bands II (1900 MHz) and IV (1700 MHz). It is possible that also M1001C728 and M1001C730 are updated along with this counter if the UE supports multiple DB-HSDPA band combinations. UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports DB-HSDPA band combination 9-2.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_DBHSDPA_9_2)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_DBHSDPA_9_2 (M1001C729)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_DBHSDPA_9_3">
    <formula>SERVLEV.UE_SUPP_DBHSDPA_9_3</formula>
    <kpi_info>
      <title>UE_SUPP_DBHSDPA_9_3 (M1001C730)</title>
      <use>The number of RRC connections established by UEs supporting DB-HSDPA band combination Rel9-3. This refers to table 5.0aA of 3GPP TS 25.101. Configuration 9-3 means UL band I (2100 MHz) or V (850 MHz) and DL bands I (2100 MHz) and V (850 MHz). It is possible that also M1001C728 and M1001C729 are updated along with this counter if the UE supports multiple DB-HSDPA band combinations. UPDATED: When an RRC connection is successfully established with RRC: RRC CONNECTION SETUP COMPLETE message or incoming relocation/HHO/ISHO by a UE that supports DB-HSDPA band combination 9-3.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_DBHSDPA_9_3)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_DBHSDPA_9_3 (M1001C730)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_STP_FAIL_AC_UL">
    <formula>SERVLEV.RRC_CONN_STP_FAIL_AC_UL</formula>
    <kpi_info>
      <title>RRC_CONN_STP_FAIL_AC_UL (M1001C731)</title>
      <use>The number of RRC setup failures caused by Admission Control because of uplink power limitation. M1001C3 is also updated along with this counter. UPDATED: When the RNC decides to reject the RRC connection request because of uplink power admission control.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_STP_FAIL_AC_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_STP_FAIL_AC_UL (M1001C731)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_STP_FAIL_AC_DL">
    <formula>SERVLEV.RRC_CONN_STP_FAIL_AC_DL</formula>
    <kpi_info>
      <title>RRC_CONN_STP_FAIL_AC_DL (M1001C732)</title>
      <use>The number of RRC setup failures caused by Admission Control because of downlink power limitation. M1001C3 is also updated along with this counter. UPDATED: When the RNC decides to reject the RRC connection request because of downlink power admission control.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_STP_FAIL_AC_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_STP_FAIL_AC_DL (M1001C732)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_STP_FAIL_AC_COD">
    <formula>SERVLEV.RRC_CONN_STP_FAIL_AC_COD</formula>
    <kpi_info>
      <title>RRC_CONN_STP_FAIL_AC_COD (M1001C733)</title>
      <use>The number of RRC setup failures caused by Admission Control because of downlink spreading code congestion. M1001C3 is also updated along with this counter. UPDATED: When the RNC decides to reject the RRC connection request because of downlink spreading code congestion.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_STP_FAIL_AC_COD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_STP_FAIL_AC_COD (M1001C733)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_VOICE_AC_UL">
    <formula>SERVLEV.RAB_STP_FAIL_CS_VOICE_AC_UL</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_VOICE_AC_UL (M1001C734)</title>
      <use>The number of RAB setup failures caused by admission control because of uplink power limitation for CS voice. M1001C80 is also updated along with this counter. UPDATED: When the RNC decides to reject the CS voice RAB request because of uplink power admission control.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_VOICE_AC_UL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_VOICE_AC_UL (M1001C734)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_VOICE_AC_DL">
    <formula>SERVLEV.RAB_STP_FAIL_CS_VOICE_AC_DL</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_VOICE_AC_DL (M1001C735)</title>
      <use>The number of RAB setup failures caused by admission control because of downlink power limitation for CS voice. M1001C80 is also updated along with this counter. UPDATED: When the RNC decides to reject the CS voice RAB request because of downlink power admission control.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_VOICE_AC_DL)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_VOICE_AC_DL (M1001C735)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_FAIL_CS_VOICE_AC_COD">
    <formula>SERVLEV.RAB_STP_FAIL_CS_VOICE_AC_COD</formula>
    <kpi_info>
      <title>RAB_STP_FAIL_CS_VOICE_AC_COD (M1001C736)</title>
      <use>The number of RAB setup failures caused by admission control because of downlink spreading code congestion. M1001C80 is also updated along with this counter. UPDATED: When the RNC decides to reject the CS voice RAB request because of downlink spreading code congestion.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_FAIL_CS_VOICE_AC_COD)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_FAIL_CS_VOICE_AC_COD (M1001C736)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ATT_PTT">
    <formula>SERVLEV.RAB_STP_ATT_PTT</formula>
    <kpi_info>
      <title>RAB_STP_ATT_PTT (M1001C737)</title>
      <use>The number of RAB setup attempts for PTT call. One of M1001C71, M1001C72, M1001C817, M1001C826 is also updated along with this counter. UPDATED:When RNC receives RANAP: RAB ASSIGNMENT REQUEST message from CN to initiate PTT RAB establishment, or when RANAP: RELOCATION REQUEST is received due to incoming relocation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ATT_PTT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ATT_PTT (M1001C737)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACC_COMP_PTT">
    <formula>SERVLEV.RAB_ACC_COMP_PTT</formula>
    <kpi_info>
      <title>RAB_ACC_COMP_PTT (M1001C738)</title>
      <use>The number of RAB Access Completions for PTT call. One of M1001C120, M1001C121, M1001C819, M1001C828 is also updated along with this counter. UPDATED:When RNC sends RANAP: RAB ASSIGNMENT RESPONSE to CN after successful establishment of PTT RAB, or when the target-RNC sends RANAP: RELOCATION COMPLETE to the CN.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACC_COMP_PTT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACC_COMP_PTT (M1001C738)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_COMP_PTT">
    <formula>SERVLEV.RAB_ACT_COMP_PTT</formula>
    <kpi_info>
      <title>RAB_ACT_COMP_PTT (M1001C739)</title>
      <use>The number of RAB active completions for PTT service. One of M1001C141, M1001C142, M1001C801, M1001C802, M1001C804, M1001C805 is also updated along with this counter. UPDATED:When the RNC sends a RANAP: RAB ASSIGNMENT RESPONSE or RANAP: IU RELEASE COMPLETE to the CN after normal RAB release for PTT service. The counter is also during outgoing relocation.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_COMP_PTT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_COMP_PTT (M1001C739)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_STP_ACC_FAIL_PTT">
    <formula>SERVLEV.RAB_STP_ACC_FAIL_PTT</formula>
    <kpi_info>
      <title>RAB_STP_ACC_FAIL_PTT (M1001C740)</title>
      <use>The number of PTT RAB setup/access failures. One of Interactive or Background class RAB Setup or Access Failure counters is also updated along with this counter. UPDATED:When PTT RAB assignment fails either in resource reservation (setup) or UE signalling (access) phase. The counter is updated with the same principle as existing RAB Setup and Access failure counters, but no separation to phases, only one counter.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_STP_ACC_FAIL_PTT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_STP_ACC_FAIL_PTT (M1001C740)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_FAIL_PTT">
    <formula>SERVLEV.RAB_ACT_FAIL_PTT</formula>
    <kpi_info>
      <title>RAB_ACT_FAIL_PTT (M1001C741)</title>
      <use>The number of PTT RAB active failures. One of Interactive or Background class RAB Active Failure counters is also updated along with this counter. UPDATED:When PTT RAB is released due to abnormal reason. The counter is updated with similar principle as the other RAB Active Failure counters.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_FAIL_PTT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_FAIL_PTT (M1001C741)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_HLD_TM_PTT">
    <formula>SERVLEV.RAB_HLD_TM_PTT</formula>
    <kpi_info>
      <title>RAB_HLD_TM_PTT (M1001C742)</title>
      <use>The RAB holding time of PTT call. This counter divided by M1001C739+M1001C741 gives the average holding time for the PTT RAB. One of M1001C211, M1001C213 is also updated along with this counter. UPDATED:When a PTT RAB is released either normally or abnormally, or outgoing relocation/HHO happens.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_HLD_TM_PTT)</formula>
      <unit>10 ms</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_HLD_TM_PTT (M1001C742)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_STRATUM_REL_IND_10">
    <formula>SERVLEV.ACCESS_STRATUM_REL_IND_10</formula>
    <kpi_info>
      <title>ACCESS_STRATUM_REL_IND_10 (M1001C743)</title>
      <use>The number of RRC connection establishments by UEs with access stratum release indicator release 10. UPDATED:When an RRC connection is successfully established either with RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC connection setup, this counter is updated for the target cell of the redirection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_STRATUM_REL_IND_10)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_STRATUM_REL_IND_10 (M1001C743)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="ACCESS_STRATUM_REL_IND_11">
    <formula>SERVLEV.ACCESS_STRATUM_REL_IND_11</formula>
    <kpi_info>
      <title>ACCESS_STRATUM_REL_IND_11 (M1001C744)</title>
      <use>The number of RRC connection establishments by UEs with access stratum release indicator release 11. UPDATED:When an RRC connection is successfully established either with RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO. In case of directed RRC
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(ACCESS_STRATUM_REL_IND_11)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ACCESS_STRATUM_REL_IND_11 (M1001C744)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_29_30">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_29_30</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_29_30 (M1001C745)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 29 or 30. The classes are defined in 3GPP TS 25.306. UPDATED: When an RRC connection is successfully established either with an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports HS-DSCH physical layer category 29 or 30.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_29_30)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_29_30 (M1001C745)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="UE_SUPP_HSDSCH_CLASS_31_32">
    <formula>SERVLEV.UE_SUPP_HSDSCH_CLASS_31_32</formula>
    <kpi_info>
      <title>UE_SUPP_HSDSCH_CLASS_31_32 (M1001C746)</title>
      <use>The number of RRC connection establishments by UEs supporting HS-DSCH classes 31 or 32. The classes are defined in 3GPP TS 25.306. UPDATED:When an RRC connection is successfully established either with an RRC: RRC CONNECTION REQUEST message or incoming relocation/HHO/ISHO by a UE that supports HS-DSCH physical layer category 31 or 32.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(UE_SUPP_HSDSCH_CLASS_31_32)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UE_SUPP_HSDSCH_CLASS_31_32 (M1001C746)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_CONN_STP_ATT_CSFB">
    <formula>SERVLEV.RRC_CONN_STP_ATT_CSFB</formula>
    <kpi_info>
      <title>RRC_CONN_STP_ATT_CSFB (M1001C747)</title>
      <use>The number of RRC connection setup attempts for CS fallback. This counter does not replace any other M1001 counters but is additional information on top of them. For example M1001C0 is updated along with M1001C747. The activation status of LTE layering features in the RNC does not impact counter updates. UPDATED:When the RNC receives RRC: RRC CONNECTION REQUEST message with "CSFB Indication" IE from the UE, and the RNC starts to reserve resources for the RRC connection.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_CONN_STP_ATT_CSFB)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_CONN_STP_ATT_CSFB (M1001C747)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_STP_ACC_FAIL_CSFB">
    <formula>SERVLEV.RRC_STP_ACC_FAIL_CSFB</formula>
    <kpi_info>
      <title>RRC_STP_ACC_FAIL_CSFB (M1001C748)</title>
      <use>The number of RRC connection setup/access failures for CS fallback.This counter does not replace any other M1001 counters but is additional information on top of them. The activation status of LTE layering features in the RNC does not impact counter updates.UPDATED:When the RRC connection setup fails either in the resource reservation or access phase, and RRC: RRC CONNECTION REQUEST included "CSFB Indication" IE.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_STP_ACC_FAIL_CSFB)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_STP_ACC_FAIL_CSFB (M1001C748)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ACC_REL_CSFB">
    <formula>SERVLEV.RRC_ACC_REL_CSFB</formula>
    <kpi_info>
      <title>RRC_ACC_REL_CSFB (M1001C749)</title>
      <use>The number of RRC access releases for CS fallback.This counter does not replace any other M1001 counters but is additional information on top of them. For example M1001C241 is updated along with M1001C749. The activation status of LTE layering features in the RNC does not impact counter updates.UPDATED:When the UE performing RRC connection setup with "CSFB Indication" IE in RRC: RRC CONNECTION REQUEST, and the UE sends a new RRC Connection Request to another cell and therefore the previous RRC connection setup procedure is interrupted.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ACC_REL_CSFB)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ACC_REL_CSFB (M1001C749)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_ATT_REP_CSFB">
    <formula>SERVLEV.RRC_ATT_REP_CSFB</formula>
    <kpi_info>
      <title>RRC_ATT_REP_CSFB (M1001C750)</title>
      <use>The number of RRC connection setup repetitions for CS fallback.This counter does not replace any other M1001 counters but is additional information on top of them. For example M1001C242 is updated along with M1001C750. The activation status of LTE layering features in the RNC does not impact counter updates.UPDATED:When a repeated RRC CONNECTION REQUEST is received from the same UE as the first RRC CONNECTION REQUEST with "CSFB Indication" IE during the time interval defined as the shorter one of these alternatives: A) WaitTimeRRC+N300*T300 + 2.5 s B) 17.5 s
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_ATT_REP_CSFB)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_ATT_REP_CSFB (M1001C750)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_INTER_HHO">
    <formula>SERVLEV.RAB_ACT_REL_PS_INTER_HHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_INTER_HHO (M1001C801)</title>
      <use>The number of RAB releases due to hard handover to another RNC for PS data interactive calls. UPDATED:When the RNC receives a RANAP:IU RELEASE COMMAND message from a core network in the end of hard handover procedure, and the RAB type is PS data interactive.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_INTER_HHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_INTER_HHO (M1001C801)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_BACKG_HHO">
    <formula>SERVLEV.RAB_ACT_REL_PS_BACKG_HHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_BACKG_HHO (M1001C802)</title>
      <use>The number of RAB releases due to Inter-RNC HHO for PS data background calls. UPDATED:When the RNC receives a RANAP:IU RELEASE COMMAND message from a core network in the end of hard handover procedure, and the RAB type is PS data background.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_BACKG_HHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_BACKG_HHO (M1001C802)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_INTER_ISHO">
    <formula>SERVLEV.RAB_ACT_REL_PS_INTER_ISHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_INTER_ISHO (M1001C804)</title>
      <use>The number of RAB releases due to Inter-system handover to GSM or LTE, or due to SRNS CONTEXT REQUEST received from the CN for PS data interactive calls. UPDATED: When the RNC receives a RANAP: IU RELEASE COMMAND message from a core network in the end of Inter-system procedure, and the RAB type is PS data interactive. Also RANAP: SRNS CONTEXT REQUEST received from the CN triggers this counter update, even if it is not always reselection to another radio technology but can also be reselection to another RNC.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_INTER_ISHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_INTER_ISHO (M1001C804)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_BGR_ISHO">
    <formula>SERVLEV.RAB_ACT_REL_PS_BGR_ISHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_BGR_ISHO (M1001C805)</title>
      <use>The number of RAB releases due to Inter-system handover to GSM or LTE, or due to SRNS CONTEXT REQUEST received from the CN for PS data background calls. UPDATED: When the RNC receives a RANAP: IU RELEASE COMMAND message from a core network in the end of Inter-system procedure, and the RAB type is PS data background. Also RANAP: SRNS CONTEXT REQUEST received from the CN triggers this counter update, even if it is not always reselection to another radio technology but can also be reselection to another RNC.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_BGR_ISHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_BGR_ISHO (M1001C805)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_STREA_HHO">
    <formula>SERVLEV.RAB_ACT_REL_PS_STREA_HHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_STREA_HHO (M1001C806)</title>
      <use>The number of RAB releases due to Inter-RNC HHO for PS data streaming calls. UPDATED:When the RNC receives a RANAP:IU RELEASE COMMAND message from a core network in the end of hard handover procedure, and the RAB type is PS data streaming.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_STREA_HHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_STREA_HHO (M1001C806)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_ACT_REL_PS_STREA_ISHO">
    <formula>SERVLEV.RAB_ACT_REL_PS_STREA_ISHO</formula>
    <kpi_info>
      <title>RAB_ACT_REL_PS_STREA_ISHO (M1001C807)</title>
      <use>The number of RAB releases due to Inter-system handover to GSM or due to SRNS CONTEXT REQUEST received from the CN for PS data streaming calls. UPDATED:When the RNC receives a RANAP: IU RELEASE COMMAND message from a core network in the end of Inter-system procedure, and the RAB type is PS data streaming. Also RANAP: SRNS CONTEXT REQUEST received from the CN triggers this counter update, even if it is not always reselection to GSM but can also be reselection to another RNC.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_ACT_REL_PS_STREA_ISHO)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_ACT_REL_PS_STREA_ISHO (M1001C807)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_RELOC_STP_ATT">
    <formula>SERVLEV.RRC_RELOC_STP_ATT</formula>
    <kpi_info>
      <title>RRC_RELOC_STP_ATT (M1001C808)</title>
      <use>The number of attempted RRC connection setups during relocation procedure. UPDATED:When a target RNC of HHO or relocation receives a RANAP: RELOCATION REQUEST message from a core network.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_RELOC_STP_ATT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_RELOC_STP_ATT (M1001C808)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RRC_RELOC_ACC_COMP">
    <formula>SERVLEV.RRC_RELOC_ACC_COMP</formula>
    <kpi_info>
      <title>RRC_RELOC_ACC_COMP (M1001C810)</title>
      <use>The number of successfully established RRC connections during relocation procedure. UPDATED:When a target RNC of HHO or relocation sends a RANAP: RELOCATION COMPLETE message to a core network after a successful incoming SRNC relocation, Inter-RNC HHO or ISHO procedure.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RRC_RELOC_ACC_COMP)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RRC_RELOC_ACC_COMP (M1001C810)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_STP_ATT_PS_INT">
    <formula>SERVLEV.RAB_RELOC_STP_ATT_PS_INT</formula>
    <kpi_info>
      <title>RAB_RELOC_STP_ATT_PS_INT (M1001C817)</title>
      <use>The number of attempted PS interactive RAB setups during relocation procedure. UPDATED:When a target RNC of HHO or relocation receives a RANAP: RELOCATION REQUEST message from a core network, and the RAB type is PS data interactive.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_STP_ATT_PS_INT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_STP_ATT_PS_INT (M1001C817)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_ACC_COMP_PS_INT">
    <formula>SERVLEV.RAB_RELOC_ACC_COMP_PS_INT</formula>
    <kpi_info>
      <title>RAB_RELOC_ACC_COMP_PS_INT (M1001C819)</title>
      <use>The number of successfully established PS interactive RABs during relocation procedure. UPDATED:When a target RNC of HHO or relocation sends a RANAP: RELOCATION COMPLETE message to a core network after a successful incoming SRNC relocation, Inter-RNC HHO or ISHO procedure, and the RAB type is PS data interactive.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_ACC_COMP_PS_INT)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_ACC_COMP_PS_INT (M1001C819)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_STP_ATT_PS_BGR">
    <formula>SERVLEV.RAB_RELOC_STP_ATT_PS_BGR</formula>
    <kpi_info>
      <title>RAB_RELOC_STP_ATT_PS_BGR (M1001C826)</title>
      <use>The number of attempted PS background RAB setups during relocation procedure. UPDATED:When a target RNC of HHO or relocation receives a RANAP: RELOCATION REQUEST message from a core network, and the RAB type is PS data background.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_STP_ATT_PS_BGR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_STP_ATT_PS_BGR (M1001C826)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="RAB_RELOC_ACC_COMP_PS_BGR">
    <formula>SERVLEV.RAB_RELOC_ACC_COMP_PS_BGR</formula>
    <kpi_info>
      <title>RAB_RELOC_ACC_COMP_PS_BGR (M1001C828)</title>
      <use>The number of successfully established PS background RABs during relocation procedure. UPDATED:When a target RNC of HHO or relocation sends a RANAP: RELOCATION COMPLETE message to a core network after a successful incoming SRNC relocation, Inter-RNC HHO or ISHO procedure, and the RAB type is PS data background.
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(RAB_RELOC_ACC_COMP_PS_BGR)</formula>
      <unit>#</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RAB_RELOC_ACC_COMP_PS_BGR (M1001C828)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
  <kpi name="period_duration_sum">
    <formula>SERVLEV.period_duration_sum</formula>
    <kpi_info>
      <title>period_duration_sum (period_duration_sum)</title>
      <use>
      </use>
      <open_questions/>
      <use_experience/>
      <known_problems/>
      <pm_class/>
      <formula>SUM(period_duration_sum)</formula>
      <unit>min</unit>
      <tables>nokrww_ps_servlev_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>period_duration_sum (period_duration_sum)</kpi_alias>
    <kpi_format>float:0</kpi_format>
    <kpi_mark/>
    <area_level/>
  </kpi>
</conf_file>