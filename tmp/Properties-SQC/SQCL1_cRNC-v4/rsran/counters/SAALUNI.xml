<?xml version="1.0" encoding="UTF-8"?>
<conf_file>
  <info>
    <release number="jflx" />
    <dst />
    <implementation />
    <min_obj_agg />
    <maxrows>100</maxrows>
    <header>Nokia Siemens RNC RN60_1 SAAL_At_UNI SAALUNI measurement dump</header>
    <csv_title>Nokia Siemens RNC RN60_1 SAAL_At_UNI SAALUNI measurement dump</csv_title>
    <report-description>SAAL Signalling at UNI</report-description>
    <obj_number>20</obj_number>
    <csv_rule>reuse</csv_rule>
    <addon_sorting />
    <wrap_header>off</wrap_header>
    <help_file>about_kpi_help.htm</help_file>
    <nokia_counter_id_help_file />
    <nokia_counter_db_help_file />
    <external_kpi_help_file />
  </info>
  <column_order>
    <period_duration />
    <MSUS_RECEIVED />
    <OCTETS_RECEIVED />
    <SIG_COMMANDS_RECEIVED />
    <MSUS_TRANSMITTED />
    <OCTETS_TRANSMITTED />
    <SIG_NOTICES_TRANSMITTED />
    <ERROR_CODE_A />
    <ERROR_CODE_B />
    <ERROR_CODE_C />
    <ERROR_CODE_D />
    <ERROR_CODE_E />
    <ERROR_CODE_F />
    <ERROR_CODE_G />
    <ERROR_CODE_H />
    <ERROR_CODE_I />
    <ERROR_CODE_J />
    <ERROR_CODE_K />
    <ERROR_CODE_L />
    <ERROR_CODE_M />
    <ERROR_CODE_O />
    <ERROR_CODE_P />
    <ERROR_CODE_Q />
    <ERROR_CODE_R />
    <ERROR_CODE_S />
    <ERROR_CODE_T />
    <ERROR_CODE_U />
    <ERROR_CODE_V />
    <ERROR_CODE_W />
    <ERROR_CODE_X />
    <ERROR_CODE_LW />
    <ERROR_CODE_LX />
    <ERROR_CODE_DEL />
    <RX_ERR />
    <NO_ERR />
    <UNEXP_ERR />
    <BA_ERR />
    <CRC_ERR />
    <CPI_ERR />
    <LEN_ERR />
    <PAD_ERR />
    <CRC_PAD_ERR />
    <RSM_TIMEOUT />
    <ABORT_DET />
    <EARLY_DISC />
    <STATUS_QF />
    <VCC_FW />
    <FBQ_UNDERF />
    <STAT_Q_OVERF />
    <VCC_RESE />
    <VCC_RELE />
    <RX_PDU_UNI />
    <RX_SIZE_UNI />
  </column_order>
  <temp_table name="SAALUNI" meas_level="PLMN/RNC/IF/VPI/VCI" type="PM" master="yes" pragma="oss4ran" create="yes">
    <counters>
      <counter alias="period_duration">AVG(period_duration)*COUNT(DISTINCT period_start_time)</counter>
      <counter alias="MSUS_RECEIVED">SUM(MSUS_RECEIVED)</counter>
      <counter alias="OCTETS_RECEIVED">SUM(OCTETS_RECEIVED)</counter>
      <counter alias="SIG_COMMANDS_RECEIVED">SUM(SIG_COMMANDS_RECEIVED)</counter>
      <counter alias="MSUS_TRANSMITTED">SUM(MSUS_TRANSMITTED)</counter>
      <counter alias="OCTETS_TRANSMITTED">SUM(OCTETS_TRANSMITTED)</counter>
      <counter alias="SIG_NOTICES_TRANSMITTED">SUM(SIG_NOTICES_TRANSMITTED)</counter>
      <counter alias="ERROR_CODE_A">SUM(ERROR_CODE_A)</counter>
      <counter alias="ERROR_CODE_B">SUM(ERROR_CODE_B)</counter>
      <counter alias="ERROR_CODE_C">SUM(ERROR_CODE_C)</counter>
      <counter alias="ERROR_CODE_D">SUM(ERROR_CODE_D)</counter>
      <counter alias="ERROR_CODE_E">SUM(ERROR_CODE_E)</counter>
      <counter alias="ERROR_CODE_F">SUM(ERROR_CODE_F)</counter>
      <counter alias="ERROR_CODE_G">SUM(ERROR_CODE_G)</counter>
      <counter alias="ERROR_CODE_H">SUM(ERROR_CODE_H)</counter>
      <counter alias="ERROR_CODE_I">SUM(ERROR_CODE_I)</counter>
      <counter alias="ERROR_CODE_J">SUM(ERROR_CODE_J)</counter>
      <counter alias="ERROR_CODE_K">SUM(ERROR_CODE_K)</counter>
      <counter alias="ERROR_CODE_L">SUM(ERROR_CODE_L)</counter>
      <counter alias="ERROR_CODE_M">SUM(ERROR_CODE_M)</counter>
      <counter alias="ERROR_CODE_O">SUM(ERROR_CODE_O)</counter>
      <counter alias="ERROR_CODE_P">SUM(ERROR_CODE_P)</counter>
      <counter alias="ERROR_CODE_Q">SUM(ERROR_CODE_Q)</counter>
      <counter alias="ERROR_CODE_R">SUM(ERROR_CODE_R)</counter>
      <counter alias="ERROR_CODE_S">SUM(ERROR_CODE_S)</counter>
      <counter alias="ERROR_CODE_T">SUM(ERROR_CODE_T)</counter>
      <counter alias="ERROR_CODE_U">SUM(ERROR_CODE_U)</counter>
      <counter alias="ERROR_CODE_V">SUM(ERROR_CODE_V)</counter>
      <counter alias="ERROR_CODE_W">SUM(ERROR_CODE_W)</counter>
      <counter alias="ERROR_CODE_X">SUM(ERROR_CODE_X)</counter>
      <counter alias="ERROR_CODE_LW">SUM(ERROR_CODE_LW)</counter>
      <counter alias="ERROR_CODE_LX">SUM(ERROR_CODE_LX)</counter>
      <counter alias="ERROR_CODE_DEL">SUM(ERROR_CODE_DEL)</counter>
      <counter alias="RX_ERR">SUM(RX_ERR)</counter>
      <counter alias="NO_ERR">SUM(NO_ERR)</counter>
      <counter alias="UNEXP_ERR">SUM(UNEXP_ERR)</counter>
      <counter alias="BA_ERR">SUM(BA_ERR)</counter>
      <counter alias="CRC_ERR">SUM(CRC_ERR)</counter>
      <counter alias="CPI_ERR">SUM(CPI_ERR)</counter>
      <counter alias="LEN_ERR">SUM(LEN_ERR)</counter>
      <counter alias="PAD_ERR">SUM(PAD_ERR)</counter>
      <counter alias="CRC_PAD_ERR">SUM(CRC_PAD_ERR)</counter>
      <counter alias="RSM_TIMEOUT">SUM(RSM_TIMEOUT)</counter>
      <counter alias="ABORT_DET">SUM(ABORT_DET)</counter>
      <counter alias="EARLY_DISC">SUM(EARLY_DISC)</counter>
      <counter alias="STATUS_QF">SUM(STATUS_QF)</counter>
      <counter alias="VCC_FW">SUM(VCC_FW)</counter>
      <counter alias="FBQ_UNDERF">SUM(FBQ_UNDERF)</counter>
      <counter alias="STAT_Q_OVERF">SUM(STAT_Q_OVERF)</counter>
      <counter alias="VCC_RESE">SUM(VCC_RESE)</counter>
      <counter alias="VCC_RELE">SUM(VCC_RELE)</counter>
      <counter alias="RX_PDU_UNI">SUM(RX_PDU_UNI)</counter>
      <counter alias="RX_SIZE_UNI">SUM(RX_SIZE_UNI)</counter>
    </counters>
    <table_name>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</table_name>
    <alias_name>SAALUNI</alias_name>
  </temp_table>
  <kpi name="period_duration">
    <formula>SAALUNI.period_duration</formula>
    <kpi_info>
      <title>period_duration</title>
      <use>Duration of the measurement period in minutes.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>AVG(period_duration)*COUNT(DISTINCT period_start_time)</formula>
      <unit />
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>period_duration</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="MSUS_RECEIVED">
    <formula>SAALUNI.MSUS_RECEIVED</formula>
    <kpi_info>
      <title>MSUS_RECEIVED</title>
      <use>The number of received signalling datamessages from Layer 3.The amount of assured signalling data (AAL-data) messages received from the users of Layer 3 (NBAP or AAL2 signalling) via AAL-SAP of SSCF-UNI.UPDATED:When a user of Layer 3 (NBAP or AAL2 signalling protocol) requests the sending of signalling data, for example, when AAL2 signalling protocol establishes a radio access bearer over Iub.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(MSUS_RECEIVED)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MSUS_RECEIVED (M546C0)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="OCTETS_RECEIVED">
    <formula>SAALUNI.OCTETS_RECEIVED</formula>
    <kpi_info>
      <title>OCTETS_RECEIVED</title>
      <use>The number of received octets from Layer 3.The number of the assured signalling data (AAL-data) message octets received from the users of Layer 3 (NBAP or AAL2 signalling) via AAL-SAP of SSCF-UNI.UPDATED:When a user of layer 3 (NBAP or AAL2 signalling protocol) requests the sending of signalling data, for example, when AAL2 signalling protocol establishes a radio access bearer over Iub.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(OCTETS_RECEIVED)</formula>
      <unit>byte</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>OCTETS_RECEIVED (M546C1)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="SIG_COMMANDS_RECEIVED">
    <formula>SAALUNI.SIG_COMMANDS_RECEIVED</formula>
    <kpi_info>
      <title>SIG_COMMANDS_RECEIVED</title>
      <use>The number of received signalling command messages from Layer 3. The signalling commands are channel activation (AAL_establish_request) and channel release (AAL_release_request). The counter indicates the reliability of the link used by AAL2.UPDATED: When a user of Layer 3 requests the sending of a signalling command, for example, when a SAAL UNI link is created and requested to be activated.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(SIG_COMMANDS_RECEIVED)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SIG_COMMANDS_RECEIVED (M546C2)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="MSUS_TRANSMITTED">
    <formula>SAALUNI.MSUS_TRANSMITTED</formula>
    <kpi_info>
      <title>MSUS_TRANSMITTED</title>
      <use>The number of transmitted signalling data messages from Layer 3. The number of transmitted signalling data (AAL_data_indication) messages sent to Layer 3 by the user of the counterpart Layer 3.UPDATED:When a signalling data message is received to transmit to the user of Layer 3, for example, when a peer AAL type 2 service endpoint confirms the establishing of a radio access bearer setup over Iub.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(MSUS_TRANSMITTED)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>MSUS_TRANSMITTED (M546C3)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="OCTETS_TRANSMITTED">
    <formula>SAALUNI.OCTETS_TRANSMITTED</formula>
    <kpi_info>
      <title>OCTETS_TRANSMITTED</title>
      <use>The number of transmitted octets from Layer 3.The number of transmitted signalling data (AAL_data_indication) message octets sent to Layer 3 by the user of the counterpart Layer 3.UPDATED: When a signalling data message is received to transmit to the user of Layer 3, for example, when a peer AAL type 2 service endpoint confirms the establishing of a radio access bearer setup over Iub.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(OCTETS_TRANSMITTED)</formula>
      <unit>byte</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>OCTETS_TRANSMITTED (M546C4)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="SIG_NOTICES_TRANSMITTED">
    <formula>SAALUNI.SIG_NOTICES_TRANSMITTED</formula>
    <kpi_info>
      <title>SIG_NOTICES_TRANSMITTED</title>
      <use>The number of transmitted signalling command messages from Layer 3.The signalling commands are channel activation confirmation (AAL_establish_confirm), channel activation indication (AAL_establish_indication), channel release confirmation (AAL_release_confirm) and channel release indication (AAL_release_indication). These commands are sent by the user of the counterpart Layer 3.UPDATED: When a signalling command is received to transmit to the user of Layer 3, for example, when confirmation for the UNI signalling link activation is received.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(SIG_NOTICES_TRANSMITTED)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>SIG_NOTICES_TRANSMITTED (M546C5)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_A">
    <formula>SAALUNI.ERROR_CODE_A</formula>
    <kpi_info>
      <title>ERROR_CODE_A</title>
      <use>Receipt of unsolicited SSCOP SequencedData (SD PDU).SD PDU is received in a SSCOP connection state where it should not be received. SD PDU is used to transfer, across an SSCOP connection, sequentially numbered PDUs containing information fields provided by the SSCOP user.UPDATED:SD PDU is received in a SSCOP connection state where it should not be received. For example, the connection between SSCOP layers is not available but a SD PDU is still received for the connection.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_A)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_A (M546C6)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_B">
    <formula>SAALUNI.ERROR_CODE_B</formula>
    <kpi_info>
      <title>ERROR_CODE_B</title>
      <use>Receipt of unsolicited SSCOP Begin (BGN PDU). BGN PDU is received in a SSCOP connection state where it should not be received.  SSCOP Begin (BGN PDU) is used to establish an SSCOP connection between two peer entities. The BGN PDU requests the clearing of the peer's transmitter and receiver buffers, and the initialization of the peer's transmitter and receiver state variables.UPDATED:BGN PDU is received in a SSCOP connection state where it should not be received. For example, the RS PDU or ER PDU is sent to the peer node but a BGN PDU is received instead of acknowledgements (RSAK PDU or ERAK PDU).</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_B)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_B (M546C7)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_C">
    <formula>SAALUNI.ERROR_CODE_C</formula>
    <kpi_info>
      <title>ERROR_CODE_C</title>
      <use>Receipt of unsolicited SSCOP BeginAcknowledge (BGAK PDU). BGAK PDU is received in a SSCOP connection state where it should not be received. Begin Acknowledge (BGAK PDU) is used to confirm the establishment of an SSCOP connection between two peer entities.UPDATED: BGAK PDU is received in a SSCOP connection state where it should not be received. For example, the BGAK PDU is received from a peer node, although SSCOP has not requested connection establishment.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_C)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_C (M546C8)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_D">
    <formula>SAALUNI.ERROR_CODE_D</formula>
    <kpi_info>
      <title>ERROR_CODE_D</title>
      <use>Receipt of unsolicited SSCOP BeginReject (BGREJ PDU). BGREJ PDU is received in a SSCOP connection state where it should not be received. BGREJ PDU is used to reject the connection request of the peer SSCOP entity.UPDATED:BGREJ PDU is received in a SSCOP connection state where it should not be received. For example, BGREJ PDU is received from a peer node although the connection between SSCOP layers is not established.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_D)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_D (M546C9)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_E">
    <formula>SAALUNI.ERROR_CODE_E</formula>
    <kpi_info>
      <title>ERROR_CODE_E</title>
      <use>Receipt of unsolicited SSCOP End (ENDPDU).END PDU is received in a SSCOP connection state where it should not be received. END PDU is used to release an SSCOP connection between two peer entities.UPDATED:END PDU is received in a SSCOP connection state where it should not be received. For example, END PDU is received for the unavailable connection between SSCOP layers.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_E)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_E (M546C10)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_F">
    <formula>SAALUNI.ERROR_CODE_F</formula>
    <kpi_info>
      <title>ERROR_CODE_F</title>
      <use>Receipt of unsolicited SSCOP End Acknowledge (ENDAK PDU).ENDAK PDU is received in a SSCOP connection state where it should not be received. ENDAK PDU is used to confirm the release of an SSCOP connection.UPDATED:ENDAK PDU is received in a SSCOP connection state where it should not be received. For example, ENDAK PDU is received although SSCOP has not requested the connection release.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_F)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_F (M546C11)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_G">
    <formula>SAALUNI.ERROR_CODE_G</formula>
    <kpi_info>
      <title>ERROR_CODE_G</title>
      <use>Receipt of unsolicited SSCOP Polling (POLL PDU). POLL PDU is received in a SSCOP connection state where it should not be received. POLL PDU is used to request, across an SSCOP connection, status information about the peer SSCOP entity.UPDATED:POLL PDU is received in a SSCOP connection state where it should not be received. For example, POLL PDU is received when the connection between SSCOP layers is not established.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_G)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_G (M546C12)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_H">
    <formula>SAALUNI.ERROR_CODE_H</formula>
    <kpi_info>
      <title>ERROR_CODE_H</title>
      <use>Receipt of unsolicited SSCOP Status(STAT PDU). STAT PDU is received in a SSCOP connection state where it should not be received. STAT PDU is used to respond to a status request (POLL PDU) received from a peer SSCOP entity. It contains information regarding the reception status of SD PDUs, credit information for the peer transmitter, and the sequence number [N(PS)] of the POLL PDU to which it responds.UPDATED: STAT PDU is received in a SSCOP connection state where it should not be received. For example, STAT PDU is received when the connection between SSCOP layers is not established.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_H)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_H (M546C13)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_I">
    <formula>SAALUNI.ERROR_CODE_I</formula>
    <kpi_info>
      <title>ERROR_CODE_I</title>
      <use>Receipt of unsolicited SSCOP Unsolicited Status Response (USTAT PDU). USTAT PDU is received in a SSCOP connection state where it should not be received. USTAT PDU is used to respond to the detection of one or more new missing SD PDUs, based on the examination of the sequence numbering of the SD PDU. It contains information regarding the reception status of SD PDUs and credit information for the peer transmitter.UPDATED: USTAT PDU is received in a SSCOP connection state where it should not be received. For example, USTAT PDU is received when the connection between SSCOP layers is not established.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_I)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_I (M546C14)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_J">
    <formula>SAALUNI.ERROR_CODE_J</formula>
    <kpi_info>
      <title>ERROR_CODE_J</title>
      <use>Receipt of unsolicited SSCOP Re-synchronization(RS PDU). RS PDU is received in a SSCOP connection state where it should not be received. RS PDU is used to re-synchronise the buffers and data transfer state variables.UPDATED:RS PDU is received in a SSCOP connection state where it should not be received, for example, when the connection between SSCOP layers is not established.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_J)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_J (M546C15)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_K">
    <formula>SAALUNI.ERROR_CODE_K</formula>
    <kpi_info>
      <title>ERROR_CODE_K</title>
      <use>Receipt of unsolicited SSCOP Re-synchronization Acknowledge (RSAK PDU). RSAK PDU is received in a SSCOP connection state where it should not be received. RSAK PDU is used to acknowledge the acceptance of a re-synchronisation requested by the peer SSCOP entity.UPDATED: RSAK PDU is received in a SSCOP connection state where it should not be received, for example, when the connection between SSCOP layers is not established.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_K)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_K (M546C16)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_L">
    <formula>SAALUNI.ERROR_CODE_L</formula>
    <kpi_info>
      <title>ERROR_CODE_L</title>
      <use>Receipt of unsolicited SSCOP Error Recovery (ER PDU). ER PDU is received in a SSCOP connection state where it should not be received. ER PDU is used to recover from protocol errors.UPDATED:ER PDU is received in a SSCOP connection state where it should not be received, for example, when the connection between SSCOP layers is not established.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_L)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_L (M546C17)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_M">
    <formula>SAALUNI.ERROR_CODE_M</formula>
    <kpi_info>
      <title>ERROR_CODE_M</title>
      <use>Receipt of unsolicited SSCOP Error Recovery Acknowledge (ERAK PDU). ERAK PDU is received in a SSCOP connection state where it should not be received. ERAK PDU is used to acknowledge the recovery from protocol error.UPDATED: ERAK PDU is received in a SSCOP connection state where it should not be received, for example, when the connection between SSCOP layers is not established.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_M)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_M (M546C18)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_O">
    <formula>SAALUNI.ERROR_CODE_O</formula>
    <kpi_info>
      <title>ERROR_CODE_O</title>
      <use>Unsuccessful retransmission. The number of transmissions of BGN, END, ER, or RS PDUs (SSCOP state variable VT(CC)) has reached the maximum value of retransmissions (SSCOP parameter MaxCC).  When a BGN, END, ER, or RS PDU is sent, a timer is set (TimerCC) to wait for the acknowledge and the VT(CC) variable is set to 1. If the acknowledgement is not received, the PDU is retransmitted, TimerCC is set again, and VT(CC) is increased. If VT(CC) reaches the value of MaxCC, the PDU is no longer retransmitted. The default value for TimerCC is 1 second, and 4 seconds for MaxCC.UPDATED: On every occasion of an unsuccessful PDU retransmission cycle.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_O)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_O (M546C19)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_P">
    <formula>SAALUNI.ERROR_CODE_P</formula>
    <kpi_info>
      <title>ERROR_CODE_P</title>
      <use>Timer_NO-RESPONSE expiry. The SSCOP connection has been released. The Timer_NO-RESPONSE is set when POLL PDU is sent to a peer SSCOP entity. When the peer acknowledges it with STAT PDU, the Timer_NO-RESPONSE is reset. If the peer does not send STAT PDU and the Timer_NO-RESPONSE expires, the SSCOP connection is released by SSCOP.UPDATED: If the peer does not acknowledge POLL PDU with STAT PDU in the defined timeframe.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_P)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_P (M546C20)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_Q">
    <formula>SAALUNI.ERROR_CODE_Q</formula>
    <kpi_info>
      <title>ERROR_CODE_Q</title>
      <use>SD or POLL, N(S) error. SD or POLL PDU sequence number (N(S)) error. SD or POLL PDU is received and the N(S) parameter is not valid. Either SD PDU with N(S) that is in the SSCOP receive buffer is received, or POLL PDU contains N(S) that is greater than the highest expected sequence number (SSCOP variable VR(H)).UPDATED:When SD or POLL PDU is received and the N(S) parameter is not valid.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_Q)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_Q (M546C21)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_R">
    <formula>SAALUNI.ERROR_CODE_R</formula>
    <kpi_info>
      <title>ERROR_CODE_R</title>
      <use>STAT N(PS) error. STAT PDU is received for a POLL PDU that has not been sent. When POLL PDU is sent, the polling sequence number (SSCOP variable N(PS)) is increased and sent in the PDU. The peer SSCOP entity copies this value from POLL PDU into the appropriate STAT PDU. This error code is increased when STAT PDU with N(PS) that has not been sent in any POLL PDU is received.UPDATED: This error code is increased when STAT PDU with N(PS) that has not been sent in any POLL PDU is received.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_R)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_R (M546C22)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_S">
    <formula>SAALUNI.ERROR_CODE_S</formula>
    <kpi_info>
      <title>ERROR_CODE_S</title>
      <use>USTAT N(R) or list elements error. STAT PDU is received with invalid data. The N(R) parameter in STAT PDU tells the sequence number of SD PDU that the sender of STAT PDU is waiting to be received next. This error counter is increased when the N(R) is greater than the next sequence number to be sent (SSCOP variable VT(S)), or the acknowledgement for that SD PDU has already been received in an earlier STAT or USTAT PDU. The list elements in STAT PDU are used to request retransmission of SD PDUs. This error counter is increased, if such SD PDUs that are not sent or have been acknowledged to be received by the peer SSCOP entity, are requested to be retransmitted.UPDATED:When the N(R) is greater than the next sequence number to be sent (SSCOP variable VT(S)), or the acknowledgement for that SD PDU has already been received in an earlier STAT or USTAT PDU.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_S)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_S (M546C23)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_T">
    <formula>SAALUNI.ERROR_CODE_T</formula>
    <kpi_info>
      <title>ERROR_CODE_T</title>
      <use>USTAT (N(R) or list elements error. USTAT PDU is received with invalid data. The N(R) parameter in STAT PDU tells the sequence number of SD PDU that the sender of STAT PDU is waiting to be received next. This error counter is increased when the N(R) is greater than the next sequence number to be sent (SSCOP variable VT(S)), or the acknowledgement for that SD PDU has already been received in an earlier STAT or USTAT PDU. The list elements in USTAT PDU are used to request retransmission of SD PDUs. This error counter is increased, if such SD PDUs that are not sent or have been acknowledged to be received by the peer SSCOP entity, are requested to be retransmitted.UPDATED:When the N(R) is greater than the next sequence number to be sent (SSCOP variable VT(S)), or the acknowledgement for that SD PDU has already been received in an earlier STAT or USTAT PDU.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_T)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_T (M546C24)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_U">
    <formula>SAALUNI.ERROR_CODE_U</formula>
    <kpi_info>
      <title>ERROR_CODE_U</title>
      <use>PDU length violation. If the length of a PDU is not between the minimum and maximum length of a PDU, or if the PDU length is not 32-bit-aligned.UPDATED:If SSCOP detects that the PDU to be sent has incorrect data length.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_U)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_U (M546C25)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_V">
    <formula>SAALUNI.ERROR_CODE_V</formula>
    <kpi_info>
      <title>ERROR_CODE_V</title>
      <use>SD PDUs must be retransmitted. If SD PDUs have been lost, the peer SSCOP entity can request them to be retransmitted with USTAT PDU or STAT PDU.UPDATED: When SSCOP detects from the received (U)STAT PDU that the peer entity has not received all SD PDUs that the SSCOP has sent.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_V)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_V (M546C26)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_W">
    <formula>SAALUNI.ERROR_CODE_W</formula>
    <kpi_info>
      <title>ERROR_CODE_W</title>
      <use>Lack of credit. Credit is granted by the SSCOP receiver to allow the peer SSCOP transmitter to transmit new SD PDUs. The credit value is conveyed to the transmitter in the (N(MR) field of each BGN, BGAK, RS, RSAK, ER, ERAK, STAT and USTAT PDU sent by the receiver. The credit value sent to the transmitter is the sequence number of the first SD PDU that the receiver will not accept. The credit is assigned the value ""No"" when the SSCOP transmitter cannot send any SD PDUs because the receiver will not accept them.UPDATED:When SSCOP wants to send SD PDUs to peer SSCOP, but the information obtained from the previous STAT PDU tells that the peer SSCOP will not receive this SD PDU (that is, the SD PDU sequence number is too high).</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_W)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_W (M546C27)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_X">
    <formula>SAALUNI.ERROR_CODE_X</formula>
    <kpi_info>
      <title>ERROR_CODE_X</title>
      <use>Credit obtained. Credit is granted by the SSCOP receiver to allow the peer SSCOP transmitter to transmit new SD PDUs. The credit value is conveyed to the transmitter in the (N(MR) field of each BGN, BGAK, RS, RSAK, ER, ERAK, STAT and USTAT PDU sent by the receiver. The credit value sent to the transmitter is the sequence number of the first SD PDU that the receiver will not accept. The credit is assigned the value ""Yes"" when the SSCOP transmitter receives such BGN, BGAK, RS, RSAK, ER, ERAK, STAT or USTAT PDU that allows it to send SD PDUs to the SSCOP receiver.UPDATED:If SSCOP has previously been declined credit and the next received STAT PDU N(MR) value indicates that the peer node is again willing to receive SD PDUs.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_X)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_X (M546C28)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_LW">
    <formula>SAALUNI.ERROR_CODE_LW</formula>
    <kpi_info>
      <title>ERROR_CODE_LW</title>
      <use>Local credit window closed. This error counter is increased in the SSCOP receiver when it cannot accept any new SD PDUs. This happens when the receive buffer is full.UPDATED:In the SSCOP receiver when it cannot accept any new SD PDUs.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_LW)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_LW (M546C29)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_LX">
    <formula>SAALUNI.ERROR_CODE_LX</formula>
    <kpi_info>
      <title>ERROR_CODE_LX</title>
      <use>Local credit window opened. This error counter is increased in the SSCOP receiver when it can again accept new SD PDUs. UPDATED:When the SSCOP receiver can again accept new SD PDUs after its local credit window had been closed.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_LX)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_LX (M546C30)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ERROR_CODE_DEL">
    <formula>SAALUNI.ERROR_CODE_DEL</formula>
    <kpi_info>
      <title>ERROR_CODE_DEL</title>
      <use>SD PDUs must be deleted. The SSCOP transmitter has discarded an AA-DATA request from the user because it cannot store it in its transmit buffer. This can happen if the SSCOP receiver closes the credit window and the SSCOP transmitter cannot send SD PDUs and has to store them in the transmit buffer. Also, if there is congestion in the lower layers, the SD PDUs cannot be sent.UPDATED:When SSCOP discards AAL_data requests.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ERROR_CODE_DEL)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ERROR_CODE_DEL (M546C31)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="RX_ERR">
    <formula>SAALUNI.RX_ERR</formula>
    <kpi_info>
      <title>RX_ERR</title>
      <use>The total sum of received errors. This counter is the sum of the following counters: UNEXP_ERR M546C34, BA_ERR M546C35, CRC_ERR M546C36, CPI_ERR M546C37, LEN_ERR M546C38, PAD_ERR M546C39, CRC_PAD_ERR M546C40, RSM_TIMEOUT M546C41, ABORT_DET M546C42, EARLY_DISC M546C43, STATUS_QF M546C44, VCC_FW M546C45, FBQ_UNDERF M546C46, STAT_Q_OVERF M546C47.UPDATED:This counter is updated when a received AAL5 CPCS-PDU is reassembled and errors are detected.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(RX_ERR)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RX_ERR (M546C32)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="NO_ERR">
    <formula>SAALUNI.NO_ERR</formula>
    <kpi_info>
      <title>NO_ERR</title>
      <use>The number of reassembled AAL5 CPCS-PDUs which contain no errors. SAR Reassembly status.UPDATED:AAL5 CPCS-PDU is reassembled, and no errors are detected.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(NO_ERR)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>NO_ERR (M546C33)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="UNEXP_ERR">
    <formula>SAALUNI.UNEXP_ERR</formula>
    <kpi_info>
      <title>UNEXP_ERR</title>
      <use>The number of reassembled AAL5 CPCS-PDUs which contain unexpected errors. Unexpected errors are others than those reported in counters UNEXP_ERR M546C34, BA_ERR M546C35, CRC_ERR M546C36, CPI_ERR M546C37, LEN_ERR M546C38, PAD_ERR M546C39, CRC_PAD_ERR M546C40, RSM_TIMEOUT M546C41, ABORT_DET M546C42, EARLY_DISC M546C43, STATUS_QF M546C44, VCC_FW M546C45, FBQ_UNDERF M546C46, STAT_Q_OVERF M546C47.UPDATED:AAL5 CPCS-PDU is reassembled and an unexpected error is detected.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(UNEXP_ERR)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>UNEXP_ERR (M546C34)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="BA_ERR">
    <formula>SAALUNI.BA_ERR</formula>
    <kpi_info>
      <title>BA_ERR</title>
      <use>The number of reassembled AAL5 CPCS-PDUs whose total PDU length is over the maximum PDU length allowed. During the reassembly of the last cell (EOM cell) of the AAL5 CPCS-PDU, the maximum SDU delivery length (including trailer and PAD) is checked to ensure that the PDU under reassembly does not exceed the maximum SDU delivery length of 65535 bytes.UPDATED:An AAL5 CPCS-PDU is reassembled, and the maximum length of 65535 bytes is exceeded during the processing of the EOM cell.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(BA_ERR)</formula>
      <unit />
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>BA_ERR (M546C35)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="CRC_ERR">
    <formula>SAALUNI.CRC_ERR</formula>
    <kpi_info>
      <title>CRC_ERR</title>
      <use>The number of reassembled AAL5 CPCS-PDUs whose CRC-32 has been violated. When the EOM cell is processed, the reassembly coprocessor compares the calculated CRCREM value with the CRC-32 value in the trailer of the AAL5 PDU. If they are different, the reassembly coprocessor sets the CRC_ERROR bit in the status queue entry to logic 'high'.UPDATED:An AAL5 CPCS-PDU is reassembled and a CRC-32 error is detected.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(CRC_ERR)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CRC_ERR (M546C36)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="CPI_ERR">
    <formula>SAALUNI.CPI_ERR</formula>
    <kpi_info>
      <title>CPI_ERR</title>
      <use>The number of reassembled AAL5 CPCS-PDUs whose CPI is invalid. When the EOM cell is processed, the reassembly coprocessor performs the following check: If the CPI field in the AAL5 trailer is not at zero, the CPI_ERROR bit in the status queue entry is set to logic 'high'.UPDATED:An AAL5 CPCS-PDU is reassembled and an invalid CPI detected.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(CPI_ERR)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CPI_ERR (M546C37)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="LEN_ERR">
    <formula>SAALUNI.LEN_ERR</formula>
    <kpi_info>
      <title>LEN_ERR</title>
      <use>The number of reassembled AAL5 CPCS-PDUs whose length has been violated. During the reassembly of a non-EOM cell, the maximum SDU delivery length (including trailer and pad) is checked to ensure that the PDU under reassembly does not exceed the maximum SDU delivery length of 65535 bytes. If a non-EOM cell is received, where the maximum SDU delivery length is exceeded, Early Packet Discard is performed. The reassembly coprocessor reports this condition via a status queue entry, with the lenght error and EPD status bits set. The AAL5_DSC_CNT counter is also incremented.UPDATED:AAL5 CPCS-PDU is reassembled, and a non-EOM cell exceeds the maximum SDU delivery length.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(LEN_ERR)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>LEN_ERR (M546C38)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="PAD_ERR">
    <formula>SAALUNI.PAD_ERR</formula>
    <kpi_info>
      <title>PAD_ERR</title>
      <use>The number of reassembled AAL5 CPCS-PDUs whose PAD field length is incorrect. When the EOM cell is processed, the reassembly coprocessor compares the value collected in the Length Counter with the value in the LENGTH field in the trailer of the AAL5 PDU. If the number of PAD bytes is less than zero or greater than 47, the PAD error bit in the status queue entry is set to a logic high.UPDATED:AAL5 CPCS-PDU is reassembled, and an invalid PAD field length is detected.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(PAD_ERR)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>PAD_ERR (M546C39)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="CRC_PAD_ERR">
    <formula>SAALUNI.CRC_PAD_ERR</formula>
    <kpi_info>
      <title>CRC_PAD_ERR</title>
      <use>The number of reassembled AAL5 CPCS-PDUs in which either the CRC-32 has been violated or the PAD field length is invalid. See PAD_ERR M546C39 and CRC_ERR M546C36.UPDATED:An AAL5 CPCS-PDU is reassembled and both CRC-32 and PAD field length errors are detected.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(CRC_PAD_ERR)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>CRC_PAD_ERR (M546C40)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="RSM_TIMEOUT">
    <formula>SAALUNI.RSM_TIMEOUT</formula>
    <kpi_info>
      <title>RSM_TIMEOUT</title>
      <use>The number of reassembled AAL5 CPCS-PDUs whose reassembly timer has expired. The reassembly coprocessor automatically detects active CPCS-PDU time-out for reassembly channels. A PDU time-out occurs when a partially received PDU is not complete within a set time period. The period is fixed by the system as 1 second. When the reassembly coprocessor detects this time-out condition, it provides a status queue indication to the host. This indication allows the host to recover the buffers held by the partially completed PDU.UPDATED:When AAL5 CPCS-PDU reassembly time has expired.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(RSM_TIMEOUT)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RSM_TIMEOUT (M546C41)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="ABORT_DET">
    <formula>SAALUNI.ABORT_DET</formula>
    <kpi_info>
      <title>ABORT_DET</title>
      <use>The number of AAL5 CPCS-PDUs whose sending has been aborted. When the EOM cell is processed, the reassembly coprocessor performs the following check: If the LENGTH field in the trailer of the AAL5 PDU is zero, the ABORT bit in the status queue entry is set to logic 'high'.UPDATED:When sending an AAL5 CPCS-PDU has been aborted.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(ABORT_DET)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>ABORT_DET (M546C42)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="EARLY_DISC">
    <formula>SAALUNI.EARLY_DISC</formula>
    <kpi_info>
      <title>EARLY_DISC</title>
      <use>The number of AAL5 CPCS-PDUs which have been discarded because free recive buffers was not available. A partially reassembled CPCS-PDU has been discarded because of buffer underflow, Cell Loss Priority (CLP) discard or Max PDU length exceeded.UPDATED:When Early Packet Discard (EPD) occurs.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(EARLY_DISC)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>EARLY_DISC (M546C43)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="STATUS_QF">
    <formula>SAALUNI.STATUS_QF</formula>
    <kpi_info>
      <title>STATUS_QF</title>
      <use>The number of status queue fulfillments. A status queue overflow or full condition is entered when the last available status queue entry is written. When the reassembly coprocessor is in status full condition, it discards all cells. If a Continuation of Message (COM) or End Of Message (EOM) cell is received while  the status queue is full, the channel is marked for status full packet discard. When a Single Segment Message (SSM), End Of Message (EOM), or Operation And Maintenance (OAM) cell is received during a status full condition, the cell is  discarded and the status queue is checked. If there is now room in the status queue, the status full condition is exited.UPDATED:This counter is incremented when the last entry of the reassembly status queue is written. This can occur when there is a big burst of AAL5 traffic coming to the  unit and the AAL5 cannot clear the reassembly status queue fast enough.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(STATUS_QF)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>STATUS_QF (M546C44)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="VCC_FW">
    <formula>SAALUNI.VCC_FW</formula>
    <kpi_info>
      <title>VCC_FW</title>
      <use>The number of AAL5 CPCS-PDUs which have been discarded because vcc firewall is crossed. Not in use.UPDATED:Not updated, for future use.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(VCC_FW)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>VCC_FW (M546C45)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="FBQ_UNDERF">
    <formula>SAALUNI.FBQ_UNDERF</formula>
    <kpi_info>
      <title>FBQ_UNDERF</title>
      <use>The number of AAL5 CPCS-PDUs which have been discarded because of free buffer queue underflows. An underflow condition occurs when the SAR attempts to retrieve a queue entry but the host has not yet supplied the entry. This condition only happens in free buffer queues. The SAR detects this condition by checking the queue entry VLD bit. Once detected, the SAR enters the "Underflow Detected" state on this queue only. Since this signifies that no data buffers are available for reassembly, the SAR initiates EPD on all channels assigned to this queue.UPDATED:When AAL5 CPCS-PDUs are discarded because of free buffer queue underflows.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(FBQ_UNDERF)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>FBQ_UNDERF (M546C46)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="STAT_Q_OVERF">
    <formula>SAALUNI.STAT_Q_OVERF</formula>
    <kpi_info>
      <title>STAT_Q_OVERF</title>
      <use>The number of AAL5 CPCS-PDUs which have been discarded because the status queue of the receive buffers is full. See STATUS_QF M546C44.UPDATED:When AAL5 CPCS-PDUs are discarded because the status queue of the receive buffers is full.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(STAT_Q_OVERF)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>STAT_Q_OVERF (M546C47)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="VCC_RESE">
    <formula>SAALUNI.VCC_RESE</formula>
    <kpi_info>
      <title>VCC_RESE</title>
      <use>The number of vcc re-reservations.UPDATED:The counter is incremented if another client tries to obtain a vcc that is already reserved.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(VCC_RESE)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>VCC_RESE (M546C48)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="VCC_RELE">
    <formula>SAALUNI.VCC_RELE</formula>
    <kpi_info>
      <title>VCC_RELE</title>
      <use>The number of illegal vcc releasing attempts.UPDATED:The counter is incremented if another client tries to obtain a vcc that is already reserved.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(VCC_RELE)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>VCC_RELE (M546C49)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="RX_PDU_UNI">
    <formula>SAALUNI.RX_PDU_UNI</formula>
    <kpi_info>
      <title>RX_PDU_UNI</title>
      <use>The number of received error-free AAL5 CPCS-PDUs.UPDATED:When an error-free AAL5 CPCS-PDU is received.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(RX_PDU_UNI)</formula>
      <unit>Integer number</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RX_PDU_UNI (M546C50)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
  <kpi name="RX_SIZE_UNI">
    <formula>SAALUNI.RX_SIZE_UNI</formula>
    <kpi_info>
      <title>RX_SIZE_UNI</title>
      <use>The number of bytes in reassembled error-free AAL5 CPCS-PDUs.UPDATED:When an error-free AAL5 CPCS-PDU is reassembled.</use>
      <open_questions />
      <use_experience />
      <known_problems />
      <pm_class />
      <formula>SUM(RX_SIZE_UNI)</formula>
      <unit>byte</unit>
      <tables>nokrww_ps_saaluni_{OBJ_AGG}_{TIME_AGG}</tables>
    </kpi_info>
    <kpi_alias>RX_SIZE_UNI (M546C51)</kpi_alias>
    <kpi_format>float:2</kpi_format>
    <kpi_mark />
    <area_level />
  </kpi>
</conf_file>

