<?xml version="1.0" encoding="utf-8" ?>
<conf_file>
	<info>
		<min_obj_agg/>
		<header/>
		<addon_sorting/>
	</info>
	<temp_table_ref src="rsran/counters/CELLRES.xml">
		<counters>
			<counter alias="log_rnc_101b"> nvl(decode(sum(prxtot_denom_0+prxtot_denom_1+prxtot_denom_2+prxtot_denom_3+prxtot_denom_4),0, null,   					round( -112 + 10*log(10,  (  sum( (power( 10,( (ave_prxtot_class_0/100 )  ) ) )  *   					(prxtot_denom_0)+(power( 10,( (ave_prxtot_class_1/100 ) ) ) )  *			(prxtot_denom_1)+(power( 10,( (ave_prxtot_class_2/100 )  ) ) )  *   					(prxtot_denom_2)+(power( 10,( (ave_prxtot_class_3/100 )  ) ) )  *   					(prxtot_denom_3)+(power( 10,( (ave_prxtot_class_4/100 ) ) ) )  *   					(prxtot_denom_4) ) /sum( prxtot_denom_0+prxtot_denom_1+prxtot_denom_2+prxtot_denom_3+prxtot_denom_4 )   )     )    ,2)       ),0)</counter>
			<counter alias="log_rnc_137">nvl (round (decode ( sum(prxtot_denom_0) ,0 , 0,  (-112 + 10*  log (10,(sum (power (10,(ave_prxtot_class_0/100)) * prxtot_denom_0)/sum(prxtot_denom_0)))) ),2 ),0)</counter>
			<counter alias="log_rnc_138">nvl (round (decode ( sum(prxtot_denom_1) ,0 , 0,  (-112 + 10*  log (10,(sum (power (10,(ave_prxtot_class_1/100)) * prxtot_denom_1)/sum(prxtot_denom_1)))) ),2 ),0)</counter>
			<counter alias="log_rnc_139">nvl (round (decode ( sum(prxtot_denom_2) ,0 , 0,  (-112 + 10*  log (10,(sum (power (10,(ave_prxtot_class_2/100)) * prxtot_denom_2)/sum(prxtot_denom_2)))) ),2 ),0)</counter>
			<counter alias="log_rnc_140">nvl (round (decode ( sum(prxtot_denom_3) ,0 , 0,  (-112 + 10*  log (10,(sum (power (10,(ave_prxtot_class_3/100)) * prxtot_denom_3)/sum(prxtot_denom_3)))) ),2 ),0)</counter>
			<counter alias="log_rnc_141">nvl (round (decode ( sum(prxtot_denom_4) ,0 , 0,  (-112 + 10*  log (10,(sum (power (10,(ave_prxtot_class_4/100)) * prxtot_denom_4)/sum(prxtot_denom_4)))) ),2 ),0)</counter>
			<counter alias="log_rnc_177">nvl(decode(sum(prx_noise_denom_1),0, null, round( 10*log(10,  (  sum( (0.001*power( 10,( ((ave_prx_noise/-100 ) )/10 ) ) )  *(prx_noise_denom_1) ) /sum( prx_noise_denom_1 )   )    /0.001 )    ,2)       ),0)</counter>
			<counter alias="log_rnc_102b">nvl(decode(sum(ptxtot_denom_0+ptxtot_denom_1+ptxtot_denom_2+ptxtot_denom_3+ptxtot_denom_4),0, null,			round(10* log(10,  (  sum( (0.001*power( 10,( ( ave_ptxtot_class_0/100       )/10 ) ) )  *			(ptxtot_denom_0) +(0.001*power( 10,( ( ave_ptxtot_class_1/100       )/10 ) ) )  *			(ptxtot_denom_1)+(0.001*power( 10,( ( ave_ptxtot_class_2/100       )/10 ) ) )  *			(ptxtot_denom_2)+(0.001*power( 10,( ( ave_ptxtot_class_3/100       )/10 ) ) )  *			(ptxtot_denom_3)+(0.001*power( 10,( ( ave_ptxtot_class_4/100       )/10 ) ) )  *			(ptxtot_denom_4)) /			sum( ptxtot_denom_0 +ptxtot_denom_1+ptxtot_denom_2+ptxtot_denom_3+ptxtot_denom_4)   )    /0.001 )    ,2)       ),0)</counter>
			<counter alias="log_0">nvl(decode(sum(ptxtot_denom_0),0, null,                                                round(10* log(10,(sum((0.001*power(10,((ave_ptxtot_class_0/100)/10))) *                                                (ptxtot_denom_0)) / sum(ptxtot_denom_0))/0.001 ),2)),0)</counter>
			<counter alias="log_1">nvl(decode(sum(ptxtot_denom_1),0, null,                                                round(10* log(10,(sum((0.001*power(10,((ave_ptxtot_class_1/100)/10))) *                                                (ptxtot_denom_1)) / sum(ptxtot_denom_1))/0.001 ),2)),0)</counter>
			<counter alias="log_2">nvl(decode(sum(ptxtot_denom_2),0, null,                                                round(10* log(10,(sum((0.001*power(10,((ave_ptxtot_class_2/100)/10))) *                                                (ptxtot_denom_2)) / sum(ptxtot_denom_2))/0.001 ),2)),0)</counter>
			<counter alias="log_3">nvl(decode(sum(ptxtot_denom_3),0, null,                                                round(10* log(10,(sum((0.001*power(10,((ave_ptxtot_class_3/100)/10))) *                                                (ptxtot_denom_3)) / sum(ptxtot_denom_3))/0.001 ),2)),0)</counter>
			<counter alias="log_4">nvl(decode(sum(ptxtot_denom_4),0, null,                                                round(10* log(10,(sum((0.001*power(10,((ave_ptxtot_class_4/100)/10))) *                                                (ptxtot_denom_4)) / sum(ptxtot_denom_4))/0.001 ),2)),0)</counter>
			<counter alias="ave_trx_modify_rnc_521">nvl(decode(sum(nbr_of_rls),0, null, round( 10*log(10,  (  sum( (0.001*power( 10,( (-10+(ave_trx_for_rl_in_cell/2 ) )/10 ) ) )* (nbr_of_rls) ) /sum( nbr_of_rls )   )    /0.001 )    ,2)       ),0)</counter>
			<counter alias="amr_code_load_below_target_1">nvl(sum(amr_code_load_below_target),0)</counter>
			<counter alias="amr_code_load_overload_1">nvl(sum(amr_code_load_overload),0)</counter>
			<counter alias="amr_code_load_over_target_1">nvl(sum(amr_code_load_over_target),0)</counter>
			<counter alias="amr_code_load_underload_1">nvl(sum(amr_code_load_underload),0)</counter>
			<counter alias="amr_transm_load_below_target_1">nvl(sum(amr_transm_load_below_target),0)</counter>
			<counter alias="amr_transm_load_overload_1">nvl(sum(amr_transm_load_overload),0)</counter>
			<counter alias="amr_transm_load_over_target_1">nvl(sum(amr_transm_load_over_target),0)</counter>
			<counter alias="amr_transm_load_underload_1">nvl(sum(amr_transm_load_underload),0)</counter>
			<counter alias="amr_txpow_load_below_target_1">nvl(sum(amr_txpow_load_below_target),0)</counter>
			<counter alias="amr_txpow_load_overload_1">nvl(sum(amr_txpow_load_overload),0)</counter>
			<counter alias="amr_txpow_load_over_target_1">nvl(sum(amr_txpow_load_over_target),0)</counter>
			<counter alias="amr_txpow_load_underload_1">nvl(sum(amr_txpow_load_underload),0)</counter>
			<counter alias="avail_wcell_in_power_saving_1">nvl(sum(avail_wcell_in_power_saving),0)</counter>
			<counter alias="denom_edch_macd_bgr_1">nvl(sum(denom_edch_macd_bgr),0)</counter>
			<counter alias="denom_edch_macd_intera_1">nvl(sum(denom_edch_macd_intera),0)</counter>
			<counter alias="denom_edch_macd_strea_1">nvl(sum(denom_edch_macd_strea),0)</counter>
			<counter alias="denom_hsdpa_users_per_cell_1">nvl(sum(denom_hsdpa_users_per_cell),0)</counter>
			<counter alias="denom_hsdsch_macd_bgr_1">nvl(sum(denom_hsdsch_macd_bgr),0)</counter>
			<counter alias="denom_hsdsch_macd_intera_1">nvl(sum(denom_hsdsch_macd_intera),0)</counter>
			<counter alias="denom_hsdsch_macd_strea_1">nvl(sum(denom_hsdsch_macd_strea),0)</counter>
			<counter alias="denom_hsupa_users_per_cell_1">nvl(sum(denom_hsupa_users_per_cell),0)</counter>
			<counter alias="dura_hsdpa_users_17_or_18_1">nvl(sum(dura_hsdpa_users_17_or_18),0)</counter>
			<counter alias="dura_hsdpa_users_1_1">nvl(sum(dura_hsdpa_users_1),0)</counter>
			<counter alias="dura_hsdpa_users_3_1">nvl(sum(dura_hsdpa_users_3),0)</counter>
			<counter alias="dura_hsdpa_users_49_to_52_1">nvl(sum(dura_hsdpa_users_49_to_52),0)</counter>
			<counter alias="dura_hsdpa_users_53_to_56_1">nvl(sum(dura_hsdpa_users_53_to_56),0)</counter>
			<counter alias="dura_hsdpa_users_57_to_60_1">nvl(sum(dura_hsdpa_users_57_to_60),0)</counter>
			<counter alias="dura_hsdpa_users_61_to_64_1">nvl(sum(dura_hsdpa_users_61_to_64),0)</counter>
			<counter alias="dura_hsdpa_users_65_to_72_1">nvl(sum(dura_hsdpa_users_65_to_72),0)</counter>
			<counter alias="dura_hsupa_users_21_to_24_1">nvl(sum(dura_hsupa_users_21_to_24),0)</counter>
			<counter alias="dura_hsupa_users_25_to_28_1">nvl(sum(dura_hsupa_users_25_to_28),0)</counter>
			<counter alias="dura_hsupa_users_29_to_32_1">nvl(sum(dura_hsupa_users_29_to_32),0)</counter>
			<counter alias="dura_hsupa_users_33_to_36_1">nvl(sum(dura_hsupa_users_33_to_36),0)</counter>
			<counter alias="dura_hsupa_users_37_to_40_1">nvl(sum(dura_hsupa_users_37_to_40),0)</counter>
			<counter alias="dura_hsupa_users_41_to_44_1">nvl(sum(dura_hsupa_users_41_to_44),0)</counter>
			<counter alias="dura_hsupa_users_45_to_48_1">nvl(sum(dura_hsupa_users_45_to_48),0)</counter>
			<counter alias="dura_hsupa_users_49_to_52_1">nvl(sum(dura_hsupa_users_49_to_52),0)</counter>
			<counter alias="dura_hsupa_users_53_to_56_1">nvl(sum(dura_hsupa_users_53_to_56),0)</counter>
			<counter alias="dura_hsupa_users_57_to_60_1">nvl(sum(dura_hsupa_users_57_to_60),0)</counter>
			<counter alias="dura_hsupa_users_61_to_64_1">nvl(sum(dura_hsupa_users_61_to_64),0)</counter>
			<counter alias="dura_hsupa_users_65_to_72_1">nvl(sum(dura_hsupa_users_65_to_72),0)</counter>
			<counter alias="dur_hsdpa_no_users_1">nvl(sum(dur_hsdpa_no_users),0)</counter>
			<counter alias="dur_hsdpa_users_11_or_12_1">nvl(sum(dur_hsdpa_users_11_or_12),0)</counter>
			<counter alias="dur_hsdpa_users_13_or_14_1">nvl(sum(dur_hsdpa_users_13_or_14),0)</counter>
			<counter alias="dur_hsdpa_users_15_or_16_1">nvl(sum(dur_hsdpa_users_15_or_16),0)</counter>
			<counter alias="dur_hsdpa_users_1_or_2_1">nvl(sum(dur_hsdpa_users_1_or_2),0)</counter>
			<counter alias="dur_hsdpa_users_3_or_4_1">nvl(sum(dur_hsdpa_users_3_or_4),0)</counter>
			<counter alias="dur_hsdpa_users_5_or_6_1">nvl(sum(dur_hsdpa_users_5_or_6),0)</counter>
			<counter alias="dur_hsdpa_users_7_or_8_1">nvl(sum(dur_hsdpa_users_7_or_8),0)</counter>
			<counter alias="dur_hsdpa_users_9_or_10_1">nvl(sum(dur_hsdpa_users_9_or_10),0)</counter>
			<counter alias="dur_hsupa_users_1_1">nvl(sum(dur_hsupa_users_1),0)</counter>
			<counter alias="dur_hsupa_users_3_1">nvl(sum(dur_hsupa_users_3),0)</counter>
			<counter alias="max_hsdpa_users_in_cell_1">nvl(max(max_hsdpa_users_in_cell),0)</counter>
			<counter alias="max_hsupa_users_in_cell_1">nvl(max(max_hsupa_users_in_cell),0)</counter>
			<counter alias="rb_downgr_due_pbs_interf_ul_1">nvl(sum(rb_downgr_due_pbs_interf_ul),0)</counter>
			<counter alias="rb_release_due_pbs_interf_ul_1">nvl(sum(rb_release_due_pbs_interf_ul),0)</counter>
			<counter alias="rb_rel_due_pre_emp_intf_ul_1">nvl(sum(rb_rel_due_pre_emp_intf_ul),0)</counter>
			<counter alias="rtwp_class_0_1">nvl(sum(rtwp_class_0),0)</counter>
			<counter alias="rtwp_class_10_1">nvl(sum(rtwp_class_10),0)</counter>
			<counter alias="rtwp_class_11_1">nvl(sum(rtwp_class_11),0)</counter>
			<counter alias="rtwp_class_12_1">nvl(sum(rtwp_class_12),0)</counter>
			<counter alias="rtwp_class_13_1">nvl(sum(rtwp_class_13),0)</counter>
			<counter alias="rtwp_class_14_1">nvl(sum(rtwp_class_14),0)</counter>
			<counter alias="rtwp_class_15_1">nvl(sum(rtwp_class_15),0)</counter>
			<counter alias="rtwp_class_16_1">nvl(sum(rtwp_class_16),0)</counter>
			<counter alias="rtwp_class_17_1">nvl(sum(rtwp_class_17),0)</counter>
			<counter alias="rtwp_class_18_1">nvl(sum(rtwp_class_18),0)</counter>
			<counter alias="rtwp_class_19_1">nvl(sum(rtwp_class_19),0)</counter>
			<counter alias="rtwp_class_1_1">nvl(sum(rtwp_class_1),0)</counter>
			<counter alias="rtwp_class_20_1">nvl(sum(rtwp_class_20),0)</counter>
			<counter alias="rtwp_class_21_1">nvl(sum(rtwp_class_21),0)</counter>
			<counter alias="rtwp_class_2_1">nvl(sum(rtwp_class_2),0)</counter>
			<counter alias="rtwp_class_3_1">nvl(sum(rtwp_class_3),0)</counter>
			<counter alias="rtwp_class_4_1">nvl(sum(rtwp_class_4),0)</counter>
			<counter alias="rtwp_class_5_1">nvl(sum(rtwp_class_5),0)</counter>
			<counter alias="rtwp_class_6_1">nvl(sum(rtwp_class_6),0)</counter>
			<counter alias="rtwp_class_7_1">nvl(sum(rtwp_class_7),0)</counter>
			<counter alias="rtwp_class_8_1">nvl(sum(rtwp_class_8),0)</counter>
			<counter alias="rtwp_class_9_1">nvl(sum(rtwp_class_9),0)</counter>
			<counter alias="sum_edch_macd_bgr_1">nvl(sum(sum_edch_macd_bgr),0)</counter>
			<counter alias="sum_edch_macd_intera_1">nvl(sum(sum_edch_macd_intera),0)</counter>
			<counter alias="sum_edch_macd_strea_1">nvl(sum(sum_edch_macd_strea),0)</counter>
			<counter alias="sum_hsdpa_users_in_cell_1">nvl(sum(sum_hsdpa_users_in_cell),0)</counter>
			<counter alias="sum_hsdsch_macd_bgr_1">nvl(sum(sum_hsdsch_macd_bgr),0)</counter>
			<counter alias="sum_hsdsch_macd_intera_1">nvl(sum(sum_hsdsch_macd_intera),0)</counter>
			<counter alias="sum_hsdsch_macd_strea_1">nvl(sum(sum_hsdsch_macd_strea),0)</counter>
			<counter alias="sum_hsupa_users_in_cell_1">nvl(sum(sum_hsupa_users_in_cell),0)</counter>
			<counter alias="tx_code_pwr_class_0_1">nvl(sum(tx_code_pwr_class_0),0)</counter>
			<counter alias="tx_code_pwr_class_1_1">nvl(sum(tx_code_pwr_class_1),0)</counter>
			<counter alias="tx_code_pwr_class_2_1">nvl(sum(tx_code_pwr_class_2),0)</counter>
			<counter alias="tx_code_pwr_class_3_1">nvl(sum(tx_code_pwr_class_3),0)</counter>
			<counter alias="tx_code_pwr_class_4_1">nvl(sum(tx_code_pwr_class_4),0)</counter>
			<counter alias="tx_code_pwr_class_5_1">nvl(sum(tx_code_pwr_class_5),0)</counter>
			<counter alias="tx_code_pwr_class_6_1">nvl(sum(tx_code_pwr_class_6),0)</counter>
			<counter alias="tx_code_pwr_class_7_1">nvl(sum(tx_code_pwr_class_7),0)</counter>
			<counter alias="tx_code_pwr_class_8_1">nvl(sum(tx_code_pwr_class_8),0)</counter>
			<counter alias="tx_code_pwr_class_9_1">nvl(sum(tx_code_pwr_class_9),0)</counter>
			<counter alias="tx_cr_pwr_class_0_1">nvl(sum(tx_cr_pwr_class_0),0)</counter>
			<counter alias="tx_cr_pwr_class_10_1">nvl(sum(tx_cr_pwr_class_10),0)</counter>
			<counter alias="tx_cr_pwr_class_1_1">nvl(sum(tx_cr_pwr_class_1),0)</counter>
			<counter alias="tx_cr_pwr_class_2_1">nvl(sum(tx_cr_pwr_class_2),0)</counter>
			<counter alias="tx_cr_pwr_class_3_1">nvl(sum(tx_cr_pwr_class_3),0)</counter>
			<counter alias="tx_cr_pwr_class_4_1">nvl(sum(tx_cr_pwr_class_4),0)</counter>
			<counter alias="tx_cr_pwr_class_5_1">nvl(sum(tx_cr_pwr_class_5),0)</counter>
			<counter alias="tx_cr_pwr_class_6_1">nvl(sum(tx_cr_pwr_class_6),0)</counter>
			<counter alias="tx_cr_pwr_class_7_1">nvl(sum(tx_cr_pwr_class_7),0)</counter>
			<counter alias="tx_cr_pwr_class_8_1">nvl(sum(tx_cr_pwr_class_8),0)</counter>
			<counter alias="tx_cr_pwr_class_9_1">nvl(sum(tx_cr_pwr_class_9),0)</counter>
			<counter alias="wcell_power_saving_mode_act_1">nvl(sum(wcell_power_saving_mode_act),0)</counter>
			<counter alias="dura_hsupa_users_97_to_112_1">nvl(SUM(DURA_HSUPA_USERS_97_TO_112),0)</counter>
			<counter alias="ave_resid_ul_power_1">nvl(ROUND(DECODE(NVL(SUM(RESID_UL_POWER_SAMPLES),0),0,0,10*LOG(10,(SUM(RESID_UL_POWER_SAMPLES*(POWER(10,(AVE_RESID_UL_POWER/10))/1000))/SUM(RESID_UL_POWER_SAMPLES))*1000)),3),0)</counter>
			<counter alias="dura_hsdpa_users_81_to_96_1">nvl(SUM(DURA_HSDPA_USERS_81_TO_96),0)</counter>
			<counter alias="dura_hsdpa_users_73_to_80_1">nvl(SUM(DURA_HSDPA_USERS_73_TO_80),0)</counter>
			<counter alias="dura_hsupa_users_73_to_80_1">nvl(SUM(DURA_HSUPA_USERS_73_TO_80),0)</counter>
			<counter alias="max_avail_r99_dl_code_1">nvl(MAX(MAX_AVAIL_R99_DL_CODE),0)</counter>
			<counter alias="dura_hsupa_users_81_to_96_1">nvl(SUM(DURA_HSUPA_USERS_81_TO_96),0)</counter>
			<counter alias="max_hsupa_users_in_serv_cell_1">nvl(MAX(MAX_HSUPA_USERS_IN_SERV_CELL),0)</counter>
			<counter alias="dura_hsdpa_users_113_or_more_1">nvl(SUM(DURA_HSDPA_USERS_113_OR_MORE),0)</counter>
			<counter alias="cell_resource_spare_6_1">nvl(SUM(CELL_RESOURCE_SPARE_6),0)</counter>
			<counter alias="sum_hsupa_users_in_serv_cell_1">nvl(SUM(SUM_HSUPA_USERS_IN_SERV_CELL),0)</counter>
			<counter alias="dura_hsdpa_users_97_to_112_1">nvl(SUM(DURA_HSDPA_USERS_97_TO_112),0)</counter>
			<counter alias="dura_hsupa_users_113_or_more_1">nvl(SUM(DURA_HSUPA_USERS_113_OR_MORE),0)</counter>
			<counter alias="resid_ul_power_samples_1">nvl(SUM(RESID_UL_POWER_SAMPLES),0)</counter>
			<counter alias="cell_resource_spare_5_1">nvl(SUM(CELL_RESOURCE_SPARE_5),0)</counter>
		</counters>
	</temp_table_ref>
</conf_file>
